plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "checkstyle"
    id "com.github.spotbugs" version "4.7.9"
    id "io.freefair.lombok" version "6.2.0"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"
apply plugin: 'application'

group 'uk.nhs.adaptors'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

application {
    mainClass = 'uk.nhs.adaptors.gpc.GpcFacadeApplication'
}

lombok {
    config['lombok.log.fieldName'] = 'LOGGER'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }

        resources {
            srcDir file('src/integrationTest/resources')
        }
    }
}

configurations {
    integrationTestCompileOnly.extendsFrom testCompileOnly
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
}

tasks.withType(Copy) {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

task integrationTest(type: Test) {
    useJUnitPlatform() {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        shouldRunAfter test
    }
}

spotbugsTest.enabled = false
spotbugsIntegrationTest.enabled = false
spotbugsMain {
    reports {
        html {
            enabled = true
        }
        xml {
            enabled = true
        }
    }
}