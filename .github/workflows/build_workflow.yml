name: GP2GP Sending Adaptor Build Workflow
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  push:
    branches:
      - main

jobs:
  checkstyle-translator:
    name: Checkstyle GP2GP Translator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21 LTS
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Checkstyle
        run: |
          ./gradlew checkStyleMain --parallel
          ./gradlew checkstyleTest --parallel
        working-directory: ./gp2gp-translator

      - name: Collect Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r ./gp2gp-translator/build/reports ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'GP2GP Translator Checkstyle Reports'
          path: ./artifacts/**
          compression-level: 9

      - name: Temporary Artifacts Cleanup
        run: rm -rf ./artifacts

  spotbugs-translator:
    name: Spotbugs GP2GP Translator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21 LTS
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Spotbugs
        run: |
          ./gradlew spotbugsMain --parallel
          ./gradlew spotbugsTest --parallel
        working-directory: ./gp2gp-translator

      - name: Collect Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r ./gp2gp-translator/build/reports ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'GP2GP Translator Spotbugs Reports'
          path: ./artifacts/**
          compression-level: 9

      - name: Temporary Artifacts Cleanup
        run: rm -rf ./artifacts

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [checkstyle-translator, spotbugs-translator]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21 LTS
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Unit Tests
        run: ./gradlew test --parallel --build-cache
        working-directory: ./gp2gp-translator

      - name: Collect Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r ./gp2gp-translator/build/reports ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'GP2GP Translator Unit Test Reports'
          path: ./artifacts/**
          compression-level: 9

      - name: Temporary Artifacts Cleanup
        run: rm -rf ./artifacts

  checkstyle-facade:
    name: Checkstyle GP2GP API Facade
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21 LTS
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Checkstyle
        run: |
          ./gradlew checkStyleMain --parallel
          ./gradlew checkstyleTest --parallel
        working-directory: ./gpc-api-facade

      - name: Collect Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r ./gpc-api-facade/build/reports ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'GPC API Facade Checkstyle Reports'
          path: ./artifacts/**
          compression-level: 9

      - name: Temporary Artifacts Cleanup
        run: rm -rf ./artifacts

  spotbugs-facade:
    name: Spotbugs GP2GP API Facade
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21 LTS
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Spotbugs
        run: |
          ./gradlew spotbugsMain --parallel
          ./gradlew spotbugsTest --parallel
        working-directory: ./gpc-api-facade

      - name: Collect Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r ./gpc-api-facade/build/reports ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'GPC API Facade Spotbugs Reports'
          path: ./artifacts/**
          compression-level: 9

      - name: Temporary Artifacts Cleanup
        run: rm -rf ./artifacts

  unit-tests-facade:
    name: Unit Tests GP2GP API Facade
    runs-on: ubuntu-latest
    needs: [checkstyle-facade, spotbugs-facade]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21 LTS
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Unit Tests
        run: ./gradlew test --parallel --build-cache
        working-directory: ./gpc-api-facade

      - name: Collect Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r ./gpc-api-facade/build/reports ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'GPC API Facade Unit Test Reports'
          path: ./artifacts/**
          compression-level: 9

      - name: Temporary Artifacts Cleanup
        run: rm -rf ./artifacts
