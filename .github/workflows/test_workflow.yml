name: Test Workflow
on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      path:
        required: true
        type: string

jobs:
  checkstyle:
    name: ${{ inputs.name }} Checkstyle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21 LTS
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Checkstyle
        run: |
          ./gradlew checkStyleMain --parallel
          ./gradlew checkstyleTest --parallel
        working-directory: ${{ inputs.path }}

      - name: Collect Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r ./${{ inputs.path }}/build/reports ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: '${{ inputs.name }} Checkstyle Reports'
          path: ./artifacts/**
          compression-level: 9

      - name: Temporary Artifacts Cleanup
        run: rm -rf ./artifacts

  spotbugs:
    name: ${{ inputs.name }} Spotbugs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21 LTS
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Spotbugs
        run: |
          ./gradlew spotbugsMain --parallel
          ./gradlew spotbugsTest --parallel
        working-directory: ${{ inputs.path }}

      - name: Collect Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r ./${{ inputs.path }}/build/reports ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: '${{ inputs.name }} Spotbugs Reports'
          path: ./artifacts/**
          compression-level: 9

      - name: Temporary Artifacts Cleanup
        run: rm -rf ./artifacts

  unit-tests:
    name: ${{ inputs.name }} Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 21 LTS
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Unit Tests
        run: ./gradlew test --parallel --build-cache
        working-directory: ${{ inputs.path }}

      - name: Collect Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp -r ./${{ inputs.path }}/build/reports ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: '${{ inputs.name }} Unit Test Reports'
          path: ./artifacts/**
          compression-level: 9

      - name: Temporary Artifacts Cleanup
        run: rm -rf ./artifacts

  integration_tests:
    name: ${{ inputs.name }} Integration Tests
    needs: [ checkstyle, spotbugs, unit-tests]
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gp2gp_github_action_build_workflow
          aws-region: ${{ secrets.AWS_REGION }}

  mutation-testing:
    name:  ${{ inputs.name }} Mutation Testing
    # Only run on PRs from the repo.
    # PRs from forks will fail due to lack of permissions.
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          # It is important to set a fetch depth of 2, as by default the checkout action makes no history available
          fetch-depth: 2
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'temurin'
          java-version: 21

      - name: run pitest
        working-directory: ${{ inputs.path }}
        run: ./gradlew pitest-github
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}