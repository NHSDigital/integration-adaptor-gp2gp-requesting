package uk.nhs.adaptors.pss.translator.util;


import org.springframework.stereotype.Component;
import uk.nhs.adaptors.pss.translator.model.MeasurementUnit;

import javax.annotation.PostConstruct;
import java.util.ArrayList;
import java.util.List;

@Component
public class MeasurementUnitsUtil {

    private static final List<MeasurementUnit> units = new ArrayList<>();

    @PostConstruct
    private static void createUnits() {
        units.add(new MeasurementUnit("10.L/min","10 liter per minute"));
        units.add(new MeasurementUnit("10.L/(min.m2)","10 liter per minute per square meter"));
        units.add(new MeasurementUnit("10.uN.s/(cm5.m2)","10 micronewton second per centimeter to the fifth power per square meter"));
        units.add(new MeasurementUnit("10*4/uL","10 thousand per microliter"));
        units.add(new MeasurementUnit("10*8","100 million "));
        units.add(new MeasurementUnit("24.h","24 hour"));
        units.add(new MeasurementUnit("{absorbance}","absorbance"));
        units.add(new MeasurementUnit("{activity}","activity"));
        units.add(new MeasurementUnit("[AU]","allergy unit"));
        units.add(new MeasurementUnit("{AHF'U}","American Hospital Formulary unit"));
        units.add(new MeasurementUnit("A","ampere"));
        units.add(new MeasurementUnit("A/m","ampere per meter"));
        units.add(new MeasurementUnit("[arb'U]","arbitrary unit"));
        units.add(new MeasurementUnit("[arb'U]/mL","arbitrary unit per milliliter"));
        units.add(new MeasurementUnit("{ARU}","aspirin response unit"));
        units.add(new MeasurementUnit("atm","atmosphere"));
        units.add(new MeasurementUnit("ag/{cell}","attogram per cell"));
        units.add(new MeasurementUnit("bar","bar"));
        units.add(new MeasurementUnit("Bq","Becquerel"));
        units.add(new MeasurementUnit("[beth'U]","Bethesda unit"));
        units.add(new MeasurementUnit("10*9/L","billion per liter"));
        units.add(new MeasurementUnit("10*9/uL","billion per microliter"));
        units.add(new MeasurementUnit("10*9/mL","billion per milliliter"));
        units.add(new MeasurementUnit("{binding_index}","binding index"));
        units.add(new MeasurementUnit("[bdsk'U]","Bodansky unit"));
        units.add(new MeasurementUnit("{breaths}/min","breaths per minute"));
        units.add(new MeasurementUnit("{CAG_repeats}","CAG trinucleotide repeats"));
        units.add(new MeasurementUnit("cal","calorie"));
        units.add(new MeasurementUnit("{cells}","cells"));
        units.add(new MeasurementUnit("{cells}/[HPF]","cells per high power field"));
        units.add(new MeasurementUnit("{cells}/uL","cells per microliter"));
        units.add(new MeasurementUnit("cg","centigram"));
        units.add(new MeasurementUnit("cL","centiliter"));
        units.add(new MeasurementUnit("cm","centimeter"));
        units.add(new MeasurementUnit("cm[Hg]","centimeter of mercury"));
        units.add(new MeasurementUnit("cm[H2O]","centimeter of water"));
        units.add(new MeasurementUnit("cm[H2O]/L/s","centimeter of water per liter per second"));
        units.add(new MeasurementUnit("cm[H2O]/s/m","centimeter of water per second per meter"));
        units.add(new MeasurementUnit("cm/s","centimeter per second"));
        units.add(new MeasurementUnit("cP","centipoise"));
        units.add(new MeasurementUnit("cSt","centistoke"));
        units.add(new MeasurementUnit("{delta_OD}","change in (delta) optical density"));
        units.add(new MeasurementUnit("{clock_time}","clock time e.g 12:30PM"));
        units.add(new MeasurementUnit("[CFU]","colony forming unit"));
        units.add(new MeasurementUnit("[CFU]/L","colony forming unit per liter"));
        units.add(new MeasurementUnit("[CFU]/mL","colony forming unit per milliliter"));
        units.add(new MeasurementUnit("{CAE'U}","complement activity enzyme unit"));
        units.add(new MeasurementUnit("{CH100'U}","complement CH100 unit"));
        units.add(new MeasurementUnit("{copies}","copies"));
        units.add(new MeasurementUnit("{copies}/ug","copies per microgram"));
        units.add(new MeasurementUnit("{copies}/mL","copies per milliliter"));
        units.add(new MeasurementUnit("{count}","count"));
        units.add(new MeasurementUnit("{CPM}","counts per minute"));
        units.add(new MeasurementUnit("{CPM}/10*3{cell}","counts per minute per thousand cells"));
        units.add(new MeasurementUnit("cm3","cubic centimeter"));
        units.add(new MeasurementUnit("[cin_i]","cubic inch (international)"));
        units.add(new MeasurementUnit("m3/s","cubic meter per second"));
        units.add(new MeasurementUnit("{Ct_value}","Cycle threshold value"));
        units.add(new MeasurementUnit("d","day"));
        units.add(new MeasurementUnit("d/(7.d)","day per 7 day"));
        units.add(new MeasurementUnit("d/wk","days per week"));
        units.add(new MeasurementUnit("dB","decibel"));
        units.add(new MeasurementUnit("dg","decigram"));
        units.add(new MeasurementUnit("dL","deciliter"));
        units.add(new MeasurementUnit("dm","decimeter"));
        units.add(new MeasurementUnit("deg","degree (plane angle)"));
        units.add(new MeasurementUnit("Cel","degree Celsius"));
        units.add(new MeasurementUnit("[degF]","degree Fahrenheit"));
        units.add(new MeasurementUnit("K","degree Kelvin"));
        units.add(new MeasurementUnit("K/W","degree Kelvin per Watt"));
        units.add(new MeasurementUnit("deg/s","degree per second"));
        units.add(new MeasurementUnit("daL/min","dekaliter per minute"));
        units.add(new MeasurementUnit("daL/min/m2","dekaliter per minute per square meter"));
        units.add(new MeasurementUnit("{dilution}","dilution"));
        units.add(new MeasurementUnit("[diop]","diopter"));
        units.add(new MeasurementUnit("[dr_av]","dram  (US and British)"));
        units.add(new MeasurementUnit("[drp]","drop (1/12 milliliter)"));
        units.add(new MeasurementUnit("dyn.s/cm","dyne second per centimeter"));
        units.add(new MeasurementUnit("dyn.s/(cm.m2)","dyne second per centimeter per square meter"));
        units.add(new MeasurementUnit("{Ehrlich'U}","Ehrlich unit"));
        units.add(new MeasurementUnit("{Ehrlich'U}/100.g","Ehrlich unit per 100 gram"));
        units.add(new MeasurementUnit("{Ehrlich'U}/(2.h)","Ehrlich unit per 2 hour"));
        units.add(new MeasurementUnit("{Ehrlich'U}/d","Ehrlich unit per day"));
        units.add(new MeasurementUnit("{Ehrlich'U}/dL","Ehrlich unit per deciliter"));
        units.add(new MeasurementUnit("{EIA_index}","EIA index"));
        units.add(new MeasurementUnit("{EIA_titer}","EIA titer"));
        units.add(new MeasurementUnit("{EIA'U}","EIA unit"));
        units.add(new MeasurementUnit("{EIA'U}/U","EIA unit per enzyme unit"));
        units.add(new MeasurementUnit("{EV}","EIA value"));
        units.add(new MeasurementUnit("eV","electron Volt"));
        units.add(new MeasurementUnit("{ELISA'U}","ELISA unit"));
        units.add(new MeasurementUnit("U","enzyme unit"));
        units.add(new MeasurementUnit("U/10","enzyme unit per 10"));
        units.add(new MeasurementUnit("U/10*10","enzyme unit per 10 billion"));
        units.add(new MeasurementUnit("U/10*10{cells}","enzyme unit per 10 billion cells"));
        units.add(new MeasurementUnit("U/(10.g){feces}","enzyme unit per 10 gram of feces"));
        units.add(new MeasurementUnit("U/(12.h)","enzyme unit per 12 hour"));
        units.add(new MeasurementUnit("U/(2.h)","enzyme unit per 2 hour"));
        units.add(new MeasurementUnit("U/(24.h)","enzyme unit per 24 hour"));
        units.add(new MeasurementUnit("U/10*9","enzyme unit per billion"));
        units.add(new MeasurementUnit("U/d","enzyme unit per day"));
        units.add(new MeasurementUnit("U/dL","enzyme unit per deciliter"));
        units.add(new MeasurementUnit("U/g","enzyme unit per gram"));
        units.add(new MeasurementUnit("U/g{creat}","enzyme unit per gram of creatinine"));
        units.add(new MeasurementUnit("U/g{Hb}","enzyme unit per gram of hemoglobin"));
        units.add(new MeasurementUnit("U/g{protein}","enzyme unit per gram of protein"));
        units.add(new MeasurementUnit("U/h","enzyme unit per hour"));
        units.add(new MeasurementUnit("U/kg{Hb}","enzyme unit per kilogram of hemoglobin"));
        units.add(new MeasurementUnit("U/L","enzyme unit per liter"));
        units.add(new MeasurementUnit("U{25Cel}/L","enzyme unit per liter at 25 deg Celsius "));
        units.add(new MeasurementUnit("U{37Cel}/L","enzyme unit per liter at 37 deg Celsius"));
        units.add(new MeasurementUnit("U/mL","enzyme unit per milliliter"));
        units.add(new MeasurementUnit("U/mL{RBCs}","enzyme unit per milliliter of red blood cells"));
        units.add(new MeasurementUnit("U/mmol{creat}","enzyme unit per millimole of creatinine"));
        units.add(new MeasurementUnit("U/10*6","enzyme unit per million"));
        units.add(new MeasurementUnit("U/min","enzyme unit per minute"));
        units.add(new MeasurementUnit("U/s","enzyme unit per second"));
        units.add(new MeasurementUnit("U/10*12","enzyme unit per trillion"));
        units.add(new MeasurementUnit("U/10*12{RBCs}","enzyme unit per trillion red blood cells"));
        units.add(new MeasurementUnit("eq","equivalent"));
        units.add(new MeasurementUnit("eq/L","equivalent per liter"));
        units.add(new MeasurementUnit("eq/umol","equivalent per micromole"));
        units.add(new MeasurementUnit("eq/mL","equivalent per milliliter"));
        units.add(new MeasurementUnit("eq/mmol","equivalent per millimole"));
        units.add(new MeasurementUnit("erg","erg"));
        units.add(new MeasurementUnit("F","Farad"));
        units.add(new MeasurementUnit("[ft_us]/[ft_us]","feet (US) per feet (US)"));
        units.add(new MeasurementUnit("fg","femtogram"));
        units.add(new MeasurementUnit("fL","femtoliter"));
        units.add(new MeasurementUnit("fm","femtometer"));
        units.add(new MeasurementUnit("fmol","femtomole"));
        units.add(new MeasurementUnit("fmol/g","femtomole per gram"));
        units.add(new MeasurementUnit("fmol/L","femtomole per liter"));
        units.add(new MeasurementUnit("fmol/mg","femtomole per milligram"));
        units.add(new MeasurementUnit("fmol/mg{cyt_prot}","femtomole per milligram of cytosol protein"));
        units.add(new MeasurementUnit("fmol/mg{prot}","femtomole per milligram of protein"));
        units.add(new MeasurementUnit("fmol/mL","femtomole per milliliter"));
        units.add(new MeasurementUnit("[foz_us]","fluid ounce (US)"));
        units.add(new MeasurementUnit("{FIU}","fluorescent intensity unit"));
        units.add(new MeasurementUnit("[ft_i]","foot (international)"));
        units.add(new MeasurementUnit("{fraction}","fraction"));
        units.add(new MeasurementUnit("[Ch]","French (catheter gauge) "));
        units.add(new MeasurementUnit("{GAA_repeats}","GAA trinucleotide repeats"));
        units.add(new MeasurementUnit("[gal_us]","gallon (US)"));
        units.add(new MeasurementUnit("{genomes}/mL","genomes per milliliter"));
        units.add(new MeasurementUnit("{Globules}/[HPF]","globules (drops)  per high power field"));
        units.add(new MeasurementUnit("g","gram"));
        units.add(new MeasurementUnit("g.m","gram meter"));
        units.add(new MeasurementUnit("g.m/{beat}","gram meter per heart beat "));
        units.add(new MeasurementUnit("g{creat}","gram of creatinine"));
        units.add(new MeasurementUnit("g{Hb}","gram of hemoglobin"));
        units.add(new MeasurementUnit("g{total_nit}","gram of total nitrogen"));
        units.add(new MeasurementUnit("g{total_prot}","gram of total protein"));
        units.add(new MeasurementUnit("g{wet_tissue}","gram of wet tissue"));
        units.add(new MeasurementUnit("g/kg/(8.h)","gram per  kilogram per 8 hour "));
        units.add(new MeasurementUnit("g/(100.g)","gram per 100 gram"));
        units.add(new MeasurementUnit("g/(12.h)","gram per 12 hour"));
        units.add(new MeasurementUnit("g/(24.h)","gram per 24 hour"));
        units.add(new MeasurementUnit("g/(3.d)","gram per 3 days"));
        units.add(new MeasurementUnit("g/(4.h)","gram per 4 hour"));
        units.add(new MeasurementUnit("g/(48.h)","gram per 48 hour"));
        units.add(new MeasurementUnit("g/(5.h)","gram per 5 hour"));
        units.add(new MeasurementUnit("g/(6.h)","gram per 6 hour"));
        units.add(new MeasurementUnit("g/(72.h)","gram per 72 hour"));
        units.add(new MeasurementUnit("g/(8.h){shift}","gram per 8 hour shift"));
        units.add(new MeasurementUnit("g/cm3","gram per cubic centimeter"));
        units.add(new MeasurementUnit("g/d","gram per day"));
        units.add(new MeasurementUnit("g/dL","gram per deciliter"));
        units.add(new MeasurementUnit("g/g","gram per gram"));
        units.add(new MeasurementUnit("g/g{creat}","gram per gram of creatinine"));
        units.add(new MeasurementUnit("g/g{globulin}","gram per gram of globulin"));
        units.add(new MeasurementUnit("g/g{tissue}","gram per gram of tissue"));
        units.add(new MeasurementUnit("g/h","gram per hour"));
        units.add(new MeasurementUnit("g/h/m2","gram per hour per square meter"));
        units.add(new MeasurementUnit("g/kg","gram per kilogram"));
        units.add(new MeasurementUnit("g/kg/(8.h){shift}","gram per kilogram per 8 hour shift"));
        units.add(new MeasurementUnit("g/kg/d","gram per kilogram per day"));
        units.add(new MeasurementUnit("g/kg/h","gram per kilogram per hour"));
        units.add(new MeasurementUnit("g/kg/min","gram per kilogram per minute"));
        units.add(new MeasurementUnit("g/L","gram per liter"));
        units.add(new MeasurementUnit("g/mg","gram per milligram"));
        units.add(new MeasurementUnit("g/mL","gram per milliliter"));
        units.add(new MeasurementUnit("g/mmol","gram per millimole"));
        units.add(new MeasurementUnit("g/min","gram per minute"));
        units.add(new MeasurementUnit("g/mol{creat}","gram per mole of creatinine"));
        units.add(new MeasurementUnit("g/{specimen}","gram per specimen"));
        units.add(new MeasurementUnit("g/cm2","gram per square centimeter"));
        units.add(new MeasurementUnit("g/m2","gram per square meter"));
        units.add(new MeasurementUnit("g/{total_output}","gram per total output"));
        units.add(new MeasurementUnit("g/{total_weight}","gram per total weight"));
        units.add(new MeasurementUnit("Gy","Gray"));
        units.add(new MeasurementUnit("{beats}/min","heart beats per minute"));
        units.add(new MeasurementUnit("H","Henry"));
        units.add(new MeasurementUnit("Hz","Hertz"));
        units.add(new MeasurementUnit("[HPF]","high power field"));
        units.add(new MeasurementUnit("h","hour"));
        units.add(new MeasurementUnit("h/d","hour per day"));
        units.add(new MeasurementUnit("h/wk","hour per week"));
        units.add(new MeasurementUnit("[APL'U]/mL","IgA anticardiolipin unit per milliliter**"));
        units.add(new MeasurementUnit("[APL'U]","IgA anticardiolipin unit**"));
        units.add(new MeasurementUnit("{APS'U}","IgA antiphosphatidylserine unit "));
        units.add(new MeasurementUnit("[GPL'U]/mL","IgG anticardiolipin unit per milliliter**"));
        units.add(new MeasurementUnit("[GPL'U]","IgG anticardiolipin unit**"));
        units.add(new MeasurementUnit("{GPS'U}","IgG antiphosphatidylserine unit"));
        units.add(new MeasurementUnit("[MPL'U]/mL","IgM anticardiolipin unit per milliliter**"));
        units.add(new MeasurementUnit("[MPL'U]","IgM anticardiolipin unit**"));
        units.add(new MeasurementUnit("{MPS'U}","IgM antiphosphatidylserine unit"));
        units.add(new MeasurementUnit("{MPS'U}/mL","IgM antiphosphatidylserine unit per milliliter"));
        units.add(new MeasurementUnit("{ImmuneComplex'U}","immune complex unit"));
        units.add(new MeasurementUnit("{ISR}","immune status ratio"));
        units.add(new MeasurementUnit("{IFA_index}","immunofluorescence assay index"));
        units.add(new MeasurementUnit("{IFA_titer}","Immunofluorescence assay titer"));
        units.add(new MeasurementUnit("[in_i]","inch (international)"));
        units.add(new MeasurementUnit("[in_i'H2O]","inch (international) of water"));
        units.add(new MeasurementUnit("[in_us]","inches (US)"));
        units.add(new MeasurementUnit("{index_val}","index value"));
        units.add(new MeasurementUnit("{index}","index value"));
        units.add(new MeasurementUnit("{HA_titer}","influenza hemagglutination titer"));
        units.add(new MeasurementUnit("{INR}","international normalized ratio"));
        units.add(new MeasurementUnit("[IU]","international unit"));
        units.add(new MeasurementUnit("[IU]/(2.h)","international unit per 2 hour"));
        units.add(new MeasurementUnit("[IU]/(24.h)","international unit per 24 hour"));
        units.add(new MeasurementUnit("[IU]/10*9{RBCs}","international unit per billion red blood cells"));
        units.add(new MeasurementUnit("[IU]/d","international unit per day"));
        units.add(new MeasurementUnit("[IU]/dL","international unit per deciliter"));
        units.add(new MeasurementUnit("[IU]/g","international unit per gram"));
        units.add(new MeasurementUnit("[IU]/g{Hb}","international unit per gram of hemoglobin"));
        units.add(new MeasurementUnit("[IU]/h","international unit per hour"));
        units.add(new MeasurementUnit("[IU]/kg","international unit per kilogram"));
        units.add(new MeasurementUnit("[IU]/kg/d","international unit per kilogram per day"));
        units.add(new MeasurementUnit("[IU]/L","international unit per liter"));
        units.add(new MeasurementUnit("[IU]/L{37Cel}","international unit per liter at 37 degrees Celsius"));
        units.add(new MeasurementUnit("[IU]/mg{creat}","international unit per milligram of creatinine"));
        units.add(new MeasurementUnit("[IU]/mL","international unit per milliliter"));
        units.add(new MeasurementUnit("[IU]/min","international unit per minute"));
        units.add(new MeasurementUnit("J","joule"));
        units.add(new MeasurementUnit("J/L","joule per liter"));
        units.add(new MeasurementUnit("{JDF'U}","Juvenile Diabetes Foundation unit"));
        units.add(new MeasurementUnit("{JDF'U}/L","Juvenile Diabetes Foundation unit per liter"));
        units.add(new MeasurementUnit("{KCT'U}","kaolin clotting time"));
        units.add(new MeasurementUnit("kat","katal"));
        units.add(new MeasurementUnit("kat/kg","katal per kilogram"));
        units.add(new MeasurementUnit("kat/L","katal per liter"));
        units.add(new MeasurementUnit("kU","kilo enzyme unit"));
        units.add(new MeasurementUnit("kU/g","kilo enzyme unit per gram"));
        units.add(new MeasurementUnit("kU/L","kilo enzyme unit per liter"));
        units.add(new MeasurementUnit("kU/L{class}","kilo enzyme unit per liter class"));
        units.add(new MeasurementUnit("kU/mL","kilo enzyme unit per milliliter"));
        units.add(new MeasurementUnit("k[IU]/L","kilo international unit per liter"));
        units.add(new MeasurementUnit("k[IU]/mL","kilo international unit per milliliter"));
        units.add(new MeasurementUnit("kcal","kilocalorie"));
        units.add(new MeasurementUnit("kcal/(24.h)","kilocalorie per 24 hour"));
        units.add(new MeasurementUnit("kcal/d","kilocalorie per day"));
        units.add(new MeasurementUnit("kcal/h","kilocalorie per hour"));
        units.add(new MeasurementUnit("kcal/kg/(24.h)","kilocalorie per kilogram per 24 hour"));
        units.add(new MeasurementUnit("kcal/[oz_av]","kilocalorie per ounce (US & British)"));
        units.add(new MeasurementUnit("kg","kilogram"));
        units.add(new MeasurementUnit("kg.m/s","kilogram meter per second"));
        units.add(new MeasurementUnit("kg/m3","kilogram per cubic meter"));
        units.add(new MeasurementUnit("kg/h","kilogram per hour"));
        units.add(new MeasurementUnit("kg/L","kilogram per liter"));
        units.add(new MeasurementUnit("kg/min","kilogram per minute"));
        units.add(new MeasurementUnit("kg/mol","kilogram per mole"));
        units.add(new MeasurementUnit("kg/s","kilogram per second"));
        units.add(new MeasurementUnit("kg/(s.m2)","kilogram per second per square meter"));
        units.add(new MeasurementUnit("kg/m2","kilogram per square meter"));
        units.add(new MeasurementUnit("kL","kiloliter"));
        units.add(new MeasurementUnit("km","kilometer"));
        units.add(new MeasurementUnit("kPa","kilopascal"));
        units.add(new MeasurementUnit("ks","kilosecond"));
        units.add(new MeasurementUnit("[ka'U]","King Armstrong unit"));
        units.add(new MeasurementUnit("{KRONU'U}/mL","Kronus unit per milliliter"));
        units.add(new MeasurementUnit("[knk'U]","Kunkel unit"));
        units.add(new MeasurementUnit("L","liter"));
        units.add(new MeasurementUnit("L/(24.h)","liter per 24 hour"));
        units.add(new MeasurementUnit("L/(8.h)","liter per 8 hour"));
        units.add(new MeasurementUnit("L/d","liter per day"));
        units.add(new MeasurementUnit("L/h","liter per hour"));
        units.add(new MeasurementUnit("L/kg","liter per kilogram"));
        units.add(new MeasurementUnit("L/L","liter per liter"));
        units.add(new MeasurementUnit("L/min","liter per minute"));
        units.add(new MeasurementUnit("L/min/m2","liter per minute per sqaure meter"));
        units.add(new MeasurementUnit("L/(min.m2)","liter per minute per square meter"));
        units.add(new MeasurementUnit("L/s","liter per second"));
        units.add(new MeasurementUnit("L/s/s2","liter per second per square second"));
        units.add(new MeasurementUnit("{Log_copies}/mL","log (base 10) copies per milliliter"));
        units.add(new MeasurementUnit("{Log_IU}","log (base 10) international unit"));
        units.add(new MeasurementUnit("{Log_IU}/mL","log (base 10) international unit per milliliter"));
        units.add(new MeasurementUnit("{Log}","log base 10"));
        units.add(new MeasurementUnit("[LPF]","low power field"));
        units.add(new MeasurementUnit("lm","lumen"));
        units.add(new MeasurementUnit("lm.m2","lumen square meter"));
        units.add(new MeasurementUnit("{Lyme_index_value}","Lyme index value"));
        units.add(new MeasurementUnit("[mclg'U]","Maclagan unit"));
        units.add(new MeasurementUnit("Ms","megasecond"));
        units.add(new MeasurementUnit("[MET].min/wk","metabolic equivalent minute per week"));
        units.add(new MeasurementUnit("m","meter"));
        units.add(new MeasurementUnit("m/s","meter per second"));
        units.add(new MeasurementUnit("m/s2","meter per square second"));
        units.add(new MeasurementUnit("t","metric ton"));
        units.add(new MeasurementUnit("uU/g","micro enzyme unit per gram"));
        units.add(new MeasurementUnit("uU/L","micro enzyme unit per liter"));
        units.add(new MeasurementUnit("uU/mL","micro enzyme unit per milliliter"));
        units.add(new MeasurementUnit("u[IU]","micro international unit"));
        units.add(new MeasurementUnit("u[IU]/mL","micro international unit per milliliter"));
        units.add(new MeasurementUnit("ueq","microequivalent"));
        units.add(new MeasurementUnit("ueq/L","microequivalent per liter"));
        units.add(new MeasurementUnit("ueq/mL","microequivalent per milliliter"));
        units.add(new MeasurementUnit("ug","microgram"));
        units.add(new MeasurementUnit("ug/g{feces}","microgram  per gram of feces"));
        units.add(new MeasurementUnit("ug{FEU}/mL","microgram fibrinogen equivalent unit per milliliter"));
        units.add(new MeasurementUnit("ug/(100.g)","microgram per 100 gram"));
        units.add(new MeasurementUnit("ug/(24.h)","microgram per 24 hour"));
        units.add(new MeasurementUnit("ug/(8.h)","microgram per 8 hour"));
        units.add(new MeasurementUnit("ug/m3","microgram per cubic meter"));
        units.add(new MeasurementUnit("ug/d","microgram per day"));
        units.add(new MeasurementUnit("ug/dL","microgram per deciliter"));
        units.add(new MeasurementUnit("ug/dL{RBCs}","microgram per deciliter of red blood cells"));
        units.add(new MeasurementUnit("ug/g","microgram per gram"));
        units.add(new MeasurementUnit("ug/g{creat}","microgram per gram of creatinine"));
        units.add(new MeasurementUnit("ug/g{dry_tissue}","microgram per gram of dry tissue"));
        units.add(new MeasurementUnit("ug/g{dry_wt}","microgram per gram of dry weight"));
        units.add(new MeasurementUnit("ug/g{hair}","microgram per gram of hair"));
        units.add(new MeasurementUnit("ug/g{Hb}","microgram per gram of hemoglobin"));
        units.add(new MeasurementUnit("ug/g{tissue}","microgram per gram of tissue"));
        units.add(new MeasurementUnit("ug/h","microgram per hour"));
        units.add(new MeasurementUnit("ug/kg","microgram per kilogram"));
        units.add(new MeasurementUnit("ug/kg/(8.h)","microgram per kilogram per 8 hour"));
        units.add(new MeasurementUnit("ug/kg/d","microgram per kilogram per day"));
        units.add(new MeasurementUnit("ug/kg/h","microgram per kilogram per hour"));
        units.add(new MeasurementUnit("ug/kg/min","microgram per kilogram per minute"));
        units.add(new MeasurementUnit("ug/L","microgram per liter"));
        units.add(new MeasurementUnit("ug/L{RBCs}","microgram per liter of red blood cells"));
        units.add(new MeasurementUnit("ug/L/(24.h)","microgram per liter per 24 hour"));
        units.add(new MeasurementUnit("ug/mg","microgram per milligram"));
        units.add(new MeasurementUnit("ug/mg{creat}","microgram per milligram of creatinine"));
        units.add(new MeasurementUnit("ug/mL","microgram per milliliter"));
        units.add(new MeasurementUnit("ug/mL{class}","microgram per milliliter class"));
        units.add(new MeasurementUnit("ug/mL{eqv}","microgram per milliliter equivalent"));
        units.add(new MeasurementUnit("ug/mmol","microgram per millimole"));
        units.add(new MeasurementUnit("ug/mmol{creat}","microgram per millimole of creatinine"));
        units.add(new MeasurementUnit("ug/min","microgram per minute"));
        units.add(new MeasurementUnit("ug/ng","microgram per nanogram"));
        units.add(new MeasurementUnit("ug/{specimen}","microgram per specimen"));
        units.add(new MeasurementUnit("ug/[sft_i]","microgram per square foot (international)"));
        units.add(new MeasurementUnit("ug/m2","microgram per square meter"));
        units.add(new MeasurementUnit("u[IU]/L","microinternational unit per liter"));
        units.add(new MeasurementUnit("ukat","microkatal"));
        units.add(new MeasurementUnit("uL","microliter"));
        units.add(new MeasurementUnit("uL/(2.h)","microliter per 2 hour"));
        units.add(new MeasurementUnit("uL/h","microliter per hour"));
        units.add(new MeasurementUnit("um","micrometer"));
        units.add(new MeasurementUnit("umol","micromole"));
        units.add(new MeasurementUnit("umol{BCE}/mol","micromole bone collagen equivalent per mole"));
        units.add(new MeasurementUnit("umol/(2.h)","micromole per 2 hour"));
        units.add(new MeasurementUnit("umol/(24.h)","micromole per 24 hour"));
        units.add(new MeasurementUnit("umol/(8.h)","micromole per 8 hour"));
        units.add(new MeasurementUnit("umol/d","micromole per day"));
        units.add(new MeasurementUnit("umol/dL","micromole per deciliter"));
        units.add(new MeasurementUnit("umol/dL{GF}","micromole per deciliter of glomerular filtrate"));
        units.add(new MeasurementUnit("umol/g","micromole per gram"));
        units.add(new MeasurementUnit("umol/g{creat}","micromole per gram of creatinine"));
        units.add(new MeasurementUnit("umol/g{Hb}","micromole per gram of hemoglobin"));
        units.add(new MeasurementUnit("umol/h","micromole per hour"));
        units.add(new MeasurementUnit("umol/kg","micromole per kilogram"));
        units.add(new MeasurementUnit("umol/kg{feces}","micromole per kilogram of feces"));
        units.add(new MeasurementUnit("umol/L","micromole per liter"));
        units.add(new MeasurementUnit("umol/L{RBCs}","micromole per liter of red blood cells"));
        units.add(new MeasurementUnit("umol/L/h","micromole per liter per hour"));
        units.add(new MeasurementUnit("umol/umol","micromole per micromole"));
        units.add(new MeasurementUnit("umol/umol{creat}","micromole per micromole of creatinine"));
        units.add(new MeasurementUnit("umol/mg","micromole per milligram"));
        units.add(new MeasurementUnit("umol/mg{creat}","micromole per milligram of creatinine"));
        units.add(new MeasurementUnit("umol/mL","micromole per milliliter"));
        units.add(new MeasurementUnit("umol/mL/min","micromole per milliliter per minute"));
        units.add(new MeasurementUnit("umol/mmol","micromole per millimole"));
        units.add(new MeasurementUnit("umol/mmol{creat}","micromole per millimole of creatinine"));
        units.add(new MeasurementUnit("umol/10*6{RBC}","micromole per million red blood cell"));
        units.add(new MeasurementUnit("umol/min","micromole per minute"));
        units.add(new MeasurementUnit("umol/min/g","micromole per minute per gram"));
        units.add(new MeasurementUnit("umol/min/g{mucosa}","micromole per minute per gram of mucosa"));
        units.add(new MeasurementUnit("umol/min/g{prot}","micromole per minute per gram of protein"));
        units.add(new MeasurementUnit("umol/min/L","micromole per minute per liter"));
        units.add(new MeasurementUnit("umol/mol","micromole per mole"));
        units.add(new MeasurementUnit("umol/mol{creat}","micromole per mole of creatinine"));
        units.add(new MeasurementUnit("umol/mol{Hb}","micromole per mole of hemoglobin"));
        units.add(new MeasurementUnit("um/s","microns per second"));
        units.add(new MeasurementUnit("uOhm","microOhm"));
        units.add(new MeasurementUnit("us","microsecond"));
        units.add(new MeasurementUnit("uV","microvolt"));
        units.add(new MeasurementUnit("[mi_i]","mile (international)"));
        units.add(new MeasurementUnit("mU/g","milli  enzyme unit per gram"));
        units.add(new MeasurementUnit("mU/mL","milli  enzyme unit per milliliter"));
        units.add(new MeasurementUnit("mU/mL/min","milli  enzyme unit per milliliter per minute"));
        units.add(new MeasurementUnit("mU/mmol{creat}","milli  enzyme unit per millimole of creatinine"));
        units.add(new MeasurementUnit("mU/mmol{RBCs}","milli  enzyme unit per millimole of red blood cells"));
        units.add(new MeasurementUnit("m[IU]/mL","milli  international unit per milliliter"));
        units.add(new MeasurementUnit("mU/g{Hb}","milli enzyme unit per gram of hemoglobin"));
        units.add(new MeasurementUnit("mU/g{prot}","milli enzyme unit per gram of protein"));
        units.add(new MeasurementUnit("mU/L","milli enzyme unit per liter"));
        units.add(new MeasurementUnit("mU/mg","milli enzyme unit per milligram"));
        units.add(new MeasurementUnit("mU/mg{creat}","milli enzyme unit per milligram of creatinine"));
        units.add(new MeasurementUnit("m[IU]/L","milli international unit per liter"));
        units.add(new MeasurementUnit("mA","milliampere"));
        units.add(new MeasurementUnit("mbar","millibar"));
        units.add(new MeasurementUnit("mbar/L/s","millibar per liter per second"));
        units.add(new MeasurementUnit("mbar.s/L","millibar second per liter"));
        units.add(new MeasurementUnit("meq","milliequivalent"));
        units.add(new MeasurementUnit("meq/(2.h)","milliequivalent per 2 hour"));
        units.add(new MeasurementUnit("meq/(24.h)","milliequivalent per 24 hour"));
        units.add(new MeasurementUnit("meq/(8.h)","milliequivalent per 8 hour"));
        units.add(new MeasurementUnit("meq/d","milliequivalent per day"));
        units.add(new MeasurementUnit("meq/dL","milliequivalent per deciliter"));
        units.add(new MeasurementUnit("meq/g","milliequivalent per gram"));
        units.add(new MeasurementUnit("meq/g{creat}","milliequivalent per gram of creatinine"));
        units.add(new MeasurementUnit("meq/h","milliequivalent per hour"));
        units.add(new MeasurementUnit("meq/kg","milliequivalent per kilogram"));
        units.add(new MeasurementUnit("meq/kg/h","milliequivalent per kilogram per hour"));
        units.add(new MeasurementUnit("meq/L","milliequivalent per liter"));
        units.add(new MeasurementUnit("meq/mL","milliequivalent per milliliter"));
        units.add(new MeasurementUnit("meq/min","milliequivalent per minute"));
        units.add(new MeasurementUnit("meq/{specimen}","milliequivalent per specimen"));
        units.add(new MeasurementUnit("meq/m2","milliequivalent per square meter"));
        units.add(new MeasurementUnit("meq/{total_volume}","milliequivalent per total volume"));
        units.add(new MeasurementUnit("mg","milligram"));
        units.add(new MeasurementUnit("mg{FEU}/L","milligram fibrinogen equivalent unit per liter"));
        units.add(new MeasurementUnit("mg/(10.h)","milligram per 10 hour"));
        units.add(new MeasurementUnit("mg/(12.h)","milligram per 12 hour"));
        units.add(new MeasurementUnit("mg/(2.h)","milligram per 2 hour"));
        units.add(new MeasurementUnit("mg/(24.h)","milligram per 24 hour"));
        units.add(new MeasurementUnit("mg/(6.h)","milligram per 6 hour"));
        units.add(new MeasurementUnit("mg/(72.h)","milligram per 72 hour"));
        units.add(new MeasurementUnit("mg/(8.h)","milligram per 8 hour"));
        units.add(new MeasurementUnit("mg/{collection}","milligram per collection"));
        units.add(new MeasurementUnit("mg/m3","milligram per cubic meter"));
        units.add(new MeasurementUnit("mg/d","milligram per day"));
        units.add(new MeasurementUnit("mg/d/{1.73_m2}","milligram per day per 1.73 square meter"));
        units.add(new MeasurementUnit("mg/dL","milligram per deciliter"));
        units.add(new MeasurementUnit("mg/dL{RBCs}","milligram per deciliter of red blood cells"));
        units.add(new MeasurementUnit("mg/g","milligram per gram"));
        units.add(new MeasurementUnit("mg/g{creat}","milligram per gram of creatinine"));
        units.add(new MeasurementUnit("mg/g{dry_tissue}","milligram per gram of dry tissue"));
        units.add(new MeasurementUnit("mg/g{feces}","milligram per gram of feces"));
        units.add(new MeasurementUnit("mg/g{tissue}","milligram per gram of tissue"));
        units.add(new MeasurementUnit("mg/g{wet_tissue}","milligram per gram of wet tissue"));
        units.add(new MeasurementUnit("mg/h","milligram per hour"));
        units.add(new MeasurementUnit("mg/kg","milligram per kilogram"));
        units.add(new MeasurementUnit("mg/kg/(8.h)","milligram per kilogram per 8 hour"));
        units.add(new MeasurementUnit("mg/kg/d","milligram per kilogram per day"));
        units.add(new MeasurementUnit("mg/kg/h","milligram per kilogram per hour"));
        units.add(new MeasurementUnit("mg/kg/min","milligram per kilogram per minute"));
        units.add(new MeasurementUnit("mg/L","milligram per liter"));
        units.add(new MeasurementUnit("mg/L{RBCs}","milligram per liter of red blood cells"));
        units.add(new MeasurementUnit("mg/mg","milligram per milligram"));
        units.add(new MeasurementUnit("mg/mg{creat}","milligram per milligram of creatinine"));
        units.add(new MeasurementUnit("mg/mL","milligram per milliliter"));
        units.add(new MeasurementUnit("mg/mmol","milligram per millimole"));
        units.add(new MeasurementUnit("mg/mmol{creat}","milligram per millimole of creatinine"));
        units.add(new MeasurementUnit("mg/min","milligram per minute"));
        units.add(new MeasurementUnit("mg/{specimen}","milligram per specimen"));
        units.add(new MeasurementUnit("mg/m2","milligram per square meter"));
        units.add(new MeasurementUnit("mg/{total_output}","milligram per total output"));
        units.add(new MeasurementUnit("mg/{total_volume}","milligram per total volume"));
        units.add(new MeasurementUnit("mg/wk","milligram per week"));
        units.add(new MeasurementUnit("mL","milliliter"));
        units.add(new MeasurementUnit("mL{fetal_RBCs}","milliliter of fetal red blood cells"));
        units.add(new MeasurementUnit("mL/(10.h)","milliliter per 10 hour"));
        units.add(new MeasurementUnit("mL/(12.h)","milliliter per 12 hour"));
        units.add(new MeasurementUnit("mL/(2.h)","milliliter per 2 hour"));
        units.add(new MeasurementUnit("mL/(24.h)","milliliter per 24 hour"));
        units.add(new MeasurementUnit("mL/(4.h)","milliliter per 4 hour"));
        units.add(new MeasurementUnit("mL/(5.h)","milliliter per 5 hour"));
        units.add(new MeasurementUnit("mL/(6.h)","milliliter per 6 hour"));
        units.add(new MeasurementUnit("mL/(72.h)","milliliter per 72 hour"));
        units.add(new MeasurementUnit("mL/(8.h)","milliliter per 8 hour"));
        units.add(new MeasurementUnit("mL/(8.h)/kg","milliliter per 8 hour per kilogram"));
        units.add(new MeasurementUnit("mL/cm[H2O]","milliliter per centimeter of water"));
        units.add(new MeasurementUnit("mL/d","milliliter per day"));
        units.add(new MeasurementUnit("mL/dL","milliliter per deciliter"));
        units.add(new MeasurementUnit("mL/{beat}","milliliter per heart beat"));
        units.add(new MeasurementUnit("mL/{beat}/m2","milliliter per heart beat per  square meter"));
        units.add(new MeasurementUnit("mL/h","milliliter per hour"));
        units.add(new MeasurementUnit("mL/kg","milliliter per kilogram"));
        units.add(new MeasurementUnit("mL/kg/(8.h)","milliliter per kilogram per 8 hour"));
        units.add(new MeasurementUnit("mL/kg/d","milliliter per kilogram per day"));
        units.add(new MeasurementUnit("mL/kg/h","milliliter per kilogram per hour"));
        units.add(new MeasurementUnit("mL/kg/min","milliliter per kilogram per minute"));
        units.add(new MeasurementUnit("mL/mbar","milliliter per millibar"));
        units.add(new MeasurementUnit("mL/mm","milliliter per millimeter"));
        units.add(new MeasurementUnit("mL/min","milliliter per minute"));
        units.add(new MeasurementUnit("mL/min/{1.73_m2}","milliliter per minute per 1.73 square meter"));
        units.add(new MeasurementUnit("mL/min/m2","milliliter per minute per square meter"));
        units.add(new MeasurementUnit("mL/s","milliliter per second"));
        units.add(new MeasurementUnit("mL/[sin_i]","milliliter per square inch (international)"));
        units.add(new MeasurementUnit("mL/m2","milliliter per square meter"));
        units.add(new MeasurementUnit("mm","millimeter"));
        units.add(new MeasurementUnit("mm[Hg]","millimeter of mercury"));
        units.add(new MeasurementUnit("mm[H2O]","millimeter of water"));
        units.add(new MeasurementUnit("mm/h","millimeter per hour"));
        units.add(new MeasurementUnit("mm/min","millimeter per minute"));
        units.add(new MeasurementUnit("mmol","millimole"));
        units.add(new MeasurementUnit("mmol/(12.h)","millimole per 12 hour"));
        units.add(new MeasurementUnit("mmol/(2.h)","millimole per 2 hour"));
        units.add(new MeasurementUnit("mmol/(24.h)","millimole per 24 hour"));
        units.add(new MeasurementUnit("mmol/(5.h)","millimole per 5 hour"));
        units.add(new MeasurementUnit("mmol/(6.h)","millimole per 6 hour"));
        units.add(new MeasurementUnit("mmol/(8.h)","millimole per 8 hour"));
        units.add(new MeasurementUnit("mmol/d","millimole per day"));
        units.add(new MeasurementUnit("mmol/dL","millimole per deciliter"));
        units.add(new MeasurementUnit("mmol/{ejaculate}","millimole per ejaculate"));
        units.add(new MeasurementUnit("mmol/g","millimole per gram"));
        units.add(new MeasurementUnit("mmol/g{creat}","millimole per gram of creatinine"));
        units.add(new MeasurementUnit("mmol/h","millimole per hour"));
        units.add(new MeasurementUnit("mmol/h/mg{Hb}","millimole per hour per milligram of hemoglobin"));
        units.add(new MeasurementUnit("mmol/h/mg{prot}","millimole per hour per milligram of protein"));
        units.add(new MeasurementUnit("mmol/kg","millimole per kilogram"));
        units.add(new MeasurementUnit("mmol/kg/(8.h)","millimole per kilogram per 8 hour"));
        units.add(new MeasurementUnit("mmol/kg/d","millimole per kilogram per day"));
        units.add(new MeasurementUnit("mmol/kg/h","millimole per kilogram per hour"));
        units.add(new MeasurementUnit("mmol/kg/min","millimole per kilogram per minute"));
        units.add(new MeasurementUnit("mmol/L","millimole per liter"));
        units.add(new MeasurementUnit("mmol/L{RBCs}","millimole per liter of red blood cells"));
        units.add(new MeasurementUnit("mmol/mmol","millimole per millimole"));
        units.add(new MeasurementUnit("mmol/mmol{urea}","millimole per millimole of urea"));
        units.add(new MeasurementUnit("mmol/mmol{creat}","millimole per millmole of creatinine"));
        units.add(new MeasurementUnit("mmol/min","millimole per minute"));
        units.add(new MeasurementUnit("mmol/mol","millimole per mole"));
        units.add(new MeasurementUnit("mmol/mol{creat}","millimole per mole of creatinine"));
        units.add(new MeasurementUnit("mmol/s/L","millimole per second per liter"));
        units.add(new MeasurementUnit("mmol/{specimen}","millimole per specimen"));
        units.add(new MeasurementUnit("mmol/m2","millimole per square meter"));
        units.add(new MeasurementUnit("mmol/{total_vol}","millimole per total volume"));
        units.add(new MeasurementUnit("10*6","million"));
        units.add(new MeasurementUnit("10*6.[CFU]/L","million colony forming unit per liter"));
        units.add(new MeasurementUnit("10*6.[IU]","million international unit"));
        units.add(new MeasurementUnit("10*6/(24.h)","million per 24 hour"));
        units.add(new MeasurementUnit("10*6/kg","million per kilogram"));
        units.add(new MeasurementUnit("10*6/L","million per liter"));
        units.add(new MeasurementUnit("10*6/uL","million per microliter"));
        units.add(new MeasurementUnit("10*6/mL","million per milliliter"));
        units.add(new MeasurementUnit("mosm","milliosmole"));
        units.add(new MeasurementUnit("mosm/kg","milliosmole per kilogram"));
        units.add(new MeasurementUnit("mosm/L","milliosmole per liter"));
        units.add(new MeasurementUnit("mPa","millipascal"));
        units.add(new MeasurementUnit("mPa.s","millipascal second"));
        units.add(new MeasurementUnit("ms","millisecond"));
        units.add(new MeasurementUnit("mV","millivolt"));
        units.add(new MeasurementUnit("mV/s","millivolt per second"));
        units.add(new MeasurementUnit("{minidrop}/min","minidrop per minute"));
        units.add(new MeasurementUnit("{minidrop}/s","minidrop per second"));
        units.add(new MeasurementUnit("min","minute"));
        units.add(new MeasurementUnit("min/d","minute per day"));
        units.add(new MeasurementUnit("min/wk","minute per week"));
        units.add(new MeasurementUnit("mol","mole"));
        units.add(new MeasurementUnit("mol/m3","mole per cubic meter"));
        units.add(new MeasurementUnit("mol/kg","mole per kilogram"));
        units.add(new MeasurementUnit("mol/kg/s","mole per kilogram per second"));
        units.add(new MeasurementUnit("mol/L","mole per liter"));
        units.add(new MeasurementUnit("mol/mL","mole per milliliter"));
        units.add(new MeasurementUnit("mol/mol","mole per mole"));
        units.add(new MeasurementUnit("mol/s","mole per second"));
        units.add(new MeasurementUnit("{#}/{platelet}","molecule per platelet"));
        units.add(new MeasurementUnit("mo","month"));
        units.add(new MeasurementUnit("{mm/dd/yyyy}","month-day-year"));
        units.add(new MeasurementUnit("{M.o.M}","multiple of the median"));
        units.add(new MeasurementUnit("{mutation}","mutation"));
        units.add(new MeasurementUnit("nU/mL","nanoenzyme unit per milliliter"));
        units.add(new MeasurementUnit("nU/{RBC}","nanoenzyme unit per red blood cell"));
        units.add(new MeasurementUnit("ng","nanogram"));
        units.add(new MeasurementUnit("ng{FEU}/mL","nanogram fibrinogen equivalent unit per milliliter "));
        units.add(new MeasurementUnit("ng/(24.h)","nanogram per 24 hour"));
        units.add(new MeasurementUnit("ng/(8.h)","nanogram per 8 hour"));
        units.add(new MeasurementUnit("ng/d","nanogram per day"));
        units.add(new MeasurementUnit("ng/dL","nanogram per deciliter"));
        units.add(new MeasurementUnit("ng/U","nanogram per enzyme unit"));
        units.add(new MeasurementUnit("ng/g","nanogram per gram"));
        units.add(new MeasurementUnit("ng/g{creat}","nanogram per gram of creatinine"));
        units.add(new MeasurementUnit("ng/h","nanogram per hour"));
        units.add(new MeasurementUnit("ng/kg","nanogram per kilogram"));
        units.add(new MeasurementUnit("ng/kg/(8.h)","nanogram per kilogram per 8 hour"));
        units.add(new MeasurementUnit("ng/kg/h","nanogram per kilogram per hour"));
        units.add(new MeasurementUnit("ng/kg/min","nanogram per kilogram per minute"));
        units.add(new MeasurementUnit("ng/L","nanogram per liter"));
        units.add(new MeasurementUnit("ng/mg","nanogram per milligram"));
        units.add(new MeasurementUnit("ng/mg{creat}","nanogram per milligram of creatinine"));
        units.add(new MeasurementUnit("ng/mg{prot}","nanogram per milligram of protein"));
        units.add(new MeasurementUnit("ng/mg/h","nanogram per milligram per hour"));
        units.add(new MeasurementUnit("ng/mL{RBCs}","nanogram per milliliter of red blood cells"));
        units.add(new MeasurementUnit("ng/mL/h","nanogram per milliliter per hour"));
        units.add(new MeasurementUnit("ng/10*6","nanogram per million"));
        units.add(new MeasurementUnit("ng/10*6{RBCs}","nanogram per million red blood cells"));
        units.add(new MeasurementUnit("ng/mL","nanogram per millliiter"));
        units.add(new MeasurementUnit("ng/min","nanogram per minute"));
        units.add(new MeasurementUnit("ng/s","nanogram per second"));
        units.add(new MeasurementUnit("ng/m2","nanogram per square meter"));
        units.add(new MeasurementUnit("nkat","nanokatal"));
        units.add(new MeasurementUnit("nL","nanoliter"));
        units.add(new MeasurementUnit("nm","nanometer"));
        units.add(new MeasurementUnit("nm/s/L","nanometer per second per liter"));
        units.add(new MeasurementUnit("nmol","nanomole"));
        units.add(new MeasurementUnit("nmol{BCE}","nanomole bone collagen equivalent"));
        units.add(new MeasurementUnit("nmol{BCE}/L","nanomole bone collagen equivalent per liter"));
        units.add(new MeasurementUnit("nmol/mmol{creat}","nanomole bone collagen equivalent per millimole of creatinine"));
        units.add(new MeasurementUnit("nmol/mg{prot}","nanomole of 1/2 cystine per milligram of protein"));
        units.add(new MeasurementUnit("nmol{ATP}","nanomole of ATP "));
        units.add(new MeasurementUnit("nmol/(24.h)","nanomole per 24 hour"));
        units.add(new MeasurementUnit("nmol/d","nanomole per day"));
        units.add(new MeasurementUnit("nmol/dL","nanomole per deciliter"));
        units.add(new MeasurementUnit("nmol/dL{GF}","nanomole per deciliter of glomerular filtrate"));
        units.add(new MeasurementUnit("nmol/g","nanomole per gram"));
        units.add(new MeasurementUnit("nmol/g{creat}","nanomole per gram of creatinine"));
        units.add(new MeasurementUnit("nmol/g{dry_wt}","nanomole per gram of dry weight"));
        units.add(new MeasurementUnit("nmol/h/L","nanomole per hour per liter"));
        units.add(new MeasurementUnit("nmol/h/mg{prot}","nanomole per hour per milligram of protein"));
        units.add(new MeasurementUnit("nmol/h/mL","nanomole per hour per milliliter"));
        units.add(new MeasurementUnit("nmol/L","nanomole per liter"));
        units.add(new MeasurementUnit("nmol/L{RBCs}","nanomole per liter of red blood cells"));
        units.add(new MeasurementUnit("nmol/L/mmol{creat}","nanomole per liter per millimole of creatinine"));
        units.add(new MeasurementUnit("nmol/m/mg{prot}","nanomole per meter per milligram of protein"));
        units.add(new MeasurementUnit("nmol/umol{creat}","nanomole per micromole  of creatinine"));
        units.add(new MeasurementUnit("nmol/mg","nanomole per milligram"));
        units.add(new MeasurementUnit("nmol/mg{creat}","nanomole per milligram of creatinine"));
        units.add(new MeasurementUnit("nmol/mg{prot}","nanomole per milligram of protein"));
        units.add(new MeasurementUnit("nmol/mg{prot}/h","nanomole per milligram of protein per hour"));
        units.add(new MeasurementUnit("nmol/mg/h","nanomole per milligram per hour"));
        units.add(new MeasurementUnit("nmol/mL","nanomole per milliliter"));
        units.add(new MeasurementUnit("nmol/mL/h","nanomole per milliliter per hour"));
        units.add(new MeasurementUnit("nmol/mL/min","nanomole per milliliter per minute"));
        units.add(new MeasurementUnit("nmol/mmol","nanomole per millimole"));
        units.add(new MeasurementUnit("nmol/mmol{creat}","nanomole per millimole of creatinine"));
        units.add(new MeasurementUnit("nmol/min","nanomole per minute"));
        units.add(new MeasurementUnit("nmol/min/mg{Hb}","nanomole per minute per milligram of hemoglobin"));
        units.add(new MeasurementUnit("nmol/min/mg{prot}","nanomole per minute per milligram of protein"));
        units.add(new MeasurementUnit("nmol/min/mg{protein}","nanomole per minute per milligram protein"));
        units.add(new MeasurementUnit("nmol/min/mL","nanomole per minute per milliliter"));
        units.add(new MeasurementUnit("nmol/min/10*6{cells}","nanomole per minute per million cells"));
        units.add(new MeasurementUnit("nmol/mol","nanomole per mole"));
        units.add(new MeasurementUnit("nmol/mol{creat}","nanomole per mole creatinine"));
        units.add(new MeasurementUnit("nmol/nmol","nanomole per nanomole"));
        units.add(new MeasurementUnit("nmol/s","nanomole per second"));
        units.add(new MeasurementUnit("nmol/s/L","nanomole per second per liter"));
        units.add(new MeasurementUnit("ns","nanosecond"));
        units.add(new MeasurementUnit("N","Newton"));
        units.add(new MeasurementUnit("N.cm","Newton centimeter"));
        units.add(new MeasurementUnit("N.s","Newton second"));
        units.add(new MeasurementUnit("{#}","number"));
        units.add(new MeasurementUnit("{#}/a","number per annum (year)"));
        units.add(new MeasurementUnit("{#}/d","number per day"));
        units.add(new MeasurementUnit("{#}/g","number per gram"));
        units.add(new MeasurementUnit("{#}/[HPF]","number per high power field"));
        units.add(new MeasurementUnit("{#}/L","number per liter"));
        units.add(new MeasurementUnit("{#}/[LPF]","number per low power field"));
        units.add(new MeasurementUnit("{#}/uL","number per microliter"));
        units.add(new MeasurementUnit("{#}/mL","number per milliliter"));
        units.add(new MeasurementUnit("{#}/min","number per minute"));
        units.add(new MeasurementUnit("{#}/wk","number per week"));
        units.add(new MeasurementUnit("Ohm","Ohm"));
        units.add(new MeasurementUnit("Ohm.m","Ohm meter"));
        units.add(new MeasurementUnit("10*5","one hundred thousand"));
        units.add(new MeasurementUnit("{OD_unit}","optical density unit"));
        units.add(new MeasurementUnit("osm","osmole"));
        units.add(new MeasurementUnit("osm/kg","osmole per kilogram"));
        units.add(new MeasurementUnit("osm/L","osmole per liter"));
        units.add(new MeasurementUnit("[oz_av]","ounce (US and British)"));
        units.add(new MeasurementUnit("{Pan_Bio'U}","panbio unit"));
        units.add(new MeasurementUnit("[ppb]","part per billion"));
        units.add(new MeasurementUnit("[ppm]","part per million"));
        units.add(new MeasurementUnit("[ppm]{v/v}","part per million in volume per volume"));
        units.add(new MeasurementUnit("[ppth]","part per thousand"));
        units.add(new MeasurementUnit("[pptr]","part per trillion"));
        units.add(new MeasurementUnit("Pa","Pascal"));
        units.add(new MeasurementUnit("/10*10","per 10 billion  "));
        units.add(new MeasurementUnit("/10*4{RBCs}","per 10 thousand red blood cells"));
        units.add(new MeasurementUnit("/100","per 100"));
        units.add(new MeasurementUnit("/100{cells}","per 100 cells"));
        units.add(new MeasurementUnit("/100{neutrophils}","per 100 neutrophils"));
        units.add(new MeasurementUnit("/100{spermatozoa}","per 100 spermatozoa"));
        units.add(new MeasurementUnit("/100{WBCs}","per 100 white blood cells"));
        units.add(new MeasurementUnit("/[arb'U]","per arbitrary unit"));
        units.add(new MeasurementUnit("/10*9","per billion"));
        units.add(new MeasurementUnit("/cm[H2O]","per centimeter of water"));
        units.add(new MeasurementUnit("/m3","per cubic meter"));
        units.add(new MeasurementUnit("/d","per day"));
        units.add(new MeasurementUnit("/dL","per deciliter"));
        units.add(new MeasurementUnit("/{entity}","per entity"));
        units.add(new MeasurementUnit("/U","per enzyme unit"));
        units.add(new MeasurementUnit("/g","per gram"));
        units.add(new MeasurementUnit("/g{creat}","per gram of creatinine"));
        units.add(new MeasurementUnit("/g{Hb}","per gram of hemoglobin"));
        units.add(new MeasurementUnit("/g{tot_nit}","per gram of total nitrogen"));
        units.add(new MeasurementUnit("/g{tot_prot}","per gram of total protein"));
        units.add(new MeasurementUnit("/g{wet_tis}","per gram of wet tissue"));
        units.add(new MeasurementUnit("/[HPF]","per high power field"));
        units.add(new MeasurementUnit("/h","per hour"));
        units.add(new MeasurementUnit("/[IU]","per international unit"));
        units.add(new MeasurementUnit("/kg","per kilogram"));
        units.add(new MeasurementUnit("/kg{body_wt}","per kilogram of body weight"));
        units.add(new MeasurementUnit("/L","per liter"));
        units.add(new MeasurementUnit("/[LPF]","per low power field"));
        units.add(new MeasurementUnit("/uL","per microliter"));
        units.add(new MeasurementUnit("/mg","per milligram"));
        units.add(new MeasurementUnit("/mL","per milliliter"));
        units.add(new MeasurementUnit("/mm","per millimeter"));
        units.add(new MeasurementUnit("/mmol{creat}","per millimole of creatinine"));
        units.add(new MeasurementUnit("/10*6","per million"));
        units.add(new MeasurementUnit("/min","per minute"));
        units.add(new MeasurementUnit("/mo","per month"));
        units.add(new MeasurementUnit("/{OIF}","per oil immersion field"));
        units.add(new MeasurementUnit("/s","per second"));
        units.add(new MeasurementUnit("/m2","per square meter"));
        units.add(new MeasurementUnit("/10*3","per thousand"));
        units.add(new MeasurementUnit("/10*3{RBCs}","per thousand red blood cells"));
        units.add(new MeasurementUnit("/10*12","per trillion "));
        units.add(new MeasurementUnit("/10*12{RBCs}","per trillion red blood cells"));
        units.add(new MeasurementUnit("/(12.h)","per twelve hour"));
        units.add(new MeasurementUnit("/wk","per week"));
        units.add(new MeasurementUnit("/a","per year"));
        units.add(new MeasurementUnit("%","percent"));
        units.add(new MeasurementUnit("%{loss_AChR}","percent  loss of acetylcholine receptor"));
        units.add(new MeasurementUnit("%{penetration}","percent  penetration"));
        units.add(new MeasurementUnit("%{abnormal}","percent abnormal"));
        units.add(new MeasurementUnit("%{activity}","percent activity"));
        units.add(new MeasurementUnit("%{aggregation}","percent aggregation"));
        units.add(new MeasurementUnit("%{at_60_min}","percent at 60 minute"));
        units.add(new MeasurementUnit("%{basal_activity}","percent basal activity"));
        units.add(new MeasurementUnit("%{binding}","percent binding"));
        units.add(new MeasurementUnit("%{blockade}","percent blockade"));
        units.add(new MeasurementUnit("%{blocked}","percent blocked"));
        units.add(new MeasurementUnit("%{bound}","percent bound"));
        units.add(new MeasurementUnit("%{breakdown}","percent breakdown"));
        units.add(new MeasurementUnit("%{vol}","percent by volume"));
        units.add(new MeasurementUnit("%{deficient}","percent deficient"));
        units.add(new MeasurementUnit("%{dose}","percent dose"));
        units.add(new MeasurementUnit("%{excretion}","percent excretion"));
        units.add(new MeasurementUnit("%{Hb}","percent hemoglobin"));
        units.add(new MeasurementUnit("%{hemolysis}","percent hemolysis"));
        units.add(new MeasurementUnit("%{index}","percent index"));
        units.add(new MeasurementUnit("%{inhibition}","percent inhibition"));
        units.add(new MeasurementUnit("%{loss}","percent loss"));
        units.add(new MeasurementUnit("%{lysis}","percent lysis"));
        units.add(new MeasurementUnit("%{normal}","percent normal"));
        units.add(new MeasurementUnit("%{pooled_plasma}","percent normal pooled plasma"));
        units.add(new MeasurementUnit("%{bacteria}","percent of bacteria"));
        units.add(new MeasurementUnit("%{baseline}","percent of baseline"));
        units.add(new MeasurementUnit("%{cells}","percent of cells"));
        units.add(new MeasurementUnit("%{RBCs}","percent of red blood cells"));
        units.add(new MeasurementUnit("%{WBCs}","percent of white blood cells"));
        units.add(new MeasurementUnit("%{positive}","percent positive"));
        units.add(new MeasurementUnit("%{reactive}","percent reactive"));
        units.add(new MeasurementUnit("%{recovery}","percent recovery"));
        units.add(new MeasurementUnit("%{reference}","percent reference"));
        units.add(new MeasurementUnit("%{residual}","percent residual"));
        units.add(new MeasurementUnit("%{response}","percent response"));
        units.add(new MeasurementUnit("%{saturation}","percent saturation"));
        units.add(new MeasurementUnit("%{total}","percent total"));
        units.add(new MeasurementUnit("%{uptake}","percent uptake"));
        units.add(new MeasurementUnit("%{viable}","percent viable"));
        units.add(new MeasurementUnit("{percentile}","percentile"));
        units.add(new MeasurementUnit("[pH]","pH"));
        units.add(new MeasurementUnit("{phenotype}","phenotype"));
        units.add(new MeasurementUnit("pA","picoampere"));
        units.add(new MeasurementUnit("pg","picogram"));
        units.add(new MeasurementUnit("pg/{cell}","picogram per cell"));
        units.add(new MeasurementUnit("pg/dL","picogram per deciliter"));
        units.add(new MeasurementUnit("pg/L","picogram per liter"));
        units.add(new MeasurementUnit("pg/mg","picogram per milligram"));
        units.add(new MeasurementUnit("pg/mg{creat}","picogram per milligram of creatinine"));
        units.add(new MeasurementUnit("pg/mL","picogram per milliliter"));
        units.add(new MeasurementUnit("pg/mL{sLT}","picogram per milliliter sulfidoleukotrienes"));
        units.add(new MeasurementUnit("pg/mm","picogram per millimeter"));
        units.add(new MeasurementUnit("pg/{RBC}","picogram per red blood cell"));
        units.add(new MeasurementUnit("pkat","picokatal"));
        units.add(new MeasurementUnit("pL","picoliter"));
        units.add(new MeasurementUnit("pm","picometer"));
        units.add(new MeasurementUnit("pmol","picomole"));
        units.add(new MeasurementUnit("pmol/(24.h)","picomole per 24 hour"));
        units.add(new MeasurementUnit("pmol/d","picomole per day"));
        units.add(new MeasurementUnit("pmol/dL","picomole per deciliter"));
        units.add(new MeasurementUnit("pmol/g","picomole per gram"));
        units.add(new MeasurementUnit("pmol/h/mg{prot}","picomole per hour per milligram of protein"));
        units.add(new MeasurementUnit("pmol/H/mg{protein}","picomole per hour per milligram protein"));
        units.add(new MeasurementUnit("pmol/h/mL","picomole per hour per milliliter "));
        units.add(new MeasurementUnit("pmol/L","picomole per liter"));
        units.add(new MeasurementUnit("pmol/umol","picomole per micromole"));
        units.add(new MeasurementUnit("pmol/umol{creat}","picomole per micromole of creatinine"));
        units.add(new MeasurementUnit("pmol/mg{prot}","picomole per milligram of protein"));
        units.add(new MeasurementUnit("pmol/mL","picomole per milliliter"));
        units.add(new MeasurementUnit("pmol/mmol{creat}","picomole per millimole of creatinine"));
        units.add(new MeasurementUnit("pmol/min","picomole per minute"));
        units.add(new MeasurementUnit("pmol/min/mg{prot}","picomole per minute per milligram of protein"));
        units.add(new MeasurementUnit("pmol/{RBC}","picomole per red blood cell"));
        units.add(new MeasurementUnit("ps","picosecond"));
        units.add(new MeasurementUnit("pT","picotesla"));
        units.add(new MeasurementUnit("[pt_us]","pint (US)"));
        units.add(new MeasurementUnit("[lb_av]","pound (US and British)"));
        units.add(new MeasurementUnit("[psi]","pound per square inch"));
        units.add(new MeasurementUnit("[qt_us]","quart (US)"));
        units.add(new MeasurementUnit("{ratio}","ratio"));
        units.add(new MeasurementUnit("{RBC}/uL","red blood cell per microliter"));
        units.add(new MeasurementUnit("%{relative}","relative percent"));
        units.add(new MeasurementUnit("{rel_saturation}","relative saturation"));
        units.add(new MeasurementUnit("{risk}","risk"));
        units.add(new MeasurementUnit("{Rubella_virus}","rubella virus"));
        units.add(new MeasurementUnit("{saturation}","saturation"));
        units.add(new MeasurementUnit("{score}","score"));
        units.add(new MeasurementUnit("s","second"));
        units.add(new MeasurementUnit("s/{control}","second per control"));
        units.add(new MeasurementUnit("{shift}","shift"));
        units.add(new MeasurementUnit("S","Siemens"));
        units.add(new MeasurementUnit("Sv","Sievert"));
        units.add(new MeasurementUnit("{s_co_ratio}","signal to cutoff ratio"));
        units.add(new MeasurementUnit("{spermatozoa}/mL","spermatozoa per milliliter"));
        units.add(new MeasurementUnit("cm2","square centimeter"));
        units.add(new MeasurementUnit("cm2/s","square centimeter per second"));
        units.add(new MeasurementUnit("dm2/s2","square decimeter per square second"));
        units.add(new MeasurementUnit("[sft_i]","square foot (international)"));
        units.add(new MeasurementUnit("[sin_i]","square inch (international)"));
        units.add(new MeasurementUnit("m2","square meter"));
        units.add(new MeasurementUnit("m2/s","square meter per second"));
        units.add(new MeasurementUnit("mm2","square millimeter"));
        units.add(new MeasurementUnit("[syd_i]","square yard (international)"));
        units.add(new MeasurementUnit("{STDV}","standard deviation"));
        units.add(new MeasurementUnit("{Tscore}","t score"));
        units.add(new MeasurementUnit("[tbs_us]","tablespoon (US)"));
        units.add(new MeasurementUnit("[tsp_us]","teaspoon (US)"));
        units.add(new MeasurementUnit("T","Tesla"));
        units.add(new MeasurementUnit("10*3","thousand"));
        units.add(new MeasurementUnit("10*3{copies}/mL","thousand copies per milliliter"));
        units.add(new MeasurementUnit("10*3/L","thousand per liter"));
        units.add(new MeasurementUnit("10*3/uL","thousand per microliter"));
        units.add(new MeasurementUnit("10*3/mL","thousand per milliliter"));
        units.add(new MeasurementUnit("10*3{RBCs}","thousand red blood cells"));
        units.add(new MeasurementUnit("{TSI_index}","thyroid-stimulating immunoglobulin index"));
        units.add(new MeasurementUnit("{TmStp}","time stamp"));
        units.add(new MeasurementUnit("{titer}","titer"));
        units.add(new MeasurementUnit("[todd'U]","Todd unit"));
        units.add(new MeasurementUnit("10*12/L","trillion per liter"));
        units.add(new MeasurementUnit("[oz_tr]","Troy ounce"));
        units.add(new MeasurementUnit("[tb'U]","tuberculin unit"));
        units.add(new MeasurementUnit("V","volt"));
        units.add(new MeasurementUnit("Wb","Weber"));
        units.add(new MeasurementUnit("wk","week"));
        units.add(new MeasurementUnit("{WBCs}","white blood cells"));
        units.add(new MeasurementUnit("[yd_i]","yard (international)"));
        units.add(new MeasurementUnit("a","year"));
        units.add(new MeasurementUnit("{yyyy}","year"));
        units.add(new MeasurementUnit("{Zscore}","z score"));
    }

    public List<MeasurementUnit> getMeasurementUnits() {
        return units;
    }

}

