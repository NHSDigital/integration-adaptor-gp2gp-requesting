package uk.nhs.adaptors.pss.translator.util;


import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import java.util.Map;
import java.util.TreeMap;

@Component
public final class MeasurementUnitsUtil {

    private static final Map<String, String> UNITS = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);

    @PostConstruct
    @SuppressWarnings("checkstyle:methodlength")
    private void createMeasurementUnits() {
        UNITS.put("%", "percent");
        UNITS.put("%/100{WBC}", "percent / 100 WBC");
        UNITS.put("%{0to3Hours}", "percent 0to3Hours");
        UNITS.put("%{Abnormal}", "percent Abnormal");
        UNITS.put("%{Activity}", "percent Activity");
        UNITS.put("%{BasalActivity}", "percent BasalActivity");
        UNITS.put("%{Binding}", "percent Binding");
        UNITS.put("%{Blockade}", "percent Blockade");
        UNITS.put("%{Carboxyhemoglobin}", "percent Carboxyhemoglobin");
        UNITS.put("%{Conversion}", "percent Conversion");
        UNITS.put("%{Cound}", "percent Cound");
        UNITS.put("%{EosSeen}", "percent EosSeen");
        UNITS.put("%{Excretion}", "percent Excretion");
        UNITS.put("%{Fat}", "percent Fat");
        UNITS.put("%{FetalErythrocytes}", "percent FetalErythrocytes");
        UNITS.put("%{Hemoglobin}", "percent Hemoglobin");
        UNITS.put("%{HemoglobinA1C}", "percent HemoglobinA1C");
        UNITS.put("%{HemoglobinSaturation}", "percent HemoglobinSaturation");
        UNITS.put("%{Hemolysis}", "percent Hemolysis");
        UNITS.put("%{HumanResponse}", "percent HumanResponse");
        UNITS.put("%{Index}", "percent Index");
        UNITS.put("%{Inhibition}", "percent Inhibition");
        UNITS.put("%{Live}", "percent Live");
        UNITS.put("%{Negative Control}", "percent Negative Control");
        UNITS.put("%{Normal}", "percent Normal");
        UNITS.put("%{NormalControl}", "percent NormalControl");
        UNITS.put("%{NormalPooledPlasma}", "percent NormalPooledPlasma");
        UNITS.put("%{ofAvailable}", "percent ofAvailable");
        UNITS.put("%{ofBacteria}", "percent ofBacteria");
        UNITS.put("%{OfLymphocytes}", "percent OfLymphocytes");
        UNITS.put("%{OfWBCs}", "percent OfWBCs");
        UNITS.put("%{Oxygen}", "percent Oxygen");
        UNITS.put("%{Positive}", "percent Positive");
        UNITS.put("%{Precipitate}", "percent Precipitate");
        UNITS.put("%{Reactivity}", "percent Reactivity");
        UNITS.put("%{response}", "percent response");
        UNITS.put("%{risk}", "percent risk");
        UNITS.put("%{SpermMotility}", "percent SpermMotility");
        UNITS.put("%{Total}", "percent Total");
        UNITS.put("%{TotalProtein}", "percent TotalProtein");
        UNITS.put("%{Tot'Cholesterol}", "percent Tot'Cholesterol");
        UNITS.put("%{Tot'Hgb}", "percent Tot'Hgb");
        UNITS.put("%{Uptake}", "percent Uptake");
        UNITS.put("%{WeightToWeight}", "percent WeightToWeight");
        UNITS.put("/[arb'U]", "per arbitrary unit");
        UNITS.put("/[HPF]", "per high power field");
        UNITS.put("/[iU]", "per international unit");
        UNITS.put("/[LPF]", "per low power field");
        UNITS.put("/{Entity}", "per Entity");
        UNITS.put("/{oif}", "per oif");
        UNITS.put("/{Specimen}", "per Specimen");
        UNITS.put("/{tot}", "per tot");
        UNITS.put("/10*12{rbc}", "PerTrillionRedBloodCells");
        UNITS.put("/100", "per 100");
        UNITS.put("/100{cells}", "per 100 cells");
        UNITS.put("/100{neutrophils}", "per 100 neutrophils");
        UNITS.put("/100{spermatozoa}", "per 100 spermatozoa");
        UNITS.put("/100{WBC}", "Per100WBC");
        UNITS.put("/cm[H2O]", "per centimeter of water");
        UNITS.put("/d", "per day");
        UNITS.put("/dL", "per deciliter");
        UNITS.put("/g", "per gram");
        UNITS.put("/g{hgb}", "per gram hgb");
        UNITS.put("/g{tot'nit}", "per gram tot'nit");
        UNITS.put("/g{tot'prot}", "per gram tot'prot");
        UNITS.put("/g{wet'tis}", "per gram wet'tis");
        UNITS.put("/h", "per hour");
        UNITS.put("/kg", "per kilogram");
        UNITS.put("/kg{body'wt}", "per kilogram body wt");
        UNITS.put("/L", "per liter");
        UNITS.put("/m2", "per square meter");
        UNITS.put("/mg", "per milligram");
        UNITS.put("/min", "per minute");
        UNITS.put("/mL", "per milliliter");
        UNITS.put("/mm3", "per cubic millimeter");
        UNITS.put("/mmol", "per millimole");
        UNITS.put("/mo", "per month");
        UNITS.put("/s", "per second");
        UNITS.put("/U", "per enzyme unit");
        UNITS.put("/ug", "per microgram");
        UNITS.put("/uL", "per microliter");
        UNITS.put("/wk", "per week");
        UNITS.put("[APL'U]", "IgA anticardiolipin unit");
        UNITS.put("[APL'U]/mL", "IgA anticardiolipin unit per milliliter");
        UNITS.put("[arb'U]", "arbitrary unit");
        UNITS.put("[arb'U]/L", "arbitary unit / liter");
        UNITS.put("[arb'U]/mL", "arbitrary unit per milliliter");
        UNITS.put("[AU]", "allergy unit");
        UNITS.put("[BAU]", "bioequivalent allergen unit");
        UNITS.put("[beth'U]", "Bethesda unit");
        UNITS.put("[CFU]", "colony forming unit");
        UNITS.put("[CFU]/L", "colony forming unit per liter");
        UNITS.put("[CFU]/mL", "colony forming unit per milliliter");
        UNITS.put("[Ch]", "French (catheter gauge)");
        UNITS.put("[cin_i]", "cubic inch");
        UNITS.put("[cup_us]", "cup");
        UNITS.put("[degF]", "degree Fahrenheit");
        UNITS.put("[dr_av]", "Dram (US and British)");
        UNITS.put("[drp]/[HPF]", "drop / HPF");
        UNITS.put("[drp]/h", "drop / hour");
        UNITS.put("[drp]/min", "drop / minute");
        UNITS.put("[drp]/mL", "drop / milliliter");
        UNITS.put("[drp]/s", "drop / second");
        UNITS.put("[fdr_us]", "fluid dram");
        UNITS.put("[foz_br]", "fluid ounce");
        UNITS.put("[foz_us]", "fluid ounce");
        UNITS.put("[fth_i]", "fathom");
        UNITS.put("[gal_br]", "gallon");
        UNITS.put("[GPL'U]", "IgG anticardiolipin unit");
        UNITS.put("[gr]", "grain");
        UNITS.put("[in_i]", "inch (international)");
        UNITS.put("[iU]", "international unit");
        UNITS.put("[IU]/(2.h)", "international unit per 2 hour");
        UNITS.put("[IU]/(24.h)", "international unit per 24 hour");
        UNITS.put("[IU]/10*9{RBCs}", "international unit per billion red blood cells");
        UNITS.put("[IU]/d", "international unit per day");
        UNITS.put("[IU]/dL", "international unit per deciliter");
        UNITS.put("[IU]/g", "international unit per gram");
        UNITS.put("[IU]/g{Hb}", "international unit per gram of hemoglobin");
        UNITS.put("[iU]/g{Hgb}", "international unit / gram Hgb");
        UNITS.put("[IU]/h", "international unit per hour");
        UNITS.put("[IU]/kg", "international unit per kilogram");
        UNITS.put("[IU]/kg/d", "international unit per kilogram per day");
        UNITS.put("[IU]/L", "international unit per liter");
        UNITS.put("[IU]/min", "international unit per minute");
        UNITS.put("[IU]/mL", "international unit per milliliter");
        UNITS.put("[lb_av]", "pound (US and British)");
        UNITS.put("[mi_us]", "mile");
        UNITS.put("[min_us]", "minim");
        UNITS.put("[MPL'U]", "IgM anticardiolipin unit");
        UNITS.put("[nmi_i]", "nautical mile");
        UNITS.put("[oz_av]", "ounce (US and British)");
        UNITS.put("[pH]", "pH");
        UNITS.put("[pi].rad/min", "the number pi * radian / minute");
        UNITS.put("[ppb]", "part per billion");
        UNITS.put("[ppm]", "part per million");
        UNITS.put("[ppm]{v/v}", "part per million in volume per volume");
        UNITS.put("[pptr]", "part per trillion");
        UNITS.put("[ppth]", "parts per thousand");
        UNITS.put("[psi]", "pound per square inch");
        UNITS.put("[pt_br]", "pint");
        UNITS.put("[qt_br]", "quart");
        UNITS.put("[sft_i]", "square foot (international)");
        UNITS.put("[sin_i]", "square inch (international)");
        UNITS.put("[ston_av]", "short ton U.S. ton");
        UNITS.put("[tbs_us]", "tablespoon");
        UNITS.put("[tb'U]", "tuberculin unit");
        UNITS.put("[todd'U]", "Todd unit");
        UNITS.put("{# of calculi}", "# of calculi");
        UNITS.put("{# of donor informative markers}", "# of donor informative markers");
        UNITS.put("{# of fetuses}", "# of fetuses");
        UNITS.put("{# of informative markers}", "# of informative markers");
        UNITS.put("{2 or 3 times}/d", "2 or 3 times / day");
        UNITS.put("{3 times}/d", "3 times / day");
        UNITS.put("{4 times}/d", "4 times / day");
        UNITS.put("{5 times}/d", "5 times / day");
        UNITS.put("{absorbance}", "absorbance");
        UNITS.put("{Absorbance'U}", "Absorbance'U");
        UNITS.put("{Absorbance'U}/mL", "Absorbance'U / milliliter");
        UNITS.put("{activity}", "activity");
        UNITS.put("{ActivityCoefficient}", "ActivityCoefficient");
        UNITS.put("{AntibodyResponse'U}", "AntibodyResponse'U");
        UNITS.put("{Applicator}", "Applicator");
        UNITS.put("{APS'U}", "IgA antiphosphatidylserine unit");
        UNITS.put("{AspirinReaction'U}", "AspirinReaction'U");
        UNITS.put("{Bead}", "Bead");
        UNITS.put("{Beats}/min", "Beats / minute");
        UNITS.put("{Bottle}", "Bottle");
        UNITS.put("{Bowls}/d", "Bowls / day");
        UNITS.put("{Breaths}/min", "Breaths / minute");
        UNITS.put("{CAE'U}", "complement activity enzyme unit");
        UNITS.put("{CagRepeat}", "CagRepeat");
        UNITS.put("{Can}", "Can");
        UNITS.put("{Cans}/wk", "Cans / week");
        UNITS.put("{Capsule}", "Capsule");
        UNITS.put("{Cell}", "Cell");
        UNITS.put("{cells}", "cells");
        UNITS.put("{cells}/[HPF]", "cells per high power field");
        UNITS.put("{Cells}/mL", "Cells / milliliter");
        UNITS.put("{cells}/uL", "cells per microliter");
        UNITS.put("{CfTiter}", "CfTiter");
        UNITS.put("{cfu}", "cfu");
        UNITS.put("{cfu}/mL", "cfu / milliliter");
        UNITS.put("{CGG_repeats}", "CGG_repeats");
        UNITS.put("{CGG}", "CGG");
        UNITS.put("{CH100'U}", "complement CH100 unit");
        UNITS.put("{clock time}", "clock time");
        UNITS.put("{ComplementActivityEnzyme'U}", "ComplementActivityEnzyme'U");
        UNITS.put("{ComplementCH100'U}", "ComplementCH100'U");
        UNITS.put("{ComplementCH50'U}", "ComplementCH50'U");
        UNITS.put("{copies}/mL", "copies per milliliter");
        UNITS.put("{copies}/ug", "copies per microgram");
        UNITS.put("{Copies}/uL", "Copies / microliter");
        UNITS.put("{Count}", "Count");
        UNITS.put("{Counts}/min", "Counts / minute");
        UNITS.put("{Dalton}", "Dalton");
        UNITS.put("{DdTiter}", "DdTiter");
        UNITS.put("{DeltaOpticalDensity}", "DeltaOpticalDensity");
        UNITS.put("{Dilution}", "dilution");
        UNITS.put("{Disintegrations}/min", "Disintegrations / minute");
        UNITS.put("{Dose}", "Dose");
        UNITS.put("{Drinks}/d", "Drinks / day");
        UNITS.put("{Each}", "Each");
        UNITS.put("{Ehrlich'U}", "Ehrlich unit");
        UNITS.put("{Ehrlich'U}/(2.h)", "Ehrlich unit per 2 hour");
        UNITS.put("{Ehrlich'U}/100.g", "Ehrlich unit per 100 gram");
        UNITS.put("{Ehrlich'U}/d", "Ehrlich unit per day");
        UNITS.put("{Ehrlich'U}/mL", "Ehrlich'U / milliliter");
        UNITS.put("{EIAIndex}", "EIA index");
        UNITS.put("{EIATiter}", "EIA titer");
        UNITS.put("{EIA'U}", "EIA unit");
        UNITS.put("{ElisaIndex}", "ElisaIndex");
        UNITS.put("{ELISA'U}", "ELISA unit");
        UNITS.put("{Elisa'U}/mL", "Elisa'U / milliliter");
        UNITS.put("{ElisaValue}", "ElisaValue");
        UNITS.put("{ERY}/uL", "erythrocyte per microliter");
        UNITS.put("{Events}", "Events");
        UNITS.put("{FluorescenceIntensity'U}", "FluorescenceIntensity'U");
        UNITS.put("U{G}", "G unit");
        UNITS.put("{GliadinIndexValue}", "GliadinIndexValue");
        UNITS.put("{G-PortionPhospholipids}", "G-PortionPhospholipids");
        UNITS.put("{HaTiter}", "HaTiter");
        UNITS.put("{IfaIndex}", "IfaIndex");
        UNITS.put("{IfaTiter}", "IfaTiter");
        UNITS.put("{IgAAntiphosphatidyleserine'U}", "IgAAntiphosphatidyleserine'U");
        UNITS.put("{IgAPhospholipid'U}", "IgAPhospholipid'U");
        UNITS.put("{IgGAntiphosphatidyleserine'U}", "IgGAntiphosphatidyleserine'U");
        UNITS.put("{IgGIndex}", "IgGIndex");
        UNITS.put("{IgMAntiphosphatidyleserine'U}", "IgMAntiphosphatidyleserine'U");
        UNITS.put("{IgMIndex}", "IgMIndex");
        UNITS.put("{ImmuneComplex'U}", "immune complex unit");
        UNITS.put("{ImmuneStatusRatio}", "ImmuneStatusRatio");
        UNITS.put("{Immunity}", "Immunity");
        UNITS.put("{Index_val}", "Index_val");
        UNITS.put("{IndexValue}", "IndexValue");
        UNITS.put("{InhaledTobaccoUseAmountYears}", "InhaledTobaccoUseAmountYears");
        UNITS.put("{InhaledTobaccoUsePacks}/d", "InhaledTobaccoUsePacks / day");
        UNITS.put("{INR}", "international normalized ratio");
        UNITS.put("{INR'unit}", "INR'unit");
        UNITS.put("{JDF'U}", "Juvenile Diabetes Foundation unit");
        UNITS.put("{JDF'U}/L", "Juvenile Diabetes Foundation unit per liter");
        UNITS.put("{JuvenileDiabetesFound'U}", "JuvenileDiabetesFound'U");
        UNITS.put("{KCT'U}", "kaolin clotting time");
        UNITS.put("{KRONU'U}/L", "Kronus unit per liter");
        UNITS.put("{KRONU'U}/mL", "Kronus unit per milliliter");
        UNITS.put("{lgCopies}/ml", "lgCopies / milliliter");
        UNITS.put("{log_copies}/mL", "log (base 10) copies per milliliter");
        UNITS.put("{log_IU}/mL", "log (base 10) international unit per milliliter");
        UNITS.put("{LymeIndexValue}", "LymeIndexValue");
        UNITS.put("{M.o.M.}", "M.o.M.");
        UNITS.put("{M.o.M}", "multiple of the median");
        UNITS.put("{Markers}", "Markers");
        UNITS.put("{minidrp}", "minidrp");
        UNITS.put("{Molecule}/{Platelet}", "Molecule / Platelet");
        UNITS.put("{M-PortionPhospholipids}", "M-PortionPhospholipids");
        UNITS.put("{MPS'U}", "IgM antiphosphatidylserine unit");
        UNITS.put("{MPS'U}/mL", "IgM antiphosphatidylserine unit per milliliter");
        UNITS.put("{MultOfMean}", "MultOfMean");
        UNITS.put("{NonspecificOunce}", "NonspecificOunce");
        UNITS.put("{Number}", "Number");
        UNITS.put("{OD_unit}", "optical density unit");
        UNITS.put("{Once}/d", "Once / day");
        UNITS.put("{OpticalDensity}", "OpticalDensity");
        UNITS.put("{OpticalDensityIndex}", "OpticalDensityIndex");
        UNITS.put("{OpticalDensityRatio}", "OpticalDensityRatio");
        UNITS.put("{P2Y12 Reaction Units}", "P2Y12 Reaction Units");
        UNITS.put("{Package}", "Package");
        UNITS.put("{Packs}/d", "Packs / day");
        UNITS.put("{PackYears}", "PackYears");
        UNITS.put("{Patch}", "Patch");
        UNITS.put("{Percentile}", "Percentile");
        UNITS.put("{Pill}", "Pill");
        UNITS.put("{Pouches}/wk", "Pouches / week");
        UNITS.put("{RadioactiveT3UptakeRatio}", "RadioactiveT3UptakeRatio");
        UNITS.put("{ratio}", "ratio");
        UNITS.put("{RBC}/uL", "red blood cell per microliter");
        UNITS.put("{RecTiter}", "RecTiter");
        UNITS.put("{Relative'U}", "Relative'U");
        UNITS.put("{RelativeViscosity}", "RelativeViscosity");
        UNITS.put("{RPI'U}", "RPI'U");
        UNITS.put("{RubellaVirus}", "RubellaVirus");
        UNITS.put("{SatIndex}", "SatIndex");
        UNITS.put("{Scoop}", "Scoop");
        UNITS.put("{ScoreOf}", "ScoreOf");
        UNITS.put("{shift}", "shift");
        UNITS.put("{spermatozoa}/mL", "spermatozoa per milliliter");
        UNITS.put("{spray}", "spray");
        UNITS.put("{StandardDeviation}", "StandardDeviation");
        UNITS.put("{StandardIgA'U}", "StandardIgA'U");
        UNITS.put("{StandardIgG'U}", "StandardIgG'U");
        UNITS.put("{StandardIgM'U}", "StandardIgM'U");
        UNITS.put("{StdDeviation'U}", "StdDeviation'U");
        UNITS.put("{StimulatingIndex}", "StimulatingIndex");
        UNITS.put("{Streptozyme'U}", "Streptozyme'U");
        UNITS.put("{ThyroxinUptake'U}", "ThyroxinUptake'U");
        UNITS.put("{TIBC'U}", "TIBC'U");
        UNITS.put("{Times}/wk", "Times / week");
        UNITS.put("{Tine'U}", "Tine'U");
        UNITS.put("{titer}", "titer");
        UNITS.put("{ToxoplasmaIndexValue}", "ToxoplasmaIndexValue");
        UNITS.put("{Vial}", "Vial");
        UNITS.put("{Volume}/{Vvolume}", "Volume / Vvolume");
        UNITS.put("{WeeksDays}", "WeeksDays");
        UNITS.put("{WhiteBloodCell}", "WhiteBloodCell");
        UNITS.put("1/d", "one per day");
        UNITS.put("1/min", "one per minute");
        UNITS.put("10*12/L", "trillion per liter");
        UNITS.put("10*3", "Thousand");
        UNITS.put("10*3.{RBC}", "Thousand Red Blood Cells");
        UNITS.put("10*3.U", "Thousand Per * Unit");
        UNITS.put("10*3/L", "Thousand Per Liter");
        UNITS.put("10*3/mL", "Thousand Per MilliLiter");
        UNITS.put("10*3/uL", "Thousands Per MicroLiter");
        UNITS.put("10*3{Copies}/mL", "Thousand Copies Per MilliLiter");
        UNITS.put("10*-3{Polarization'U}", "(the number ten for arbitrary powers ^ -3) Polarization'U");
        UNITS.put("10*6", "Million");
        UNITS.put("10*6.[iU]", "MillionInternationalUnit");
        UNITS.put("10*6.eq/mL", "MillionEquivalentsPerMilliLiter");
        UNITS.put("10*6.U", "(the number ten for arbitrary powers ^ 6) * Unit");
        UNITS.put("10*6/{Specimen}", "MillionPerSpecimen");
        UNITS.put("10*6/kg", "million per kilogram");
        UNITS.put("10*6/L", "million per liter");
        UNITS.put("10*6/mL", "million per milliliter");
        UNITS.put("10*6/mm3", "(the number ten for arbitrary powers ^ 6) / (millimeter ^ 3)");
        UNITS.put("10*6/uL", "million per microliter");
        UNITS.put("10*-6{Immunofluorescence'U}", "(the number ten for arbitrary powers ^ -6) Immunofluorescence'U");
        UNITS.put("10*9/L", "billion per liter");
        UNITS.put("10*9/mL", "billion per milliliter");
        UNITS.put("10*9/uL", "billion per microliter");
        UNITS.put("10.L/(min.m2)", "10 liter per minute per square meter");
        UNITS.put("10.L/min", "10 liter per minute");
        UNITS.put("10.uN.s/(cm.m2)", "10 * microNewton * second / centimeter * (meter ^ 2)");
        UNITS.put("10.uN.s/cm", "10 * microNewton * second / centimeter");
        UNITS.put("10.uN.s/cm2", "10 * microNewton * second / (centimeter ^ 2)");
        UNITS.put("a", "year");
        UNITS.put("att", "technical atmosphere");
        UNITS.put("bar", "bar");
        UNITS.put("Cel", "degree Celsius");
        UNITS.put("cg", "centigram");
        UNITS.put("cL", "centiliter");
        UNITS.put("cm", "centimeter");
        UNITS.put("cm[H2O]", "centimeter of water");
        UNITS.put("cm[H2O]/(s.m)", "centimeter of water column / second * meter");
        UNITS.put("cm[H2O]/L/s", "centimeter of water per liter per second");
        UNITS.put("cm[Hg]", "centimeter of mercury");
        UNITS.put("cm2", "square centimeter");
        UNITS.put("cm2/s", "square centimeter per second");
        UNITS.put("cm3", "cubic centimeter");
        UNITS.put("d", "day");
        UNITS.put("dB", "decibel");
        UNITS.put("deg", "degree");
        UNITS.put("deg/s", "degree per second");
        UNITS.put("dg", "decigram");
        UNITS.put("dL", "deciliter");
        UNITS.put("dm", "decimeter");
        UNITS.put("dm2/s2", "square decimeter per square second");
        UNITS.put("eq", "equivalents");
        UNITS.put("erg", "erg");
        UNITS.put("fg", "femtogram");
        UNITS.put("fL", "femtoliter");
        UNITS.put("fL/nL", "femtoliter / nanoliter");
        UNITS.put("fm", "femtometer");
        UNITS.put("fmol", "femtomole");
        UNITS.put("fmol/g", "femtomole per gram");
        UNITS.put("fmol/L", "femtomole per liter");
        UNITS.put("g", "gram");
        UNITS.put("g.m/({hb}.m2)", "gram * meter / hb * (meter ^ 2)");
        UNITS.put("g.m/{hb}", "gram * meter / hb");
        UNITS.put("g/(100.g)", "gram per 100 gram");
        UNITS.put("g/(12.h)", "gram per 12 hour");
        UNITS.put("g/(24.h)", "gram per 24 hour");
        UNITS.put("g/(3.d)", "gram per 3 days");
        UNITS.put("g/(4.h)", "gram per 4 hour");
        UNITS.put("g/(48.h)", "gram per 48 hour");
        UNITS.put("g/(5.h)", "gram per 5 hour");
        UNITS.put("g/(6.h)", "gram per 6 hour");
        UNITS.put("g/(72.h)", "gram per 72 hour");
        UNITS.put("g/(8.h)", "gram / 8 * hour");
        UNITS.put("g/(8.kg.h)", "gram / 8 * kilogram * hour");
        UNITS.put("g/(kg.h)", "gram / kilogram * hour");
        UNITS.put("g/(kg.min)", "gram / kilogram * minute");
        UNITS.put("g/{TotalWeight}", "gram / TotalWeight");
        UNITS.put("g/d", "gram per day");
        UNITS.put("g/dL", "gram per deciliter");
        UNITS.put("g/g", "gram per gram");
        UNITS.put("g/g{Cre}", "gram / gram Cre");
        UNITS.put("g/g{tissue}", "gram per gram of tissue");
        UNITS.put("g/h", "gram per hour");
        UNITS.put("g/h/m2", "gram per hour per square meter");
        UNITS.put("g/kg", "gram per kilogram");
        UNITS.put("g/kg/d", "gram per kilogram per day");
        UNITS.put("g/L", "gram per liter");
        UNITS.put("g/mg", "gram per milligram");
        UNITS.put("g/min", "gram per minute");
        UNITS.put("g/mL", "gram per milliliter");
        UNITS.put("g/mmol", "gram per millimole");
        UNITS.put("g/mmol{creat}", "gram / millimole creat");
        UNITS.put("g/mol", "gram per mole");
        UNITS.put("GBq", "gigaBecquerel");
        UNITS.put("h", "hour");
        UNITS.put("hL", "hectoliter");
        UNITS.put("Hz", "Hertz");
        UNITS.put("J", "joule");
        UNITS.put("J/L", "joule per liter");
        UNITS.put("K", "Kelvin");
        UNITS.put("k[IU]/L", "kilo international unit per liter");
        UNITS.put("k[IU]/mL", "kilo international unit per milliliter");
        UNITS.put("kBq", "kiloBecquerel");
        UNITS.put("kcal", "kilocalorie");
        UNITS.put("kcal/(8.h)", "kilocalorie / 8 * hour");
        UNITS.put("kcal/h", "kilocalorie per hour");
        UNITS.put("kg", "kilogram");
        UNITS.put("kg.m/s", "kilogram meter per second");
        UNITS.put("kg/(s.m2)", "kilogram per second per square meter");
        UNITS.put("kg/h", "kilogram per hour");
        UNITS.put("kg/L", "kilogram per liter");
        UNITS.put("kg/mol", "kilogram per mole");
        UNITS.put("kL", "kiloliter");
        UNITS.put("km", "kilometer");
        UNITS.put("ks", "kilosecond");
        UNITS.put("kU/h", "kiloUnit / hour");
        UNITS.put("kU/mL", "kilo enzyme unit per milliliter");
        UNITS.put("L", "liter");
        UNITS.put("L.s2/s", "liter * (second ^ 2) / second");
        UNITS.put("L/(8.h)", "liter per 8 hour");
        UNITS.put("L/(min.m2)", "liter per minute per square meter");
        UNITS.put("L/d", "liter per day");
        UNITS.put("L/h", "liter per hour");
        UNITS.put("L/kg", "liter per kilogram");
        UNITS.put("L/L", "liter per liter");
        UNITS.put("L/min", "liter per minute");
        UNITS.put("lm/m2", "lumen / (meter ^ 2)");
        UNITS.put("m", "meter");
        UNITS.put("m/s", "meter per second");
        UNITS.put("m/s2", "meter per square second");
        UNITS.put("m[iU]", "milliinternational unit");
        UNITS.put("m[IU]/L", "milli international unit per liter");
        UNITS.put("m2", "square meter");
        UNITS.put("m2/s", "square meter per second");
        UNITS.put("m3/s", "cubic meter per second");
        UNITS.put("mbar", "millibar");
        UNITS.put("mbar.s/L", "millibar second per liter");
        UNITS.put("MBq", "megaBecquerel");
        UNITS.put("mCi", "milliCurie");
        UNITS.put("meq", "milliequivalent");
        UNITS.put("meq/(12.h)", "milliequivalent per 12 hour");
        UNITS.put("meq/(2.h)", "milliequivalent per 2 hour");
        UNITS.put("meq/(24.h)", "milliequivalent per 24 hour");
        UNITS.put("meq/(8.h)", "milliequivalent per 8 hour");
        UNITS.put("meq/(8.h.kg)", "milliequivalents / 8 * hour * kilogram");
        UNITS.put("meq/(kg.d)", "milliequivalents / kilogram * day");
        UNITS.put("meq/{Specimen}", "milliequivalents / Specimen");
        UNITS.put("meq/d", "milliequivalent per day");
        UNITS.put("meq/dL", "milliequivalent per deciliter");
        UNITS.put("meq/g", "milliequivalent per gram");
        UNITS.put("meq/g{Cre}", "milliequivalents / gram Cre");
        UNITS.put("meq/h", "milliequivalent per hour");
        UNITS.put("meq/kg", "milliequivalent per kilogram");
        UNITS.put("meq/kg/h", "milliequivalent per kilogram per hour");
        UNITS.put("meq/kg/min", "milliequivalents / kilogram / minute");
        UNITS.put("meq/L", "milliequivalent per liter");
        UNITS.put("meq/m2", "milliequivalent per square meter");
        UNITS.put("meq/min", "milliequivalent per minute");
        UNITS.put("meq/mL", "milliequivalent per milliliter");
        UNITS.put("mg", "milligram");
        UNITS.put("mg/(10.h)", "milligram per 10 hour");
        UNITS.put("mg/(12.h)", "milligram per 12 hour");
        UNITS.put("mg/(18.h)", "milligram per 18 hour");
        UNITS.put("mg/(2.h)", "milligram per 2 hour");
        UNITS.put("mg/(24.h)", "milligram per 24 hour");
        UNITS.put("mg/(72.h)", "milligram per 72 hour");
        UNITS.put("mg/(8.h)", "milligram per 8 hour");
        UNITS.put("mg/(8.h.kg)", "milligram / 8 * hour * kilogram");
        UNITS.put("mg/(kg.h)", "milligram / kilogram * hour");
        UNITS.put("mg/{Hgb}/g", "milligram / Hgb / gram");
        UNITS.put("mg/{Specimen}", "milligram / Specimen");
        UNITS.put("mg/{Tot'Volume}", "milligram / Tot'Volume");
        UNITS.put("mg/{Volume}", "milligram / Volume");
        UNITS.put("mg/d", "milligram per day");
        UNITS.put("mg/d/(173.10*-2.m2)", "milligram / day / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)");
        UNITS.put("mg/dL", "milligram per deciliter");
        UNITS.put("mg/g", "milligram per gram");
        UNITS.put("mg/g{Cre}", "milligram / gram Cre");
        UNITS.put("mg/g{creat}", "milligram per gram of creatinine");
        UNITS.put("mg/h", "milligram per hour");
        UNITS.put("mg/kg", "milligram per kilogram");
        UNITS.put("mg/kg/(24.h)", "milligram / kilogram / 24 * hour");
        UNITS.put("mg/kg/d", "milligram per kilogram per day");
        UNITS.put("mg/kg/min", "milligram per kilogram per minute");
        UNITS.put("mg/L", "milligram per liter");
        UNITS.put("mg/m2", "milligram per square meter");
        UNITS.put("mg/m3", "milligram per cubic meter");
        UNITS.put("mg/mg", "milligram per milligram");
        UNITS.put("mg/mg{cre}", "milligram / milligram cre");
        UNITS.put("mg/min", "milligram per minute");
        UNITS.put("mg/mL", "milligram per milliliter");
        UNITS.put("mg/mmol", "milligram per millimole");
        UNITS.put("mg/mmol{Cre}", "milligram / millimole Cre");
        UNITS.put("mg/mmol{creat}", "milligram per millimole of creatinine");
        UNITS.put("mg/wk", "milligram per week");
        UNITS.put("mg{Phenylketones}/dL", "milligram Phenylketones / deciliter");
        UNITS.put("min", "minute");
        UNITS.put("mL", "milliliter");
        UNITS.put("mL/({h'b}.m2)", "milliliter / h'b * (meter ^ 2)");
        UNITS.put("mL/(10.h)", "milliliter per 10 hour");
        UNITS.put("mL/(12.h)", "milliliter per 12 hour");
        UNITS.put("mL/(2.h)", "milliliter per 2 hour");
        UNITS.put("mL/(24.h)", "milliliter per 24 hour");
        UNITS.put("mL/(4.h)", "milliliter per 4 hour");
        UNITS.put("mL/(72.h)", "milliliter per 72 hour");
        UNITS.put("mL/(8.h)", "milliliter per 8 hour");
        UNITS.put("mL/(kg.min)", "milliliter / kilogram * minute");
        UNITS.put("mL/[sin_i]", "milliliter per square inch (international)");
        UNITS.put("mL/{h'b}", "MilliLitersPerHeartbeat [SI Volume Units]");
        UNITS.put("mL/d", "milliliter per day");
        UNITS.put("mL/dL", "milliliter per deciliter");
        UNITS.put("mL/h", "milliliter per hour");
        UNITS.put("mL/kg", "milliliter per kilogram");
        UNITS.put("mL/kg/(8.h)", "milliliter per kilogram per 8 hour");
        UNITS.put("mL/kg/d", "milliliter per kilogram per day");
        UNITS.put("mL/kg/h", "milliliter per kilogram per hour");
        UNITS.put("mL/kg/min", "milliliter per kilogram per minute");
        UNITS.put("mL/L", "milliliter per liter");
        UNITS.put("mL/m2", "milliliter per square meter");
        UNITS.put("mL/mbar", "milliliter per millibar");
        UNITS.put("mL/min", "milliliter per minute");
        UNITS.put("mL/min/(173.10*-2.m2)", "milliliter / minute / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)");
        UNITS.put("mL/min/{1.73_m2}", "milliliter per minute per 1.73 square meter");
        UNITS.put("mL/min/m2", "milliliter per minute per square meter");
        UNITS.put("mL/mm", "milliliter per millimeter");
        UNITS.put("mL/s", "milliliter per second");
        UNITS.put("mm", "millimeter");
        UNITS.put("mm/h", "millimeter per hour");
        UNITS.put("mm/min", "millimeter per minute");
        UNITS.put("mm[H2O]", "millimeter of water");
        UNITS.put("mm[Hg]", "millimeter of mercury");
        UNITS.put("mm2", "square millimeter");
        UNITS.put("mm3", "cubic millimeter");
        UNITS.put("mmol", "millimole");
        UNITS.put("mmol/(12.h)", "millimole per 12 hour");
        UNITS.put("mmol/(18.h)", "millimole per 18 hour");
        UNITS.put("mmol/(2.h)", "millimole per 2 hour");
        UNITS.put("mmol/(24.h)", "millimole per 24 hour");
        UNITS.put("mmol/(6.h)", "millimole per 6 hour");
        UNITS.put("mmol/(8.h)", "millimole per 8 hour");
        UNITS.put("mmol/(8.h.kg)", "millimole / 8 * hour * kilogram");
        UNITS.put("mmol/{Tot'Volume}", "millimole / Tot'Volume");
        UNITS.put("mmol/d", "millimole per day");
        UNITS.put("mmol/dL", "millimole per deciliter");
        UNITS.put("mmol/g", "millimole per gram");
        UNITS.put("mmol/g{creat}", "millimole per gram of creatinine");
        UNITS.put("mmol/g{hemoglobin}", "millimole per gram of hemoglobin");
        UNITS.put("mmol/h", "millimole per hour");
        UNITS.put("mmol/h/mg{Hb}", "millimole per hour per milligram of hemoglobin");
        UNITS.put("mmol/h/mg{protein}", "millimole per hour per milligram of protein");
        UNITS.put("mmol/kg", "millimole per kilogram");
        UNITS.put("mmol/kg/d", "millimole per kilogram per day");
        UNITS.put("mmol/kg/h", "millimole per kilogram per hour");
        UNITS.put("mmol/kg/min", "millimole per kilogram per minute");
        UNITS.put("mmol/kg{H2O}", "millimole per kilogram of water");
        UNITS.put("mmol/L", "millimole per liter");
        UNITS.put("mmol/L/s", "millimole per liter per second");
        UNITS.put("mmol/m", "millimole / meter");
        UNITS.put("mmol/m2", "millimole per square meter");
        UNITS.put("mmol/min", "millimole per minute");
        UNITS.put("mmol/mmol", "millimole per millimole");
        UNITS.put("mmol/mol", "millimole per mole");
        UNITS.put("mmol/mol{creat}", "millimole per mole of creatinine");
        UNITS.put("mmol/s/L", "millimole per second per liter");
        UNITS.put("mo", "month");
        UNITS.put("mol", "mole");
        UNITS.put("mol/d", "mole per day");
        UNITS.put("mol/kg", "mole per kilogram");
        UNITS.put("mol/kg/s", "mole per kilogram per second");
        UNITS.put("mol/L", "mole per liter");
        UNITS.put("mol/m3", "mole per cubic meter");
        UNITS.put("mol/mL", "mole per milliliter");
        UNITS.put("mol/mol", "mole per mole");
        UNITS.put("mol/mol{creat}", "mole / mole creat");
        UNITS.put("mol/s", "mole per second");
        UNITS.put("mosm", "milliosmole");
        UNITS.put("mosm/kg", "milliosmole per kilogram");
        UNITS.put("mosm/L", "milliosmole per liter");
        UNITS.put("mPa", "millipascal");
        UNITS.put("ms", "millisecond");
        UNITS.put("mU", "millienzyme Unit");
        UNITS.put("mU/g{Hgb}", "milliUnit / gram Hgb");
        UNITS.put("mU/mg{Cre}", "milliUnit / milligram Cre");
        UNITS.put("mU/min", "milliUnit / minute");
        UNITS.put("mU/mmol{creatinine}", "millienzyme Unit per millimole of creatinine");
        UNITS.put("N", "Newton");
        UNITS.put("N.cm", "Newton centimeter");
        UNITS.put("N.s", "Newton second");
        UNITS.put("nCi", "nanoCurie");
        UNITS.put("ng", "nanogram");
        UNITS.put("ng/(24.h)", "nanogram per 24 hour");
        UNITS.put("ng/(8.h)", "nanogram per 8 hour");
        UNITS.put("ng/(8.h.kg)", "nanogram / 8 * hour * kilogram");
        UNITS.put("ng/(kg.d)", "nanogram / kilogram * day");
        UNITS.put("ng/(kg.h)", "nanogram / kilogram * hour");
        UNITS.put("ng/(kg.min)", "nanogram / kilogram * minute");
        UNITS.put("ng/10*6", "nanogram per million");
        UNITS.put("ng/d", "nanogram per day");
        UNITS.put("ng/dL", "nanogram per deciliter");
        UNITS.put("ng/dL/h", "nanogram / deciliter / hour");
        UNITS.put("ng/g", "nanogram per gram");
        UNITS.put("ng/g{Cre}", "nanogram / gram Cre");
        UNITS.put("ng/g{creat}", "nanogram per gram of creatinine");
        UNITS.put("ng/h", "nanogram per hour");
        UNITS.put("ng/kg", "nanogram per kilogram");
        UNITS.put("ng/kg/(8.h)", "nanogram per kilogram per 8 hour");
        UNITS.put("ng/kg/h", "nanogram per kilogram per hour");
        UNITS.put("ng/kg/min", "nanogram per kilogram per minute");
        UNITS.put("ng/L", "nanogram per liter");
        UNITS.put("ng/m2", "nanogram per square meter");
        UNITS.put("ng/mg", "nanogram per milligram");
        UNITS.put("ng/mg/h", "nanogram per milligram per hour");
        UNITS.put("ng/mg{Protein}", "nanogram / milligram Protein");
        UNITS.put("ng/min", "nanogram per minute");
        UNITS.put("ng/mL", "nanogram per millliiter");
        UNITS.put("ng/mL/h", "nanogram per milliliter per hour");
        UNITS.put("ng/mL{rbc}", "nanogram / milliliter rbc");
        UNITS.put("ng/s", "nanogram per second");
        UNITS.put("nkat", "nanokatal");
        UNITS.put("nL", "nanoliter");
        UNITS.put("nm", "nanometer");
        UNITS.put("nm/s/L", "nanometer per second per liter");
        UNITS.put("nmol", "nanomole");
        UNITS.put("nmol/(24.h)", "nanomole per 24 hour");
        UNITS.put("nmol/d", "nanomole per day");
        UNITS.put("nmol/dL", "nanomole per deciliter");
        UNITS.put("nmol/g", "nanomole per gram");
        UNITS.put("nmol/g{Cre}", "nanomole / gram Cre");
        UNITS.put("nmol/g{creat}", "nanomole per gram of creatinine");
        UNITS.put("nmol/g{dry_wt}", "nanomole per gram of dry weight");
        UNITS.put("nmol/h/L", "nanomole per hour per liter");
        UNITS.put("nmol/h/mg{protein}", "nanomole per hour per milligram of protein");
        UNITS.put("nmol/h/mL", "nanomole per hour per milliliter");
        UNITS.put("nmol/L", "nanomole per liter");
        UNITS.put("nmol/L/mmol{creat}", "nanomole per liter per millimole of creatinine");
        UNITS.put("nmol/L/s", "nanomole per liter per second");
        UNITS.put("nmol/L{RBCs}", "nanomole per liter of red blood cells");
        UNITS.put("nmol/m/mg{protein}", "nanomole per meter per milligram of protein");
        UNITS.put("nmol/mg", "nanomole per milligram");
        UNITS.put("nmol/mg/h", "nanomole per milligram per hour");
        UNITS.put("nmol/min/mg{hemoglobin}", "nanomole per minute per milligram of hemoglobin");
        UNITS.put("nmol/min/mg{protein}", "nanomole per minute per milligram of protein");
        UNITS.put("nmol/min/mL", "nanomole per minute per milliliter");
        UNITS.put("nmol/mL", "nanomole per milliliter");
        UNITS.put("nmol/mL/h", "nanomole per milliliter per hour");
        UNITS.put("nmol/mL/min", "nanomole per milliliter per minute");
        UNITS.put("nmol/mmol", "nanomole per millimole");
        UNITS.put("nmol/mmol{Cre}", "nanomole / millimole Cre");
        UNITS.put("nmol/mmol{creat}", "nanomole per millimole of creatinine");
        UNITS.put("nmol/mol", "nanomole per mole");
        UNITS.put("nmol/nmol", "nanomole per nanomole");
        UNITS.put("nmol/s", "nanomole per second");
        UNITS.put("nmol/s/L", "nanomole per second per liter");
        UNITS.put("ns", "nanosecond");
        UNITS.put("Ohm", "Ohm");
        UNITS.put("osm/kg", "osmole per kilogram");
        UNITS.put("osm/L", "osmole per liter");
        UNITS.put("Pa", "Pascal");
        UNITS.put("pg", "picogram");
        UNITS.put("pg/dL", "picogram per deciliter");
        UNITS.put("pg/L", "picogram per liter");
        UNITS.put("pg/mg", "picogram per milligram");
        UNITS.put("pg/mL", "picogram per milliliter");
        UNITS.put("pg/mm", "picogram per millimeter");
        UNITS.put("pkat", "picokatal");
        UNITS.put("pL", "picoliter");
        UNITS.put("pm", "picometer");
        UNITS.put("pmol", "picomole");
        UNITS.put("pmol/d", "picomole per day");
        UNITS.put("pmol/dL", "picomole per deciliter");
        UNITS.put("pmol/g", "picomole per gram");
        UNITS.put("pmol/h/mg{protein}", "picomole per hour per milligram of protein");
        UNITS.put("pmol/h/mL", "picomole per hour per milliliter");
        UNITS.put("pmol/L", "picomole per liter");
        UNITS.put("pmol/mg{protein}", "picomole per milligram of protein");
        UNITS.put("pmol/min", "picomole per minute");
        UNITS.put("pmol/min/mg{protein}", "picomole per minute per milligram of protein");
        UNITS.put("pmol/mL", "picomole per milliliter");
        UNITS.put("pmol/mmol", "picomole per millimole");
        UNITS.put("pmol/mmol{creat}", "picomole per millimole of creatinine");
        UNITS.put("pmol/mol", "picomole per mole");
        UNITS.put("pmol/umol", "picomole per micromole");
        UNITS.put("pmol/umol{creat}", "picomole per micromole of creatinine");
        UNITS.put("ps", "picosecond");
        UNITS.put("pT", "picotesla");
        UNITS.put("s", "second");
        UNITS.put("St", "Stokes");
        UNITS.put("t", "tonne");
        UNITS.put("U/(1.h)", "enzyme Unit per 1 hour");
        UNITS.put("U/(12.h)", "enzyme unit per 12 hour");
        UNITS.put("U/(18.h)", "enzyme Unit per 18 hour");
        UNITS.put("U/(2.h)", "enzyme unit per 2 hour");
        UNITS.put("U/(24.h)", "enzyme unit per 24 hour");
        UNITS.put("U/10*10{cells}", "enzyme unit per 10 billion cells");
        UNITS.put("U/10*12", "enzyme unit per trillion");
        UNITS.put("U/10*6", "enzyme unit per million");
        UNITS.put("U/10*9", "enzyme unit per billion");
        UNITS.put("U/d", "enzyme unit per day");
        UNITS.put("U/dL", "enzyme unit per deciliter");
        UNITS.put("U/g", "enzyme unit per gram");
        UNITS.put("U/g{Cre}", "Unit / gram Cre");
        UNITS.put("U/g{Hb}", "enzyme unit per gram of hemoglobin");
        UNITS.put("U/g{hemoglobin}", "enzyme Unit per gram of hemoglobin");
        UNITS.put("U/g{Hgb}", "UnitsPerGramHemoglobin");
        UNITS.put("U/h", "enzyme unit per hour");
        UNITS.put("U/kg/h", "Unit / kilogram / hour");
        UNITS.put("U/kg{Hb}", "enzyme unit per kilogram of hemoglobin");
        UNITS.put("U/kg{hemoglobin}", "enzyme Unit per kilogram of hemoglobin");
        UNITS.put("U/L", "enzyme unit per liter");
        UNITS.put("U/min", "enzyme unit per minute");
        UNITS.put("U/mL", "enzyme unit per milliliter");
        UNITS.put("U/mL{RBC}", "Unit / milliliter RBC");
        UNITS.put("U/mL{RBCs}", "enzyme unit per milliliter of red blood cells");
        UNITS.put("U/mmol{creat}", "enzyme unit per millimole of creatinine");
        UNITS.put("U/mol", "enzyme Unit per mole");
        UNITS.put("U/s", "enzyme unit per second");
        UNITS.put("U/umol", "enzyme Unit per micromole");
        UNITS.put("u[IU]", "micro international unit");
        UNITS.put("u[IU]/L", "microinternational unit per liter");
        UNITS.put("u[IU]/mL", "micro international unit per milliliter");
        UNITS.put("ueq", "microequivalents");
        UNITS.put("ueq/L", "microequivalent per liter");
        UNITS.put("ueq/mL", "microequivalent per milliliter");
        UNITS.put("ug", "microgram");
        UNITS.put("ug/(24.h)", "microgram per 24 hour");
        UNITS.put("ug/(8.h)", "microgram per 8 hour");
        UNITS.put("ug/(kg.d)", "microgram / kilogram * day");
        UNITS.put("ug/(kg.h)", "microgram / kilogram * hour");
        UNITS.put("ug/{Specimen}", "microgram / Specimen");
        UNITS.put("ug/{TotalVolume}", "MicroGramsPerTotalVolume");
        UNITS.put("ug/d", "microgram per day");
        UNITS.put("ug/dL", "microgram per deciliter");
        UNITS.put("ug/dL{rbc}", "microgram / deciliter rbc");
        UNITS.put("ug/g", "microgram per gram");
        UNITS.put("ug/g{Cre}", "microgram / gram Cre");
        UNITS.put("ug/g{creat}", "microgram per gram of creatinine");
        UNITS.put("ug/g{DryWeight}", "microgram / gram DryWeight");
        UNITS.put("ug/g{Hgb}", "microgram / gram Hgb");
        UNITS.put("ug/g{Tissue}", "microgram / gram Tissue");
        UNITS.put("ug/h", "microgram per hour");
        UNITS.put("ug/kg", "microgram per kilogram");
        UNITS.put("ug/kg/(8.h)", "microgram per kilogram per 8 hour");
        UNITS.put("ug/kg/d", "microgram per kilogram per day");
        UNITS.put("ug/kg/h", "microgram per kilogram per hour");
        UNITS.put("ug/kg/min", "microgram per kilogram per minute");
        UNITS.put("ug/L", "microgram per liter");
        UNITS.put("ug/L/(24.h)", "microgram per liter per 24 hour");
        UNITS.put("ug/L{DDU}", "microgram / liter DDU");
        UNITS.put("ug/m2", "microgram per square meter");
        UNITS.put("ug/mg", "microgram per milligram");
        UNITS.put("ug/mg{Cre}", "microgram / milligram Cre");
        UNITS.put("ug/mg{creat}", "microgram per milligram of creatinine");
        UNITS.put("ug/min", "microgram per minute");
        UNITS.put("ug/mL", "microgram per milliliter");
        UNITS.put("ug/mL{FEU}", "microgram / milliliter FEU");
        UNITS.put("ug/mmol", "microgram per millimole");
        UNITS.put("ug/ng", "microgram per nanogram");
        UNITS.put("ug{T4}/dL", "microgram T4 / deciliter");
        UNITS.put("ukat", "microkatal");
        UNITS.put("uL", "microliter");
        UNITS.put("uL/(2.h)", "microliter per 2 hour");
        UNITS.put("uL/h", "microliter per hour");
        UNITS.put("um", "micrometer");
        UNITS.put("um/s", "micrometer per second");
        UNITS.put("umol", "micromole");
        UNITS.put("umol/(24.h)", "micromole per 24 hour");
        UNITS.put("umol/d", "micromole per day");
        UNITS.put("umol/dL", "micromole per deciliter");
        UNITS.put("umol/g", "micromole per gram");
        UNITS.put("umol/g{Cre}", "micromole / gram Cre");
        UNITS.put("umol/g{creat}", "micromole per gram of creatinine");
        UNITS.put("umol/g{Hb}", "micromole per gram of hemoglobin");
        UNITS.put("umol/g{hemoglobin}", "micromole per gram of hemoglobin");
        UNITS.put("umol/g{Hgb}", "micromole / gram Hgb");
        UNITS.put("umol/h", "micromole per hour");
        UNITS.put("umol/h/g", "micromole / hour / gram");
        UNITS.put("umol/h/L", "micromole per hour per liter");
        UNITS.put("umol/h/mg{protein}", "micromole per hour per milligram of protein");
        UNITS.put("umol/kg", "micromole per kilogram");
        UNITS.put("umol/L", "micromole per liter");
        UNITS.put("umol/L/h", "micromole per liter per hour");
        UNITS.put("umol/L{rbc}", "micromole per liter of red blood cells");
        UNITS.put("umol/m", "micromole / meter");
        UNITS.put("umol/mg", "micromole per milligram");
        UNITS.put("umol/mg{Cre}", "micromole / milligram Cre");
        UNITS.put("umol/min", "micromole per minute");
        UNITS.put("umol/min/g", "micromole per minute per gram");
        UNITS.put("umol/min/g{protein}", "micromole per minute per gram of protein");
        UNITS.put("umol/min/L", "micromole per minute per liter");
        UNITS.put("umol/mL", "micromole per milliliter");
        UNITS.put("umol/mL/min", "micromole per milliliter per minute");
        UNITS.put("umol/mmol", "micromole per millimole");
        UNITS.put("umol/mol", "micromole per mole");
        UNITS.put("umol/mol{Cre}", "micromole / mole Cre");
        UNITS.put("umol/mol{creat}", "micromole per mole of creatinine");
        UNITS.put("umol/mol{Hb}", "micromole per mole of hemoglobin");
        UNITS.put("umol/umol", "micromole per micromole");
        UNITS.put("uOhm", "microOhm");
        UNITS.put("us", "microsecond");
        UNITS.put("uU", "microUnit");
        UNITS.put("uU/g", "micro enzyme unit per gram");
        UNITS.put("uU/L", "micro enzyme unit per liter");
        UNITS.put("uU/mL", "micro enzyme unit per milliliter");
        UNITS.put("uV", "microvolt");
        UNITS.put("V", "volt");
        UNITS.put("wk", "week");
        UNITS.put("10.uN.s/(cm5.m2)", "10 micronewton second per centimeter to the fifth power per square meter");
        UNITS.put("10*4/uL", "10 thousand per microliter");
        UNITS.put("24.h", "24 hour");
        UNITS.put("{ARU}", "aspirin response unit");
        UNITS.put("atm", "standard atmosphere");
        UNITS.put("ag/{cell}", "attogram per cell");
        UNITS.put("Bq", "Becquerel");
        UNITS.put("{binding_index}", "binding index");
        UNITS.put("[bdsk'U]", "Bodansky unit");
        UNITS.put("{CAG_repeats}", "CAG trinucleotide repeats");
        UNITS.put("cal", "calorie");
        UNITS.put("cm[H2O]/s/m", "centimeter of water per second per meter");
        UNITS.put("{delta_OD}", "change in (delta) optical density");
        UNITS.put("{copies}", "copies");
        UNITS.put("{count}", "count");
        UNITS.put("{CPM}", "counts per minute");
        UNITS.put("{CPM}/10*3{cell}", "counts per minute per thousand cells");
        UNITS.put("daL/min", "dekaliter per minute");
        UNITS.put("daL/min/m2", "dekaliter per minute per square meter");
        UNITS.put("{dilution}", "dilution");
        UNITS.put("dyn.s/cm", "dyne second per centimeter");
        UNITS.put("dyn.s/(cm.m2)", "dyne second per centimeter per square meter");
        UNITS.put("{EIA_index}", "EIA index");
        UNITS.put("{EIA_titer}", "EIA titer");
        UNITS.put("{EV}", "EIA value");
        UNITS.put("U/10", "enzyme unit per 10");
        UNITS.put("U/10*10", "enzyme unit per 10 billion");
        UNITS.put("U/(10.g){feces}", "enzyme unit per 10 gram of feces");
        UNITS.put("U/g{creat}", "enzyme unit per gram of creatinine");
        UNITS.put("U/g{protein}", "enzyme unit per gram of protein");
        UNITS.put("U{25Cel}/L", "enzyme unit per liter at 25 deg Celsius");
        UNITS.put("U{37Cel}/L", "enzyme unit per liter at 37 deg Celsius");
        UNITS.put("U/10*12{RBCs}", "enzyme unit per trillion red blood cells");
        UNITS.put("F", "Farad");
        UNITS.put("fmol/mg{cytosol_protein}", "femtomole per milligram of cytosol protein");
        UNITS.put("fmol/mg{protein}", "femtomole per milligram of protein");
        UNITS.put("{FIU}", "fluorescent intensity unit");
        UNITS.put("{fraction}", "fraction");
        UNITS.put("{GAA_repeats}", "GAA trinucleotide repeats");
        UNITS.put("{genomes}/mL", "genomes per milliliter");
        UNITS.put("{Globules}/[HPF]", "globules (drops) per high power field");
        UNITS.put("g.m/{beat}", "gram meter per heart beat");
        UNITS.put("g{creat}", "gram of creatinine");
        UNITS.put("g{Hb}", "gram of hemoglobin");
        UNITS.put("g{total_nit}", "gram of total nitrogen");
        UNITS.put("g{total_prot}", "gram of total protein");
        UNITS.put("g{wet_tissue}", "gram of wet tissue");
        UNITS.put("g/kg/(8.h)", "gram per kilogram per 8 hour");
        UNITS.put("g/(8.h){shift}", "gram per 8 hour shift");
        UNITS.put("g/cm3", "gram per cubic centimeter");
        UNITS.put("g/g{globulin}", "gram per gram of globulin");
        UNITS.put("g/kg/(8.h){shift}", "gram per kilogram per 8 hour shift");
        UNITS.put("g/kg/h", "gram per kilogram per hour");
        UNITS.put("g/kg/min", "gram per kilogram per minute");
        UNITS.put("g/mol{creat}", "gram per mole of creatinine");
        UNITS.put("g/{specimen}", "gram per specimen");
        UNITS.put("g/{total_output}", "gram per total output");
        UNITS.put("g/{total_weight}", "gram per total weight");
        UNITS.put("Gy", "Gray");
        UNITS.put("{beats}/min", "heart beats per minute");
        UNITS.put("H", "Henry");
        UNITS.put("[HPF]", "high power field");
        UNITS.put("[GPL'U]/mL", "IgG anticardiolipin unit per milliliter**");
        UNITS.put("{GPS'U}", "IgG antiphosphatidylserine unit");
        UNITS.put("[MPL'U]/mL", "IgM anticardiolipin unit per milliliter**");
        UNITS.put("{ISR}", "immune status ratio");
        UNITS.put("{IFA_index}", "immunofluorescence assay index");
        UNITS.put("{IFA_titer}", "Immunofluorescence assay titer");
        UNITS.put("[in_i'H2O]", "inch (international) of water");
        UNITS.put("{index_val}", "index value");
        UNITS.put("{HA_titer}", "influenza hemagglutination titer");
        UNITS.put("[IU]", "international unit");
        UNITS.put("[IU]/L{37Cel}", "international unit per liter at 37 degrees Celsius");
        UNITS.put("[IU]/mg{creat}", "international unit per milligram of creatinine");
        UNITS.put("kat", "katal");
        UNITS.put("kU", "kilo enzyme unit");
        UNITS.put("kU/L{class}", "kilo enzyme unit per liter class");
        UNITS.put("kcal/d", "kilocalorie per day");
        UNITS.put("kcal/kg/(24.h)", "kilocalorie per kilogram per 24 hour");
        UNITS.put("kcal/[oz_av]", "kilocalorie per ounce (US & British)");
        UNITS.put("[ka'U]", "King Armstrong unit");
        UNITS.put("L/(24.h)", "liter per 24 hour");
        UNITS.put("L/s/s2", "liter per second per square second");
        UNITS.put("{Log_copies}/mL", "log (base 10) copies per milliliter");
        UNITS.put("{Log_IU}", "log (base 10) international unit");
        UNITS.put("{Log_IU}/mL", "log (base 10) international unit per milliliter");
        UNITS.put("{Log}", "log base 10");
        UNITS.put("[LPF]", "low power field");
        UNITS.put("lm", "lumen");
        UNITS.put("lm.m2", "lumen square meter");
        UNITS.put("{Lyme_index_value}", "Lyme index value");
        UNITS.put("[mclg'U]", "Mac Lagan unit");
        UNITS.put("Ms", "megasecond");
        UNITS.put("ug/g{feces}", "microgram per gram of feces");
        UNITS.put("ug{FEU}/mL", "microgram fibrinogen equivalent unit per milliliter");
        UNITS.put("ug/(100.g)", "microgram per 100 gram");
        UNITS.put("ug/m3", "microgram per cubic meter");
        UNITS.put("ug/dL{RBCs}", "microgram per deciliter of red blood cells");
        UNITS.put("ug/g{dry_tissue}", "microgram per gram of dry tissue");
        UNITS.put("ug/g{dry_wt}", "microgram per gram of dry weight");
        UNITS.put("ug/g{hair}", "microgram per gram of hair");
        UNITS.put("ug/g{Hb}", "microgram per gram of hemoglobin");
        UNITS.put("ug/g{tissue}", "microgram per gram of tissue");
        UNITS.put("ug/L{RBCs}", "microgram per liter of red blood cells");
        UNITS.put("ug/mL{class}", "microgram per milliliter class");
        UNITS.put("ug/mL{eqv}", "microgram per milliliter equivalent");
        UNITS.put("ug/mmol{creat}", "microgram per millimole of creatinine");
        UNITS.put("ug/{specimen}", "microgram per specimen");
        UNITS.put("ug/[sft_i]", "microgram per square foot (international)");
        UNITS.put("umol{BCE}/mol", "micromole bone collagen equivalent per mole");
        UNITS.put("umol/(2.h)", "micromole per 2 hour");
        UNITS.put("umol/(8.h)", "micromole per 8 hour");
        UNITS.put("umol/dL{GF}", "micromole per deciliter of glomerular filtrate");
        UNITS.put("umol/kg{feces}", "micromole per kilogram of feces");
        UNITS.put("umol/L{RBCs}", "micromole per liter of red blood cells");
        UNITS.put("umol/umol{creat}", "micromole per micromole of creatinine");
        UNITS.put("umol/mg{creat}", "micromole per milligram of creatinine");
        UNITS.put("umol/mmol{creat}", "micromole per millimole of creatinine");
        UNITS.put("umol/min/g{mucosa}", "micromole per minute per gram of mucosa");
        UNITS.put("mU/mmol{creat}", "milli enzyme unit per millimole of creatinine");
        UNITS.put("mU/g{Hb}", "milli enzyme unit per gram of hemoglobin");
        UNITS.put("mU/g{protein}", "milli enzyme unit per gram of protein");
        UNITS.put("mU/mg{creat}", "milli enzyme unit per milligram of creatinine");
        UNITS.put("mbar/L/s", "millibar per liter per second");
        UNITS.put("meq/g{creat}", "milliequivalent per gram of creatinine");
        UNITS.put("meq/{specimen}", "milliequivalent per specimen");
        UNITS.put("meq/{total_volume}", "milliequivalent per total volume");
        UNITS.put("mg{FEU}/L", "milligram fibrinogen equivalent unit per liter");
        UNITS.put("mg/(6.h)", "milligram per 6 hour");
        UNITS.put("mg/{collection}", "milligram per collection");
        UNITS.put("mg/d/{1.73_m2}", "milligram per day per 1.73 square meter");
        UNITS.put("mg/dL{RBCs}", "milligram per deciliter of red blood cells");
        UNITS.put("mg/g{dry_tissue}", "milligram per gram of dry tissue");
        UNITS.put("mg/g{feces}", "milligram per gram of feces");
        UNITS.put("mg/g{tissue}", "milligram per gram of tissue");
        UNITS.put("mg/g{wet_tissue}", "milligram per gram of wet tissue");
        UNITS.put("mg/kg/(8.h)", "milligram per kilogram per 8 hour");
        UNITS.put("mg/kg/h", "milligram per kilogram per hour");
        UNITS.put("mg/L{RBCs}", "milligram per liter of red blood cells");
        UNITS.put("mg/mg{creat}", "milligram per milligram of creatinine");
        UNITS.put("mg/{specimen}", "milligram per specimen");
        UNITS.put("mg/{total_output}", "milligram per total output");
        UNITS.put("mg/{total_volume}", "milligram per total volume");
        UNITS.put("mL{fetal_RBCs}", "milliliter of fetal red blood cells");
        UNITS.put("mL/(5.h)", "milliliter per 5 hour");
        UNITS.put("mL/(6.h)", "milliliter per 6 hour");
        UNITS.put("mL/{beat}", "milliliter per heart beat");
        UNITS.put("mL/{beat}/m2", "milliliter per heart beat per square meter");
        UNITS.put("mmol/(5.h)", "millimole per 5 hour");
        UNITS.put("mmol/{ejaculate}", "millimole per ejaculate");
        UNITS.put("mmol/kg/(8.h)", "millimole per kilogram per 8 hour");
        UNITS.put("mmol/L{RBCs}", "millimole per liter of red blood cells");
        UNITS.put("mmol/mmol{urea}", "millimole per millimole of urea");
        UNITS.put("mmol/mmol{creat}", "millimole per millmole of creatinine");
        UNITS.put("mmol/{specimen}", "millimole per specimen");
        UNITS.put("mmol/{total_vol}", "millimole per total volume");
        UNITS.put("10*6.[CFU]/L", "million colony forming unit per liter");
        UNITS.put("10*6.[IU]", "million international unit");
        UNITS.put("10*6/(24.h)", "million per 24 hour");
        UNITS.put("mPa.s", "millipascal second");
        UNITS.put("{minidrop}/min", "minidrop per minute");
        UNITS.put("{minidrop}/s", "minidrop per second");
        UNITS.put("{molecule}/{platelet}", "molecule per platelet");
        UNITS.put("{mm/dd/yyyy}", "month-day-year");
        UNITS.put("{mutation}", "mutation");
        UNITS.put("nU/mL", "nanoenzyme unit per milliliter");
        UNITS.put("nU/{RBC}", "nanoenzyme unit per red blood cell");
        UNITS.put("ng{FEU}/mL", "nanogram fibrinogen equivalent unit per milliliter");
        UNITS.put("ng/U", "nanogram per enzyme unit");
        UNITS.put("ng/mg{creat}", "nanogram per milligram of creatinine");
        UNITS.put("ng/mg{protein}", "nanogram per milligram of protein");
        UNITS.put("ng/mL{RBCs}", "nanogram per milliliter of red blood cells");
        UNITS.put("ng/10*6{RBCs}", "nanogram per million red blood cells");
        UNITS.put("nmol{BCE}", "nanomole bone collagen equivalent");
        UNITS.put("nmol{BCE}/L", "nanomole bone collagen equivalent per liter");
        UNITS.put("nmol{BCE}/mmol{creat}", "nanomole bone collagen equivalent per millimole of creatinine");
        UNITS.put("nmol{1/2cys}/mg{protein}", "nanomole of 1/2 cystine per milligram of protein");
        UNITS.put("nmol{ATP}", "nanomole of ATP");
        UNITS.put("nmol/dL{GF}", "nanomole per deciliter of glomerular filtrate");
        UNITS.put("nmol/mg{creat}", "nanomole per milligram of creatinine");
        UNITS.put("nmol/mg{protein}", "nanomole per milligram of protein");
        UNITS.put("nmol/mg{protein}/h", "nanomole per milligram of protein per hour");
        UNITS.put("nmol/min", "nanomole per minute");
        UNITS.put("nmol/min/mg{Hb}", "nanomole per minute per milligram of hemoglobin");
        UNITS.put("nmol/min/10*6{cells}", "nanomole per minute per million cells");
        UNITS.put("{#}/[HPF]", "number per high power field");
        UNITS.put("{#}/L", "number per liter");
        UNITS.put("{#}/[LPF]", "number per low power field");
        UNITS.put("{#}/uL", "number per microliter");
        UNITS.put("{#}/mL", "number per milliliter");
        UNITS.put("{#}/min", "number per minute");
        UNITS.put("Ohm.m", "Ohm meter");
        UNITS.put("osm", "osmole");
        UNITS.put("{Pan_Bio'U}", "panbio unit");
        UNITS.put("/10*4{RBCs}", "per 10 thousand red blood cells");
        UNITS.put("/m3", "per cubic meter");
        UNITS.put("/{entity}", "per entity");
        UNITS.put("/g{Hb}", "per gram of hemoglobin");
        UNITS.put("/g{tot_nit}", "per gram of total nitrogen");
        UNITS.put("/g{tot_prot}", "per gram of total protein");
        UNITS.put("/g{wet_tis}", "per gram of wet tissue");
        UNITS.put("/[IU]", "per international unit");
        UNITS.put("/kg{body_wt}", "per kilogram of body weight");
        UNITS.put("/mm", "per millimeter");
        UNITS.put("/mmol{creat}", "per millimole of creatinine");
        UNITS.put("/{OIF}", "per oil immersion field");
        UNITS.put("/10*3", "per thousand");
        UNITS.put("/10*3.{RBCs}", "per thousand red blood cells");
        UNITS.put("/10*12{RBCs}", "per trillion red blood cells");
        UNITS.put("%{loss_AChR}", "percent loss of acetylcholine receptor");
        UNITS.put("%{penetration}", "percent penetration");
        UNITS.put("%{abnormal}", "percent abnormal");
        UNITS.put("%{activity}", "percent activity");
        UNITS.put("%{aggregation}", "percent aggregation");
        UNITS.put("%{at_60_min}", "percent at 60 minute");
        UNITS.put("%{basal_activity}", "percent basal activity");
        UNITS.put("%{binding}", "percent binding");
        UNITS.put("%{blockade}", "percent blockade");
        UNITS.put("%{blocked}", "percent blocked");
        UNITS.put("%{bound}", "percent bound");
        UNITS.put("%{breakdown}", "percent breakdown");
        UNITS.put("%{deficient}", "percent deficient");
        UNITS.put("%{dose}", "percent dose");
        UNITS.put("%{excretion}", "percent excretion");
        UNITS.put("%{Hb}", "percent hemoglobin");
        UNITS.put("%{hemolysis}", "percent hemolysis");
        UNITS.put("%{index}", "percent index");
        UNITS.put("%{inhibition}", "percent inhibition");
        UNITS.put("%{loss}", "percent loss");
        UNITS.put("%{lysis}", "percent lysis");
        UNITS.put("%{normal}", "percent normal");
        UNITS.put("%{normal_pooled_plasma}", "percent normal pooled plasma");
        UNITS.put("%{bacteria}", "percent of bacteria");
        UNITS.put("%{baseline}", "percent of baseline");
        UNITS.put("%{cells}", "percent of cells");
        UNITS.put("%{RBCs}", "percent of red blood cells");
        UNITS.put("%{WBCs}", "percent of white blood cells");
        UNITS.put("%{positive}", "percent positive");
        UNITS.put("%{reactive}", "percent reactive");
        UNITS.put("%{recovery}", "percent recovery");
        UNITS.put("%{reference}", "percent reference");
        UNITS.put("%{residual}", "percent residual");
        UNITS.put("%{saturation}", "percent saturation");
        UNITS.put("%{total}", "percent total");
        UNITS.put("%{uptake}", "percent uptake");
        UNITS.put("%{viable}", "percent viable");
        UNITS.put("{percentile}", "percentile");
        UNITS.put("{phenotype}", "phenotype");
        UNITS.put("pA", "picoampere");
        UNITS.put("pg/{cell}", "picogram per cell");
        UNITS.put("pg/mg{creat}", "picogram per milligram of creatinine");
        UNITS.put("pg/{RBC}", "picogram per red blood cell");
        UNITS.put("pmol/(24.h)", "picomole per 24 hour");
        UNITS.put("pmol/{RBC}", "picomole per red blood cell");
        UNITS.put("[pt_us]", "pint");
        UNITS.put("%{relative}", "relative percent");
        UNITS.put("{relative_saturation}", "relative saturation");
        UNITS.put("{Rubella_virus}", "rubella virus");
        UNITS.put("{saturation}", "saturation");
        UNITS.put("s/{control}", "second per control");
        UNITS.put("S", "Siemens");
        UNITS.put("Sv", "Sievert");
        UNITS.put("{s_co_ratio}", "signal to cutoff ratio");
        UNITS.put("{STDV}", "standard deviation");
        UNITS.put("T", "Tesla");
        UNITS.put("10*3{copies}/mL", "thousand copies per milliliter");
        UNITS.put("10*3{RBCs}", "thousand red blood cells");
        UNITS.put("{TSI_index}", "thyroid-stimulating immunoglobulin index");
        UNITS.put("Wb", "Weber");
        UNITS.put("{WBCs}", "white blood cells");
        UNITS.put("'", "minute");
        UNITS.put("''", "second");
        UNITS.put("%[slope]", "percent of slope");
        UNITS.put("%{Bound}", "PercentBound");
        UNITS.put("/100{Spermatozoa}", "Per100Spermatozoa");
        UNITS.put("/g{HGB}", "PerGramHemoglobin");
        UNITS.put("[acr_br]", "acre");
        UNITS.put("[acr_us]", "acre");
        UNITS.put("[Amb'a'1'U]", "Amb a 1 units");
        UNITS.put("[bbl_us]", "barrel");
        UNITS.put("[bf_i]", "board foot");
        UNITS.put("[Btu]", "British thermal unit");
        UNITS.put("[Btu_39]", "British thermal unit at 39 °F");
        UNITS.put("[Btu_59]", "British thermal unit at 59 °F");
        UNITS.put("[Btu_60]", "British thermal unit at 60 °F");
        UNITS.put("[Btu_IT]", "international table British thermal unit");
        UNITS.put("[Btu_m]", "mean British thermal unit");
        UNITS.put("[Btu_th]", "thermochemical British thermal unit");
        UNITS.put("[bu_br]", "bushel");
        UNITS.put("[bu_us]", "bushel");
        UNITS.put("[c]", "velocity of light");
        UNITS.put("[Cal]", "nutrition label Calories");
        UNITS.put("[car_Au]", "carat of gold alloys");
        UNITS.put("[car_m]", "metric carat");
        UNITS.put("[CCID_50]", "CELL CULTURE INFECTIOUS DOSE 50%");
        UNITS.put("[cft_i]", "cubic foot");
        UNITS.put("[ch_br]", "Gunter's chain");
        UNITS.put("[ch_us]", "Gunter's chain Surveyor's chain");
        UNITS.put("[cicero]", "cicero Didot's pica");
        UNITS.put("[cml_i]", "circular mil");
        UNITS.put("[cr_i]", "cord");
        UNITS.put("[crd_us]", "cord");
        UNITS.put("[cyd_i]", "cubic yard");
        UNITS.put("[D'ag'U]", "D-ANTIGEN UNITS");
        UNITS.put("[didot]", "didot Didot's point");
        UNITS.put("[diop]", "diopter");
        UNITS.put("[dpt_us]", "dry pint");
        UNITS.put("[dqt_us]", "dry quart");
        UNITS.put("[dr_ap]", "dram drachm");
        UNITS.put("[dye'U]", "Dye unit");
        UNITS.put("[e]", "elementary charge");
        UNITS.put("[eps_0]", "permittivity of vacuum");
        UNITS.put("[fdr_br]", "fluid dram");
        UNITS.put("[FFU]", "FOCUS-FORMING UNITS");
        UNITS.put("[ft_br]", "foot");
        UNITS.put("[ft_us]", "foot");
        UNITS.put("[fth_br]", "fathom");
        UNITS.put("[fth_us]", "fathom");
        UNITS.put("[fur_us]", "furlong");
        UNITS.put("[G]", "Newtonian constant of gravitation");
        UNITS.put("[gal_wi]", "historical winchester gallon");
        UNITS.put("[gil_br]", "gill");
        UNITS.put("[gil_us]", "gill");
        UNITS.put("[h]", "Planck constant");
        UNITS.put("[hd_i]", "hand");
        UNITS.put("[hnsf'U]", "Hounsfield unit");
        UNITS.put("[HP]", "horsepower");
        UNITS.put("[hp_C]", "HOMEOPATHIC POTENCY OF CENTESIMAL SERIES");
        UNITS.put("[hp_M]", "HOMEOPATHIC POTENCY OF MILLESIMAL SERIES");
        UNITS.put("[hp_Q]", "HOMEOPATHIC POTENCY OF QUINTAMILLESIMAL SERIES");
        UNITS.put("[hp_X]", "HOMEOPATHIC POTENCY OF DECIMAL SERIES");
        UNITS.put("[in_br]", "inch");
        UNITS.put("[in_i'Hg]", "inch of mercury column");
        UNITS.put("[in_us]", "inch");
        UNITS.put("[iU]/dL", "InternationalUnitsPerDeciLiter");
        UNITS.put("[iU]/g", "InternationalUnitsPerGram");
        UNITS.put("[iU]/kg", "InternationalUnitsPerKilogram");
        UNITS.put("[iU]/L", "InternationalUnitsPerLiter");
        UNITS.put("[iU]/mL", "InternationalUnitsPerMilliLiter");
        UNITS.put("[k]", "Boltzmann constant");
        UNITS.put("[kn_br]", "knot");
        UNITS.put("[kn_i]", "knot");
        UNITS.put("[knk'U]", "Kunkel unit");
        UNITS.put("[lb_ap]", "pound");
        UNITS.put("[lb_tr]", "pound");
        UNITS.put("[lbf_av]", "pound force");
        UNITS.put("[lcwt_av]", "long hunderdweight British hundredweight");
        UNITS.put("[Lf]", "LIMIT OF FLOCCULATION");
        UNITS.put("[ligne]", "ligne French line");
        UNITS.put("[lk_br]", "link for Gunter's chain");
        UNITS.put("[lk_us]", "link for Gunter's chain");
        UNITS.put("[lne]", "line");
        UNITS.put("[lton_av]", "long ton British ton");
        UNITS.put("[ly]", "light-year");
        UNITS.put("[m_e]", "electron mass");
        UNITS.put("[m_p]", "proton mass");
        UNITS.put("[mesh_i]", "mesh");
        UNITS.put("[MET]", "metabolic equivalent");
        UNITS.put("[mi_br]", "mile");
        UNITS.put("[mil_i]", "mil");
        UNITS.put("[mil_us]", "mil");
        UNITS.put("[min_br]", "minim");
        UNITS.put("[mu_0]", "permeability of vacuum");
        UNITS.put("[nmi_br]", "nautical mile");
        UNITS.put("[oz_ap]", "ounce (US and British)");
        UNITS.put("[pc_br]", "pace");
        UNITS.put("[pca]", "pica");
        UNITS.put("[pca_pr]", "Printer's pica");
        UNITS.put("[p'diop]", "prism diopter");
        UNITS.put("[PFU]", "PLAQUE-FORMING UNITS");
        UNITS.put("[pi]", "the number pi");
        UNITS.put("[pied]", "pied French foot");
        UNITS.put("[pk_br]", "peck");
        UNITS.put("[pk_us]", "peck");
        UNITS.put("[pnt]", "point");
        UNITS.put("[pnt_pr]", "Printer's point");
        UNITS.put("[PNU]", "PROTEIN NITROGEN UNITS");
        UNITS.put("[pouce]", "pouce French inch");
        UNITS.put("[PRU]", "peripheral vascular resistance unit");
        UNITS.put("[pwt_tr]", "pennyweight");
        UNITS.put("[rch_us]", "Ramden's chain Engineer's chain");
        UNITS.put("[rd_br]", "rod");
        UNITS.put("[rd_us]", "rod");
        UNITS.put("[rlk_us]", "link for Ramden's chain");
        UNITS.put("[S]", "Svedberg unit");
        UNITS.put("[sc_ap]", "scruple");
        UNITS.put("[sct]", "section");
        UNITS.put("[scwt_av]", "short hundredweight U.S. hundredweight");
        UNITS.put("[smgy'U]", "Somogyi unit");
        UNITS.put("[smi_us]", "square mile");
        UNITS.put("[smoot]", "Smoot");
        UNITS.put("[srd_us]", "square rod");
        UNITS.put("[stone_av]", "stone British stone");
        UNITS.put("[TCID_50]", "TISSUE CULTURE INFECTIOUS DOSE 50%");
        UNITS.put("[twp]", "township");
        UNITS.put("[USP'U]", "UNITED STATES PHARMACOPEIA UNIT");
        UNITS.put("[yd_br]", "yard");
        UNITS.put("[yd_us]", "yard");
        UNITS.put("{Cells}/uL", "CellsPerMicroLiter");
        UNITS.put("{Copies}/mL", "CopiesPerMilliLiter");
        UNITS.put("{Ct}", "crossing threshold");
        UNITS.put("{Ehrlich_U}/dL", "EhrlichUnitsPerDeciLiter");
        UNITS.put("{EhrlichU}/dL", "EhrlichUnitsPerDeciLiter [Arbitrary Concentration Units]");
        UNITS.put("{Elisa_U}/mL", "ElisaUnitsPerMilliLiter");
        UNITS.put("{ElisaU}/mL", "ElisaUnitsPerMilliLiter [Arbitrary Concentration Units]");
        UNITS.put("{kp_C}", "HOMEOPATHIC POTENCY OF CENTESIMAL KORSAKOVIAN SERIES");
        UNITS.put("{rbc}", "red blood cell count");
        UNITS.put("{Spermatozoa}/mL", "SpermatozoaPerMilliLiter");
        UNITS.put("{tbl}", "tablets");
        UNITS.put("{tot}", "particles total count");
        UNITS.put("10*", "the number ten for arbitrary powers");
        UNITS.put("10^", "the number ten for arbitrary powers");
        UNITS.put("a_g", "mean Gregorian year");
        UNITS.put("a_j", "mean Julian year");
        UNITS.put("a_t", "tropical year");
        UNITS.put("Ao", "Ångström");
        UNITS.put("ar", "are");
        UNITS.put("AU", "astronomic unit");
        UNITS.put("b", "barn");
        UNITS.put("B", "bel");
        UNITS.put("B[kW]", "bel kilowatt");
        UNITS.put("B[mV]", "bel millivolt");
        UNITS.put("B[SPL]", "bel sound pressure");
        UNITS.put("B[uV]", "bel microvolt");
        UNITS.put("B[V]", "bel volt");
        UNITS.put("B[W]", "bel watt");
        UNITS.put("Bd", "baud");
        UNITS.put("Bi", "Biot");
        UNITS.put("bit", "bit");
        UNITS.put("bit_s", "bit");
        UNITS.put("By", "byte");
        UNITS.put("C", "Coulomb");
        UNITS.put("cal_[15]", "calorie at 15 °C");
        UNITS.put("cal_[20]", "calorie at 20 °C");
        UNITS.put("cal_IT", "international table calorie");
        UNITS.put("cal_m", "mean calorie");
        UNITS.put("cal_th", "thermochemical calorie");
        UNITS.put("cd", "candela");
        UNITS.put("Ci", "CURIE");
        UNITS.put("circ", "circle");
        UNITS.put("dyn", "dyne");
        UNITS.put("G", "Gauss");
        UNITS.put("g%", "gram percent");
        UNITS.put("g.m/{H.B.}", "gram meter per heartbeat");
        UNITS.put("Gal", "Gal");
        UNITS.put("Gb", "Gilbert");
        UNITS.put("gf", "gram-force");
        UNITS.put("gon", "gon grade");
        UNITS.put("k[iU]/mL", "KiloInternationalUnitsPerMilliLiter");
        UNITS.put("kg{wet'tis}", "kilogram of wet tissue");
        UNITS.put("Ky", "Kayser");
        UNITS.put("Lmb", "Lambert");
        UNITS.put("lx", "lux");
        UNITS.put("m[H2O]", "meter of water column");
        UNITS.put("m[Hg]", "meter of mercury column");
        UNITS.put("mg/{TotalVolume}", "MilliGramPerTotalVolume");
        UNITS.put("mg/mg{Cre}", "MilligramsPerMilligramCreatinine");
        UNITS.put("mg{creat}", "milligram of creatinine");
        UNITS.put("mho", "mho");
        UNITS.put("mmol/{TotalVolume}", "MilliMolesPerTotalVolume [Substance Units]");
        UNITS.put("mmol/mol{Cre}", "MilliMolesPerMoleCreatinine");
        UNITS.put("mo_g", "mean Gregorian month");
        UNITS.put("mo_j", "mean Julian month");
        UNITS.put("mo_s", "synodal month");
        UNITS.put("Mx", "Maxwell");
        UNITS.put("Np", "neper");
        UNITS.put("Oe", "Oersted");
        UNITS.put("P", "Poise");
        UNITS.put("pc", "parsec");
        UNITS.put("ph", "phot");
        UNITS.put("R", "Roentgen");
        UNITS.put("rad", "radian");
        UNITS.put("RAD", "radiation absorbed dose");
        UNITS.put("REM", "radiation equivalent man");
        UNITS.put("sb", "stilb");
        UNITS.put("sph", "spere");
        UNITS.put("sr", "steradian");
        UNITS.put("st", "stere");
        UNITS.put("u", "unified atomic mass unit");
        UNITS.put("uCi", "MICROCURIE");
        UNITS.put("W", "Watt");
        UNITS.put("10*8", "100 million");
        UNITS.put("{AHF'U}", "American Hospital Formulary unit");
        UNITS.put("A", "ampere");
        UNITS.put("A/m", "ampere per meter");
        UNITS.put("{breaths}/min", "breaths per minute");
        UNITS.put("cm/s", "centimeter per second");
        UNITS.put("cP", "centipoise");
        UNITS.put("cSt", "centistoke");
        UNITS.put("{clock_time}", "clock time e.g 12:30PM");
        UNITS.put("{Ct_value}", "Cycle threshold value");
        UNITS.put("d/(7.d)", "day per 7 day");
        UNITS.put("d/wk", "days per week");
        UNITS.put("K/W", "degree Kelvin per Watt");
        UNITS.put("[drp]", "drop (1/12 milliliter)");
        UNITS.put("{Ehrlich'U}/dL", "Ehrlich unit per deciliter");
        UNITS.put("{EIA'U}/U", "EIA unit per enzyme unit");
        UNITS.put("eV", "electron Volt");
        UNITS.put("U", "enzyme unit");
        UNITS.put("eq/L", "equivalent per liter");
        UNITS.put("eq/umol", "equivalent per micromole");
        UNITS.put("eq/mL", "equivalent per milliliter");
        UNITS.put("eq/mmol", "equivalent per millimole");
        UNITS.put("[ft_us]/[ft_us]", "feet per feet");
        UNITS.put("fmol/mg", "femtomole per milligram");
        UNITS.put("fmol/mg{cyt_prot}", "femtomole per milligram of cytosol protein");
        UNITS.put("fmol/mg{prot}", "femtomole per milligram of protein");
        UNITS.put("fmol/mL", "femtomole per milliliter");
        UNITS.put("[ft_i]", "foot (international)");
        UNITS.put("[gal_us]", "gallon");
        UNITS.put("g.m", "gram meter");
        UNITS.put("g/g{creat}", "gram per gram of creatinine");
        UNITS.put("g/cm2", "gram per square centimeter");
        UNITS.put("g/m2", "gram per square meter");
        UNITS.put("h/d", "hour per day");
        UNITS.put("h/wk", "hour per week");
        UNITS.put("{index}", "index");
        UNITS.put("kat/kg", "katal per kilogram");
        UNITS.put("kat/L", "katal per liter");
        UNITS.put("kU/g", "kilo enzyme unit per gram");
        UNITS.put("kU/L", "kilo enzyme unit per liter");
        UNITS.put("kcal/(24.h)", "kilocalorie per 24 hour");
        UNITS.put("kg/m3", "kilogram per cubic meter");
        UNITS.put("kg/min", "kilogram per minute");
        UNITS.put("kg/s", "kilogram per second");
        UNITS.put("kg/m2", "kilogram per square meter");
        UNITS.put("kPa", "kilopascal");
        UNITS.put("L/min/m2", "liter per minute per sqaure meter");
        UNITS.put("L/s", "liter per second");
        UNITS.put("[MET].min/wk", "metabolic equivalent minute per week");
        UNITS.put("umol/10*6{RBC}", "micromole per million red blood cell");
        UNITS.put("umol/min/g{prot}", "micromole per minute per gram of protein");
        UNITS.put("[mi_i]", "mile (international)");
        UNITS.put("mU/g", "milli enzyme unit per gram");
        UNITS.put("mU/mL", "milli enzyme unit per milliliter");
        UNITS.put("mU/mL/min", "milli enzyme unit per milliliter per minute");
        UNITS.put("mU/mmol{RBCs}", "milli enzyme unit per millimole of red blood cells");
        UNITS.put("m[IU]/mL", "milli international unit per milliliter");
        UNITS.put("mU/g{prot}", "milli enzyme unit per gram of protein");
        UNITS.put("mU/L", "milli enzyme unit per liter");
        UNITS.put("mU/mg", "milli enzyme unit per milligram");
        UNITS.put("mA", "milliampere");
        UNITS.put("mL/(8.h)/kg", "milliliter per 8 hour per kilogram");
        UNITS.put("mL/cm[H2O]", "milliliter per centimeter of water");
        UNITS.put("mmol/h/mg{prot}", "millimole per hour per milligram of protein");
        UNITS.put("mV", "millivolt");
        UNITS.put("mV/s", "millivolt per second");
        UNITS.put("min/d", "minute per day");
        UNITS.put("min/wk", "minute per week");
        UNITS.put("{#}/{platelet}", "molecule per platelet");
        UNITS.put("ng/mg{prot}", "nanogram per milligram of protein");
        UNITS.put("nmol/h/mg{prot}", "nanomole per hour per milligram of protein");
        UNITS.put("nmol/m/mg{prot}", "nanomole per meter per milligram of protein");
        UNITS.put("nmol/umol{creat}", "nanomole per micromole of creatinine");
        UNITS.put("nmol/mg{prot}", "nanomole per milligram of protein");
        UNITS.put("nmol/mg{prot}/h", "nanomole per milligram of protein per hour");
        UNITS.put("nmol/min/mg{prot}", "nanomole per minute per milligram of protein");
        UNITS.put("nmol/mol{creat}", "nanomole per mole creatinine");
        UNITS.put("{#}", "number");
        UNITS.put("{#}/a", "number per annum (year)");
        UNITS.put("{#}/d", "number per day");
        UNITS.put("{#}/g", "number per gram");
        UNITS.put("{#}/wk", "number per week");
        UNITS.put("10*5", "one hundred thousand");
        UNITS.put("/10*10", "per 10 billion");
        UNITS.put("/100{WBCs}", "per 100 white blood cells");
        UNITS.put("/10*9", "per billion");
        UNITS.put("/g{creat}", "per gram of creatinine");
        UNITS.put("/10*6", "per million");
        UNITS.put("/10*3{RBCs}", "per thousand red blood cells");
        UNITS.put("/10*12", "per trillion");
        UNITS.put("/(12.h)", "per twelve hour");
        UNITS.put("/a", "per year");
        UNITS.put("%{vol}", "percent by volume");
        UNITS.put("%{pooled_plasma}", "percent normal pooled plasma");
        UNITS.put("pg/mL{sLT}", "picogram per milliliter sulfidoleukotrienes");
        UNITS.put("pmol/h/mg{prot}", "picomole per hour per milligram of protein");
        UNITS.put("pmol/H/mg{protein}", "picomole per hour per milligram protein");
        UNITS.put("pmol/mg{prot}", "picomole per milligram of protein");
        UNITS.put("pmol/min/mg{prot}", "picomole per minute per milligram of protein");
        UNITS.put("[qt_us]", "quart");
        UNITS.put("{rel_saturation}", "relative saturation");
        UNITS.put("{risk}", "risk");
        UNITS.put("{score}", "score");
        UNITS.put("[syd_i]", "square yard (international)");
        UNITS.put("{Tscore}", "t score");
        UNITS.put("[tsp_us]", "teaspoon");
        UNITS.put("{TmStp}", "time stamp");
        UNITS.put("Torr", "Torr");
        UNITS.put("[oz_tr]", "Troy ounce");
        UNITS.put("[yd_i]", "yard (international)");
        UNITS.put("{yyyy}", "year");
        UNITS.put("{Zscore}", "z score");
    }

    public static Map<String, String> getMeasurementUnitsMap() {
        return UNITS;
    }

}

