{
    "ebXML":"<SOAP:Envelope xmlns:xsi=\"http://www.w3c.org/2001/XML-Schema-Instance\" xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd\" xmlns:hl7ebxml=\"urn:hl7-org:transport/ebxml/DSTUv1.0\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <SOAP:Header> <eb:MessageHeader SOAP:mustUnderstand=\"1\" eb:version=\"2.0\"> <eb:From> <eb:PartyId eb:type=\"urn:nhs:names:partyType:ocs+serviceInstance\">RHM-801710</eb:PartyId> </eb:From> <eb:To> <eb:PartyId eb:type=\"urn:nhs:names:partyType:ocs+serviceInstance\">RHM-803229</eb:PartyId> </eb:To> <eb:CPAId>S2030731A2137927</eb:CPAId> <eb:ConversationId>{{conversationId}}</eb:ConversationId> <eb:Service>urn:nhs:names:services:gp2gp</eb:Service> <eb:Action>COPC_IN000001UK01</eb:Action> <eb:MessageData> <eb:MessageId>A7B6C8EC-5AB4-4BF3-BB72-5D76E5D205A4</eb:MessageId> <eb:Timestamp>2013-10-25T17:33:18Z</eb:Timestamp> </eb:MessageData> <eb:DuplicateElimination/> </eb:MessageHeader> <eb:AckRequested SOAP:mustUnderstand=\"1\" eb:version=\"2.0\" eb:signed=\"false\" SOAP:actor=\"urn:oasis:names:tc:ebxml-msg:actor:nextMSH\"/> </SOAP:Header> <SOAP:Body> <eb:Manifest SOAP:mustUnderstand=\"1\" eb:version=\"2.0\"> <eb:Reference xlink:href=\"cid:27c75ace-3d93-11e3-a2cf-e1c5ffeb5098@spine.nhs.uk\"> <eb:Schema eb:location=\"http://www.nhsia.nhs.uk/schemas/HL7-Message.xsd\" eb:version=\"1.0\"/> <eb:Description xml:lang=\"en\">HL7 payload</eb:Description> <hl7ebxml:Payload style=\"HL7\" encoding=\"XML\" version=\"3.0\"/> </eb:Reference> <eb:Reference xlink:href=\"cid:27c75acf-3d93-11e3-a2cf-e1c5ffeb5098\"> <eb:Description xml:lang=\"en\">Attachment</eb:Description> </eb:Reference> </eb:Manifest> </SOAP:Body> </SOAP:Envelope>",
    "payload":"<COPC_IN000001UK01 xmlns=\"urn:hl7-org:v3\"> <id root=\"A7B6C8EC-5AB4-4BF3-BB72-5D76E5D205A4\"/> <creationTime value=\"20131025165929252\"/> <versionCode code=\"V3NPfIT3.0\"/> <interactionId root=\"2.16.840.1.113883.2.1.3.2.4.12\" extension=\"COPC_IN000001UK01\"/> <processingCode code=\"P\"/> <processingModeCode code=\"T\"/> <acceptAckCode code=\"NE\"/> <communicationFunctionRcv> <device> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"276827251543\"/> </device> </communicationFunctionRcv> <communicationFunctionSnd> <device> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"715373337545\"/> </device> </communicationFunctionSnd> <ControlActEvent> <author1> <AgentSystemSDS> <agentSystemSDS> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"715373337545\"/> </agentSystemSDS> </AgentSystemSDS> </author1> <subject> <PayloadInformation xmlns=\"urn:hl7-org:v3\" xmlns:npfitlc=\"NPFIT:HL7:Localisation\"> <code code=\"GP2GPLMATTACHMENTINFO\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment Information\"/> <id root=\"A7B6C8EC-5AB4-4BF3-BB72-5D76E5D205A4\"/> <npfitlc:messageType root=\"2.16.840.1.113883.2.1.3.2.4.18.17\" extension=\"RCMR_MT000001GB01\"/> <value> <Gp2gpfragment xmlns=\"urn:nhs:names:services:gp2gp\"> <Version>01</Version> <Recipients> <Recipient>C81007</Recipient> </Recipients> <From>B83002</From> <subject>Attachment: 8681AF4F-E577-4C8D-A2CE-43CABE3D5FB4_sample_mpeg4.mp4</subject> <message-id>A7B6C8EC-5AB4-4BF3-BB72-5D76E5D205A4</message-id> </Gp2gpfragment> </value> <pertinentInformation> <sequenceNumber value=\"1\"/> <pertinentPayloadBody> <code code=\"GP2GPLMATTACHMENT\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment\"/> <id root=\"AA99CAAA-2A91-4DBB-AE96-9E722787EBD4\"/> <value><reference value=\"8681AF4F-E577-4C8D-A2CE-43CABE3D5FB4_sample_mpeg4.mp4\"/></value> </pertinentPayloadBody> </pertinentInformation> </PayloadInformation> </subject> </ControlActEvent> </COPC_IN000001UK01>",
    "attachments":[{"content_type":"text/xml","is_base64":"true","description":"Filename=\"55242A2A-69FC-4D9F-8AE0-040E5978D379_EmisWeb.Hl7\" ContentType=text/xml Compressed=No LargeAttachment=No OriginalBase64=No Length=539736 DomainData=\"X-GP2GP-Skeleton: Yes\"","payload":"<RCMR_IN030000UK06 xmlns="urn:hl7-org:v3" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <id root="F6514170-867F-4009-B3F9-008A606E0439"/>
    <creationTime value="20210818141159"/>
    <versionCode code="V3NPfIT3.1.10"/>
    <interactionId extension="RCMR_IN030000UK06" root="2.16.840.1.113883.2.1.3.2.4.12"/>
    <processingCode code="P"/>
    <processingModeCode code="T"/>
    <acceptAckCode code="NE"/>
    <communicationFunctionRcv typeCode="RCV">
        <device classCode="DEV" determinerCode="INSTANCE">
            <id extension="200000000169" root="1.2.826.0.1285.0.2.0.107"/>
        </device>
    </communicationFunctionRcv>
    <communicationFunctionSnd typeCode="SND">
        <device classCode="DEV" determinerCode="INSTANCE">
            <id extension="858000001001" root="1.2.826.0.1285.0.2.0.107"/>
        </device>
    </communicationFunctionSnd>
    <ControlActEvent classCode="CACT" moodCode="EVN">
        <author1 typeCode="AUT">
            <AgentSystemSDS classCode="AGNT">
                <agentSystemSDS classCode="DEV" determinerCode="INSTANCE">
                    <id extension="858000001001" root="1.2.826.0.1285.0.2.0.107"/>
                </agentSystemSDS>
            </AgentSystemSDS>
        </author1>
        <subject contextConductionInd="false" typeCode="SUBJ">
            <EhrExtract classCode="EXTRACT" moodCode="EVN">
                <id root="A3931861-5201-4EEC-BB32-144B1A20E1F8"/>
                <statusCode code="COMPLETE"/>
                <availabilityTime value="20210818141159"/>
                <recordTarget typeCode="RCT">
                    <patient classCode="PAT">
                        <id extension="9465744069" root="2.16.840.1.113883.2.1.4.1"/>
                    </patient>
                </recordTarget>
                <author typeCode="AUT">
                    <time value="20210818141159"/>
                    <signatureCode code="S"/>
                    <signatureText>X</signatureText>
                    <AgentOrgSDS classCode="AGNT">
                        <agentOrganizationSDS classCode="ORG" determinerCode="INSTANCE">
                            <id extension="C88046" root="1.2.826.0.1285.0.1.10"/>
                        </agentOrganizationSDS>
                    </AgentOrgSDS>
                </author>
                <destination typeCode="DST">
                    <AgentOrgSDS classCode="AGNT">
                        <agentOrganizationSDS classCode="ORG" determinerCode="INSTANCE">
                            <id extension="P84009" root="1.2.826.0.1285.0.1.10"/>
                        </agentOrganizationSDS>
                    </AgentOrgSDS>
                </destination>
                <component typeCode="COMP">
                    <ehrFolder classCode="FOLDER" moodCode="EVN">
                        <id root="C797AE77-472B-44A5-B120-3B1BAAFF6955"/>
                        <statusCode code="COMPLETE"/>
                        <effectiveTime>
                            <low value="20000331"/>
                            <high value="20210818141733"/>
                        </effectiveTime>
                        <availabilityTime value="20210818141159"/>
                        <author typeCode="AUT">
                            <time value="20210818141159"/>
                            <signatureCode code="S"/>
                            <signatureText>X</signatureText>
                            <AgentOrgSDS classCode="AGNT">
                                <agentOrganizationSDS classCode="ORG" determinerCode="INSTANCE">
                                    <id extension="C88046" root="1.2.826.0.1285.0.1.10"/>
                                </agentOrganizationSDS>
                            </AgentOrgSDS>
                        </author>
                        <responsibleParty typeCode="RESP">
                            <agentDirectory classCode="AGNT">
                                <part typeCode="PART">
                                    <Agent classCode="AGNT">
                                        <id root="298F8D0B-C3B9-0598-4D0E-3ADB6F7B1DEF"/>
                                        <code code="125676002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Person">
                                            <originalText>Partner</originalText>
                                        </code>
                                        <agentPerson classCode="PSN" determinerCode="INSTANCE">
                                            <name>
                                                <prefix>Dr</prefix>
                                                <given>John</given>
                                                <family>Mcallister</family>
                                            </name>
                                        </agentPerson>
                                    </Agent>
                                </part>
                                <part typeCode="PART">
                                    <Agent classCode="AGNT">
                                        <id root="B06AD8D8-D6FB-8F07-39C7-6BF81CA317C4"/>
                                        <code code="309394004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="General Practitioner Principal">
                                            <originalText>General Medical Practitioner</originalText>
                                        </code>
                                        <agentPerson classCode="PSN" determinerCode="INSTANCE">
                                            <name>
                                                <prefix>Dr</prefix>
                                                <given>Deborah</given>
                                                <family>Turner</family>
                                            </name>
                                        </agentPerson>
                                    </Agent>
                                </part>
                                <part typeCode="PART">
                                    <Agent classCode="AGNT">
                                        <id root="E7E7B550-09EF-BE85-C20F-34598014166C"/>
                                        <id extension="12345" root="2.16.840.1.113883.2.1.4.2"/>
                                        <code code="309394004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="General Practitioner Principal">
                                            <originalText>General Medical Practitioner</originalText>
                                        </code>
                                        <agentPerson classCode="PSN" determinerCode="INSTANCE">
                                            <name>
                                                <prefix>Dr</prefix>
                                                <given>helen</given>
                                                <family>tallantyre</family>
                                            </name>
                                        </agentPerson>
                                    </Agent>
                                </part>
                                <part typeCode="PART">
                                    <Agent classCode="AGNT">
                                        <id root="46E2B5B3-85CC-0036-08BA-2D85C06FE36E"/>
                                        <code code="309394004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="General Practitioner Principal">
                                            <originalText>General Medical Practitioner</originalText>
                                        </code>
                                        <agentPerson classCode="PSN" determinerCode="INSTANCE">
                                            <name>
                                                <prefix>Dr</prefix>
                                                <given>Deborah</given>
                                                <family>Turner</family>
                                            </name>
                                        </agentPerson>
                                    </Agent>
                                </part>
                            </agentDirectory>
                        </responsibleParty>
                        <component typeCode="COMP">
                            <ehrComposition classCode="COMPOSITION" moodCode="EVN">
                                <id root="C07745C6-ADAC-11E2-883C-B639E5B05B1F"/>
                                <code code="25671000000102" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Surgery Consultation Note">
                                    <originalText>GP Surgery</originalText>
                                </code>
                                <statusCode code="COMPLETE"/>
                                <effectiveTime>
                                    <center nullFlavor="NI"/>
                                </effectiveTime>
                                <availabilityTime value="20000331"/>
                                <author contextControlCode="OP" typeCode="AUT">
                                    <time value="20170518091207"/>
                                    <agentRef classCode="AGNT">
                                        <id root="E7E7B550-09EF-BE85-C20F-34598014166C"/>
                                    </agentRef>
                                </author>
                                <Participant2 contextControlCode="OP" typeCode="RESP">
                                    <agentRef classCode="AGNT">
                                        <id root="298F8D0B-C3B9-0598-4D0E-3ADB6F7B1DEF"/>
                                    </agentRef>
                                </Participant2>
                                <component typeCode="COMP">
                                    <CompoundStatement classCode="TOPIC" moodCode="EVN">
                                        <id root="A3B4FDCD-0978-41D0-A2B4-414019FD6EB9"/>
                                        <code code="Z....00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="UnspecifiedCondtions"/>
                                        <statusCode code="COMPLETE"/>
                                        <effectiveTime>
                                            <center nullFlavor="NI"/>
                                        </effectiveTime>
                                        <availabilityTime value="20000331"/>
                                        <component contextConductionInd="true" typeCode="COMP">
                                            <CompoundStatement classCode="CATEGORY" moodCode="EVN">
                                                <id root="7F92E884-118B-4296-8689-94C6F55C592B"/>
                                                <code code="394831002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Examination"/>
                                                <statusCode code="COMPLETE"/>
                                                <effectiveTime>
                                                    <center nullFlavor="NI"/>
                                                </effectiveTime>
                                                <availabilityTime value="20000331"/>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07745C6-ADAC-11E2-883F-B639E5B05B1F"/>
                                                        <code code="761D300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic sclerotherapy to lesion upper GI tract">
                                                            <translation code="173807009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07745C6-ADAC-11E2-883F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07745C6-ADAC-11E2-8840-B639E5B05B1F"/>
                                                        <code code="761D400" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic destruction lesion upper GI tract NEC">
                                                            <translation code="173803008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07745C6-ADAC-11E2-8840-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0776CD6-ADAC-11E2-8840-B639E5B05B1F"/>
                                                        <code code="761D500" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Endoscopic injection haemostasis of duodenal ulcer">
                                                            <translation code="314627002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0776CD6-ADAC-11E2-8840-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0776CD6-ADAC-11E2-8841-B639E5B05B1F"/>
                                                        <code code="761D600" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Endoscopic injection haemostasis of gastric ulcer">
                                                            <translation code="314629004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0776CD6-ADAC-11E2-8841-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0776CD6-ADAC-11E2-8842-B639E5B05B1F"/>
                                                        <code code="761D700" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibre endosc injec therapy les upper gastrointest tract NEC">
                                                            <translation code="173803008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0776CD6-ADAC-11E2-8842-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0776CD6-ADAC-11E2-8843-B639E5B05B1F"/>
                                                        <code code="761D800" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreopt endoscop rubber band ligation of upper GIT varices">
                                                            <translation code="426841006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0776CD6-ADAC-11E2-8843-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07793E6-ADAC-11E2-8843-B639E5B05B1F"/>
                                                        <code code="761Dy00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic extirpation lesion upper GI tract OS">
                                                            <translation code="173803008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07793E6-ADAC-11E2-8843-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07793E6-ADAC-11E2-8844-B639E5B05B1F"/>
                                                        <code code="761Dz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic extirpation lesion upper GI tract NOS">
                                                            <translation code="173803008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07793E6-ADAC-11E2-8844-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07793E6-ADAC-11E2-8845-B639E5B05B1F"/>
                                                        <code code="761E.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other therapeutic fibreoptic endoscopy on upper GI tract">
                                                            <translation code="450574008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07793E6-ADAC-11E2-8845-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07793E6-ADAC-11E2-8846-B639E5B05B1F"/>
                                                        <code code="761E.11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other therapeutic gastroscopy">
                                                            <translation code="450574008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07793E6-ADAC-11E2-8846-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07793E6-ADAC-11E2-8847-B639E5B05B1F"/>
                                                        <code code="761E000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic insertion prosthesis in upper GI tract">
                                                            <translation code="173812005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07793E6-ADAC-11E2-8847-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07793E6-ADAC-11E2-8848-B639E5B05B1F"/>
                                                        <code code="761E100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic removal of FB from upper GI tract">
                                                            <translation code="173813000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07793E6-ADAC-11E2-8848-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C077BAF6-ADAC-11E2-8848-B639E5B05B1F"/>
                                                        <code code="761E200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic dilation of upper GI tract">
                                                            <translation code="265370000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C077BAF6-ADAC-11E2-8848-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C077BAF6-ADAC-11E2-8849-B639E5B05B1F"/>
                                                        <code code="761E211" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic dilation of oesophagus">
                                                            <translation code="235197007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C077BAF6-ADAC-11E2-8849-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C077BAF6-ADAC-11E2-884A-B639E5B05B1F"/>
                                                        <code code="761E300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Temporary percutaneous endoscopic gastrostomy">
                                                            <translation code="312340001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C077BAF6-ADAC-11E2-884A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C077BAF6-ADAC-11E2-884B-B639E5B05B1F"/>
                                                        <code code="761E400" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Permanent percutaneous endoscopic gastrostomy">
                                                            <translation code="312341002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C077BAF6-ADAC-11E2-884B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C077BAF6-ADAC-11E2-884C-B639E5B05B1F"/>
                                                        <code code="761E500" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreop endoscop reduction intussusception gastroenterostomy">
                                                            <translation code="426690009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C077BAF6-ADAC-11E2-884C-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C077BAF6-ADAC-11E2-884D-B639E5B05B1F"/>
                                                        <code code="761E600" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic percutaneous insert gastrostomy (PEG)">
                                                            <translation code="426267007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C077BAF6-ADAC-11E2-884D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C077E210-ADAC-11E2-884D-B639E5B05B1F"/>
                                                        <code code="761E700" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fib end pressure-controlled balloon dilat low oesoph sphinc">
                                                            <translation code="426431003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C077E210-ADAC-11E2-884D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C077E210-ADAC-11E2-884E-B639E5B05B1F"/>
                                                        <code code="761E800" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic dilation of upper GI tract NEC">
                                                            <translation code="265370000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C077E210-ADAC-11E2-884E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0785740-ADAC-11E2-884E-B639E5B05B1F"/>
                                                        <code code="761E900" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic removal of gastrostomy tube">
                                                            <translation code="427389003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0785740-ADAC-11E2-884E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0785740-ADAC-11E2-884F-B639E5B05B1F"/>
                                                        <code code="761EA00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic percutaneous insertion of gastrostomy">
                                                            <translation code="426267007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0785740-ADAC-11E2-884F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0785740-ADAC-11E2-8850-B639E5B05B1F"/>
                                                        <code code="761Ey00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other fibreoptic therapeutic endoscopy on upper GI tract OS">
                                                            <translation code="386831001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0785740-ADAC-11E2-8850-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0787E50-ADAC-11E2-8850-B639E5B05B1F"/>
                                                        <code code="761Ez00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other fibreoptic therapeutic endoscopy on upper GI tract NOS">
                                                            <translation code="386831001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0787E50-ADAC-11E2-8850-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0787E50-ADAC-11E2-8851-B639E5B05B1F"/>
                                                        <code code="761F.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Diagnostic fibreoptic endoscopic exam of upper GI tract">
                                                            <translation code="265371001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0787E50-ADAC-11E2-8851-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0787E50-ADAC-11E2-8852-B639E5B05B1F"/>
                                                        <code code="761F.11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Diagnostic fibreoptic gastroscopy">
                                                            <translation code="265371001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0787E50-ADAC-11E2-8852-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0787E50-ADAC-11E2-8853-B639E5B05B1F"/>
                                                        <code code="761F000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Diagnostic fibreoptic endoscopy &amp; biopsy of upper GI tract">
                                                            <translation code="173820007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0787E50-ADAC-11E2-8853-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0787E50-ADAC-11E2-8854-B639E5B05B1F"/>
                                                        <code code="761F100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Diagnostic gastroscopy NEC">
                                                            <translation code="386831001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0787E50-ADAC-11E2-8854-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0787E50-ADAC-11E2-8855-B639E5B05B1F"/>
                                                        <code code="761F200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Diagnostic gastroscopy via stoma">
                                                            <translation code="173822004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0787E50-ADAC-11E2-8855-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078A560-ADAC-11E2-8855-B639E5B05B1F"/>
                                                        <code code="761F300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Gastroesophagoscopy via gastrotomy">
                                                            <translation code="173823009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078A560-ADAC-11E2-8855-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078A560-ADAC-11E2-8856-B639E5B05B1F"/>
                                                        <code code="761F400" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Endoscopic upper gastrointestinal ultrasound">
                                                            <translation code="169252006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078A560-ADAC-11E2-8856-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078A560-ADAC-11E2-8857-B639E5B05B1F"/>
                                                        <code code="761F500" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic ultrasound examination of upper GIT">
                                                            <translation code="169252006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078A560-ADAC-11E2-8857-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078A560-ADAC-11E2-8858-B639E5B05B1F"/>
                                                        <code code="761F600" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Diag fibre endos insert Bravo pH caps upper gastroint tract">
                                                            <translation code="768976007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078A560-ADAC-11E2-8858-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078A560-ADAC-11E2-8859-B639E5B05B1F"/>
                                                        <code code="761F700" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibr endos exam upp gastrointest tract stain gastric mucosa">
                                                            <translation code="426011008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078A560-ADAC-11E2-8859-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078A560-ADAC-11E2-885A-B639E5B05B1F"/>
                                                        <code code="761Fy00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Diagnostic fibreoptic endoscopic exam upper GI tract OS">
                                                            <translation code="265371001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078A560-ADAC-11E2-885A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078CC70-ADAC-11E2-885A-B639E5B05B1F"/>
                                                        <code code="761Fz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Diagnostic fibreoptic endoscopic exam upper GI tract NOS">
                                                            <translation code="265371001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078CC70-ADAC-11E2-885A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078CC70-ADAC-11E2-885B-B639E5B05B1F"/>
                                                        <code code="761Fz11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Gastroscopy NEC">
                                                            <translation code="386831001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078CC70-ADAC-11E2-885B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078CC70-ADAC-11E2-885C-B639E5B05B1F"/>
                                                        <code code="761Fz12" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Upper gastrointestinal endoscopy">
                                                            <originalText>Upper Gastrointestinal endoscopy</originalText>
                                                            <translation code="76009000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078CC70-ADAC-11E2-885C-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078CC70-ADAC-11E2-885D-B639E5B05B1F"/>
                                                        <code code="761G.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Intubation of stomach">
                                                            <translation code="33120003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078CC70-ADAC-11E2-885D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078CC70-ADAC-11E2-885E-B639E5B05B1F"/>
                                                        <code code="761G000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Intubation of stomach for ph manometry">
                                                            <translation code="173828000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078CC70-ADAC-11E2-885E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078CC70-ADAC-11E2-885F-B639E5B05B1F"/>
                                                        <code code="761G100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Intubation of stomach for pressure manometry">
                                                            <translation code="173829008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078CC70-ADAC-11E2-885F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078CC70-ADAC-11E2-8860-B639E5B05B1F"/>
                                                        <code code="761G200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Irrigation of stomach">
                                                            <translation code="173830003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078CC70-ADAC-11E2-8860-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078F380-ADAC-11E2-8860-B639E5B05B1F"/>
                                                        <code code="761G211" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Lavage of stomach">
                                                            <translation code="173830003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078F380-ADAC-11E2-8860-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078F380-ADAC-11E2-8861-B639E5B05B1F"/>
                                                        <code code="761G212" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Washout of stomach">
                                                            <translation code="173830003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078F380-ADAC-11E2-8861-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078F380-ADAC-11E2-8862-B639E5B05B1F"/>
                                                        <code code="761G300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Intubation of stomach for study of gastric secretion">
                                                            <translation code="173831004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078F380-ADAC-11E2-8862-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078F380-ADAC-11E2-8863-B639E5B05B1F"/>
                                                        <code code="761G400" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Intubation of stomach NEC">
                                                            <translation code="33120003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078F380-ADAC-11E2-8863-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C078F380-ADAC-11E2-8864-B639E5B05B1F"/>
                                                        <code code="761Gy00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified intubation of stomach">
                                                            <translation code="33120003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C078F380-ADAC-11E2-8864-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0791A90-ADAC-11E2-8864-B639E5B05B1F"/>
                                                        <code code="761Gz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Intubation of stomach NOS">
                                                            <translation code="33120003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0791A90-ADAC-11E2-8864-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0791A90-ADAC-11E2-8865-B639E5B05B1F"/>
                                                        <code code="761H.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other operations on stomach">
                                                            <translation code="16453004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0791A90-ADAC-11E2-8865-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0791A90-ADAC-11E2-8866-B639E5B05B1F"/>
                                                        <code code="761H000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Insertion of gastric bubble">
                                                            <translation code="20794002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0791A90-ADAC-11E2-8866-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0791A90-ADAC-11E2-8867-B639E5B05B1F"/>
                                                        <code code="761H011" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Insertion of gastric balloon">
                                                            <translation code="20794002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0791A90-ADAC-11E2-8867-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0791A90-ADAC-11E2-8868-B639E5B05B1F"/>
                                                        <code code="761H100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Attention to gastric bubble">
                                                            <translation code="173838005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0791A90-ADAC-11E2-8868-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0791A90-ADAC-11E2-8869-B639E5B05B1F"/>
                                                        <code code="761H200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Induction of emesis">
                                                            <translation code="133880003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0791A90-ADAC-11E2-8869-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0791A90-ADAC-11E2-886A-B639E5B05B1F"/>
                                                        <code code="761H300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Administration of activated charcoal">
                                                            <translation code="226871000000103" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0791A90-ADAC-11E2-886A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07941A0-ADAC-11E2-886A-B639E5B05B1F"/>
                                                        <code code="761H411" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Removal of gastric bubble">
                                                            <translation code="61784001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07941A0-ADAC-11E2-886A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07941A0-ADAC-11E2-886B-B639E5B05B1F"/>
                                                        <code code="761H400" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Removal of gastric balloon">
                                                            <translation code="61784001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07941A0-ADAC-11E2-886B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07941A0-ADAC-11E2-886C-B639E5B05B1F"/>
                                                        <code code="761H500" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Insertion of gastric balloon">
                                                            <translation code="20794002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07941A0-ADAC-11E2-886C-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07941A0-ADAC-11E2-886D-B639E5B05B1F"/>
                                                        <code code="761H600" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Attention to gastric balloon">
                                                            <translation code="173838005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07941A0-ADAC-11E2-886D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07941A0-ADAC-11E2-886E-B639E5B05B1F"/>
                                                        <code code="761Hy00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified other operation on stomach">
                                                            <translation code="16453004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07941A0-ADAC-11E2-886E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07968B0-ADAC-11E2-886E-B639E5B05B1F"/>
                                                        <code code="761Hz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other operation on stomach NOS">
                                                            <translation code="16453004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07968B0-ADAC-11E2-886E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07968B0-ADAC-11E2-886F-B639E5B05B1F"/>
                                                        <code code="761J.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Operations on gastric ulcer">
                                                            <translation code="173841001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07968B0-ADAC-11E2-886F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07968B0-ADAC-11E2-8870-B639E5B05B1F"/>
                                                        <code code="761J.11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Stomach ulcer operations">
                                                            <translation code="173841001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07968B0-ADAC-11E2-8870-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07968B0-ADAC-11E2-8871-B639E5B05B1F"/>
                                                        <code code="761J000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Closure of perforated gastric ulcer">
                                                            <translation code="173842008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07968B0-ADAC-11E2-8871-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07968B0-ADAC-11E2-8872-B639E5B05B1F"/>
                                                        <code code="761J100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Closure of gastric ulcer NEC">
                                                            <translation code="173841001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07968B0-ADAC-11E2-8872-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07968B0-ADAC-11E2-8873-B639E5B05B1F"/>
                                                        <code code="761J111" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Suture of ulcer of stomach NEC">
                                                            <translation code="307259004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07968B0-ADAC-11E2-8873-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0798FC0-ADAC-11E2-8873-B639E5B05B1F"/>
                                                        <code code="761Jy00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified operation on gastric ulcer">
                                                            <translation code="173841001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0798FC0-ADAC-11E2-8873-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0798FC0-ADAC-11E2-8874-B639E5B05B1F"/>
                                                        <code code="761Jz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Operation on gastric ulcer NOS">
                                                            <translation code="173841001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0798FC0-ADAC-11E2-8874-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C0798FC0-ADAC-11E2-8875-B639E5B05B1F"/>
                                                        <code code="761K.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic extirpation of lesion of stomach">
                                                            <translation code="425632006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C0798FC0-ADAC-11E2-8875-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079B6D0-ADAC-11E2-8875-B639E5B05B1F"/>
                                                        <code code="761K000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic submucosal resection lesion of stomach">
                                                            <translation code="425494001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079B6D0-ADAC-11E2-8875-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079B6D0-ADAC-11E2-8876-B639E5B05B1F"/>
                                                        <code code="761K100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic photodynamic therapy lesion of stomach">
                                                            <translation code="425889008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079B6D0-ADAC-11E2-8876-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079B6D0-ADAC-11E2-8877-B639E5B05B1F"/>
                                                        <code code="761Ky00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="OS fibreoptic endoscopic extirpation of lesion of stomach">
                                                            <translation code="425632006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079B6D0-ADAC-11E2-8877-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079B6D0-ADAC-11E2-8878-B639E5B05B1F"/>
                                                        <code code="761Kz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibreoptic endoscopic extirpation of lesion of stomach NOS">
                                                            <translation code="425632006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079B6D0-ADAC-11E2-8878-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079B6D0-ADAC-11E2-8879-B639E5B05B1F"/>
                                                        <code code="761L.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Therap fibr endos operations on upper gastrointestinal tract">
                                                            <translation code="76009000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079B6D0-ADAC-11E2-8879-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079B6D0-ADAC-11E2-887A-B639E5B05B1F"/>
                                                        <code code="761L000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibr endos endoluminal plication gastro-oesophageal junction">
                                                            <translation code="427421001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079B6D0-ADAC-11E2-887A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079B6D0-ADAC-11E2-887B-B639E5B05B1F"/>
                                                        <code code="761Ly00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="OS ther fibr endoscopic ops on upper gastrointestinal tract">
                                                            <translation code="385423007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079B6D0-ADAC-11E2-887B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079DDE0-ADAC-11E2-887B-B639E5B05B1F"/>
                                                        <code code="761Lz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Ther fibr endoscopic ops on upper gastrointestinal tract NOS">
                                                            <translation code="385423007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079DDE0-ADAC-11E2-887B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079DDE0-ADAC-11E2-887C-B639E5B05B1F"/>
                                                        <code code="761M.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other fibre endos extirp lesion upper gastrointestinal tract">
                                                            <translation code="173803008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079DDE0-ADAC-11E2-887C-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079DDE0-ADAC-11E2-887D-B639E5B05B1F"/>
                                                        <code code="761M000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibr end submucosal resect les upper gastrointestinal tract">
                                                            <translation code="426889002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079DDE0-ADAC-11E2-887D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079DDE0-ADAC-11E2-887E-B639E5B05B1F"/>
                                                        <code code="761M100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fibr end photodynamic thera les upper gastrointestinal tract">
                                                            <translation code="427240005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079DDE0-ADAC-11E2-887E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079DDE0-ADAC-11E2-887F-B639E5B05B1F"/>
                                                        <code code="761My00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="OS other fibre endos extirp les upper gastrointestinal tract">
                                                            <translation code="173803008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079DDE0-ADAC-11E2-887F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C079DDE0-ADAC-11E2-8880-B639E5B05B1F"/>
                                                        <code code="761Mz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Oth fib endos extirp lesion upper gastrointestinal tract NOS">
                                                            <translation code="173803008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C079DDE0-ADAC-11E2-8880-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A04F0-ADAC-11E2-8880-B639E5B05B1F"/>
                                                        <code code="761y.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified operations on stomach or pylorus">
                                                            <translation code="173712002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A04F0-ADAC-11E2-8880-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A04F0-ADAC-11E2-8881-B639E5B05B1F"/>
                                                        <code code="761z.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Stomach and pylorus operations NOS">
                                                            <translation code="173712002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A04F0-ADAC-11E2-8881-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A04F0-ADAC-11E2-8882-B639E5B05B1F"/>
                                                        <code code="762..00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Duodenum operations">
                                                            <translation code="82764005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A04F0-ADAC-11E2-8882-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A04F0-ADAC-11E2-8883-B639E5B05B1F"/>
                                                        <code code="7620.11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Duodenectomy">
                                                            <translation code="73759005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A04F0-ADAC-11E2-8883-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A04F0-ADAC-11E2-8884-B639E5B05B1F"/>
                                                        <code code="7620.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Excision of duodenum">
                                                            <translation code="73759005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A04F0-ADAC-11E2-8884-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A04F0-ADAC-11E2-8885-B639E5B05B1F"/>
                                                        <code code="7620000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Gastroduodenectomy">
                                                            <translation code="83857006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A04F0-ADAC-11E2-8885-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A2C00-ADAC-11E2-8885-B639E5B05B1F"/>
                                                        <code code="7620100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Total excision of duodenum">
                                                            <translation code="173848007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A2C00-ADAC-11E2-8885-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A2C00-ADAC-11E2-8886-B639E5B05B1F"/>
                                                        <code code="7620200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Partial excision of duodenum">
                                                            <translation code="173849004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A2C00-ADAC-11E2-8886-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A2C00-ADAC-11E2-8887-B639E5B05B1F"/>
                                                        <code code="7620y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified excision of duodenum">
                                                            <translation code="73759005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A2C00-ADAC-11E2-8887-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A2C00-ADAC-11E2-8888-B639E5B05B1F"/>
                                                        <code code="7620z11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Duodenectomy NEC">
                                                            <translation code="73759005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A2C00-ADAC-11E2-8888-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A2C00-ADAC-11E2-8889-B639E5B05B1F"/>
                                                        <code code="7620z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Excision of duodenum NOS">
                                                            <translation code="73759005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A2C00-ADAC-11E2-8889-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A2C00-ADAC-11E2-888A-B639E5B05B1F"/>
                                                        <code code="7621.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open extirpation of lesion of duodenum">
                                                            <translation code="173852007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A2C00-ADAC-11E2-888A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A2C00-ADAC-11E2-888B-B639E5B05B1F"/>
                                                        <code code="7621000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Excision of lesion of duodenum">
                                                            <translation code="88888008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A2C00-ADAC-11E2-888B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A5310-ADAC-11E2-888B-B639E5B05B1F"/>
                                                        <code code="7621100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open destruction of lesion of duodenum">
                                                            <translation code="173853002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A5310-ADAC-11E2-888B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A5310-ADAC-11E2-888C-B639E5B05B1F"/>
                                                        <code code="7621y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified open extirpation of lesion of duodenum">
                                                            <translation code="173852007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A5310-ADAC-11E2-888C-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A5310-ADAC-11E2-888D-B639E5B05B1F"/>
                                                        <code code="7621z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open extirpation of lesion of duodenum NOS">
                                                            <translation code="173852007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A5310-ADAC-11E2-888D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A5310-ADAC-11E2-888E-B639E5B05B1F"/>
                                                        <code code="7622.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Bypass of duodenum">
                                                            <translation code="173856005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A5310-ADAC-11E2-888E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A5310-ADAC-11E2-888F-B639E5B05B1F"/>
                                                        <code code="7622000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Bypass of duodenum by anastomosis of stomach to jejunum">
                                                            <translation code="173857001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A5310-ADAC-11E2-888F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C07A7A20-ADAC-11E2-888F-B639E5B05B1F"/>
                                                        <code code="7622100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Bypass of duodenum by anastomosis of duodenum to duodenum">
                                                            <translation code="173858006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C07A7A20-ADAC-11E2-888F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                            </CompoundStatement>
                                        </component>
                                    </CompoundStatement>
                                </component>
                            </ehrComposition>
                        </component>
                        <component typeCode="COMP">
                            <ehrComposition classCode="COMPOSITION" moodCode="EVN">
                                <id root="C11B5062-ADAC-11E2-9964-B639E5B05B1F"/>
                                <code code="25671000000102" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Surgery Consultation Note">
                                    <originalText>GP Surgery</originalText>
                                </code>
                                <statusCode code="COMPLETE"/>
                                <effectiveTime>
                                    <center nullFlavor="NI"/>
                                </effectiveTime>
                                <availabilityTime value="20000331"/>
                                <author contextControlCode="OP" typeCode="AUT">
                                    <time value="20170518091207"/>
                                    <agentRef classCode="AGNT">
                                        <id root="E7E7B550-09EF-BE85-C20F-34598014166C"/>
                                    </agentRef>
                                </author>
                                <Participant2 contextControlCode="OP" typeCode="RESP">
                                    <agentRef classCode="AGNT">
                                        <id root="298F8D0B-C3B9-0598-4D0E-3ADB6F7B1DEF"/>
                                    </agentRef>
                                </Participant2>
                                <component typeCode="COMP">
                                    <CompoundStatement classCode="TOPIC" moodCode="EVN">
                                        <id root="B5F910DE-C7E7-4527-8339-82734FC6337D"/>
                                        <code code="Z....00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="UnspecifiedCondtions"/>
                                        <statusCode code="COMPLETE"/>
                                        <effectiveTime>
                                            <center nullFlavor="NI"/>
                                        </effectiveTime>
                                        <availabilityTime value="20000331"/>
                                        <component contextConductionInd="true" typeCode="COMP">
                                            <CompoundStatement classCode="CATEGORY" moodCode="EVN">
                                                <id root="3271F0CC-5CEB-4AE3-B173-8B3D4E30B3AB"/>
                                                <code code="394831002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Examination"/>
                                                <statusCode code="COMPLETE"/>
                                                <effectiveTime>
                                                    <center nullFlavor="NI"/>
                                                </effectiveTime>
                                                <availabilityTime value="20000331"/>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B5062-ADAC-11E2-9967-B639E5B05B1F"/>
                                                        <code code="7E0FA00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Focused ultrasound to lesion of uterus">
                                                            <translation code="448350000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B5062-ADAC-11E2-9967-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B7772-ADAC-11E2-9967-B639E5B05B1F"/>
                                                        <code code="7E0Fy00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified operation on uterus">
                                                            <translation code="176884007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B7772-ADAC-11E2-9967-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B7772-ADAC-11E2-9968-B639E5B05B1F"/>
                                                        <code code="7E0Fz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Operation on uterus NOS">
                                                            <translation code="176884007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B7772-ADAC-11E2-9968-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B7772-ADAC-11E2-9969-B639E5B05B1F"/>
                                                        <code code="7E0G.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other vaginal operations on uterus">
                                                            <translation code="176884007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B7772-ADAC-11E2-9969-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B7772-ADAC-11E2-996A-B639E5B05B1F"/>
                                                        <code code="7E0G000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Vaginal excision of lesion of uterus">
                                                            <translation code="176895001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B7772-ADAC-11E2-996A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B7772-ADAC-11E2-996B-B639E5B05B1F"/>
                                                        <code code="7E0G100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Endometrial balloon ablation">
                                                            <translation code="313187005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B7772-ADAC-11E2-996B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B9E82-ADAC-11E2-996B-B639E5B05B1F"/>
                                                        <code code="7E0G200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Microwave ablation of endometrium NEC">
                                                            <translation code="407610007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B9E82-ADAC-11E2-996B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B9E82-ADAC-11E2-996C-B639E5B05B1F"/>
                                                        <code code="7E0G300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Free circulating saline ablation of endometrium">
                                                            <translation code="427499007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B9E82-ADAC-11E2-996C-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B9E82-ADAC-11E2-996D-B639E5B05B1F"/>
                                                        <code code="7E0G400" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Radiofrequency endometrial ablation">
                                                            <translation code="236900009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B9E82-ADAC-11E2-996D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B9E82-ADAC-11E2-996E-B639E5B05B1F"/>
                                                        <code code="7E0G500" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Photodynamic ablation of endometrium">
                                                            <translation code="429386000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B9E82-ADAC-11E2-996E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B9E82-ADAC-11E2-996F-B639E5B05B1F"/>
                                                        <code code="7E0Gy00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified other vaginal operation on uterus">
                                                            <translation code="176884007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B9E82-ADAC-11E2-996F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11B9E82-ADAC-11E2-9970-B639E5B05B1F"/>
                                                        <code code="7E0Gz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other vaginal operation on uterus NOS">
                                                            <translation code="176884007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11B9E82-ADAC-11E2-9970-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BC592-ADAC-11E2-9970-B639E5B05B1F"/>
                                                        <code code="7E0H.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Plastic operations on uterus">
                                                            <translation code="763781000000102" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BC592-ADAC-11E2-9970-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BC592-ADAC-11E2-9971-B639E5B05B1F"/>
                                                        <code code="7E0H000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Connection of uterus to vagina">
                                                            <translation code="761001000000109" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BC592-ADAC-11E2-9971-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BC592-ADAC-11E2-9972-B639E5B05B1F"/>
                                                        <code code="7E0Hy00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified plastic operations on uterus">
                                                            <translation code="763781000000102" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BC592-ADAC-11E2-9972-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BC592-ADAC-11E2-9973-B639E5B05B1F"/>
                                                        <code code="7E0Hz00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Plastic operations on uterus NOS">
                                                            <translation code="763781000000102" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BC592-ADAC-11E2-9973-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BC592-ADAC-11E2-9974-B639E5B05B1F"/>
                                                        <code code="7E0J.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other introduction of gamete into uterine cavity">
                                                            <translation code="176843009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BC592-ADAC-11E2-9974-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BECA2-ADAC-11E2-9974-B639E5B05B1F"/>
                                                        <code code="7E0J000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Transmyometrial transfer of embryo to uterus">
                                                            <translation code="448543003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BECA2-ADAC-11E2-9974-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BECA2-ADAC-11E2-9975-B639E5B05B1F"/>
                                                        <code code="7E0y.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified operations on uterus">
                                                            <translation code="176884007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BECA2-ADAC-11E2-9975-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BECA2-ADAC-11E2-9976-B639E5B05B1F"/>
                                                        <code code="7E0z.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Uterus operations NOS">
                                                            <translation code="79876008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BECA2-ADAC-11E2-9976-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BECA2-ADAC-11E2-9977-B639E5B05B1F"/>
                                                        <code code="7E1..00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Fallopian tube operations">
                                                            <translation code="392250009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BECA2-ADAC-11E2-9977-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BECA2-ADAC-11E2-9978-B639E5B05B1F"/>
                                                        <code code="7E1..11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Tubal operations - fallopian">
                                                            <translation code="392250009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BECA2-ADAC-11E2-9978-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BECA2-ADAC-11E2-9979-B639E5B05B1F"/>
                                                        <code code="7E10.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Bilateral excision of adnexa of uterus">
                                                            <translation code="176901003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BECA2-ADAC-11E2-9979-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11BECA2-ADAC-11E2-997A-B639E5B05B1F"/>
                                                        <code code="7E10000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Bilateral salpingoophorectomy">
                                                            <translation code="29827000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11BECA2-ADAC-11E2-997A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C13B2-ADAC-11E2-997A-B639E5B05B1F"/>
                                                        <code code="7E10100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Bilateral salpingectomy NEC">
                                                            <translation code="25811000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C13B2-ADAC-11E2-997A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C13B2-ADAC-11E2-997B-B639E5B05B1F"/>
                                                        <code code="7E10200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Bilateral oophorectomy NEC">
                                                            <translation code="76876009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C13B2-ADAC-11E2-997B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C13B2-ADAC-11E2-997C-B639E5B05B1F"/>
                                                        <code code="7E10y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified bilateral excision of adnexa of uterus">
                                                            <translation code="176901003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C13B2-ADAC-11E2-997C-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C13B2-ADAC-11E2-997D-B639E5B05B1F"/>
                                                        <code code="7E10z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Bilateral excision of adnexa of uterus NOS">
                                                            <translation code="176901003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C13B2-ADAC-11E2-997D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C13B2-ADAC-11E2-997E-B639E5B05B1F"/>
                                                        <code code="7E11.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Unilateral excision of adnexa of uterus">
                                                            <translation code="176907004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C13B2-ADAC-11E2-997E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C13B2-ADAC-11E2-997F-B639E5B05B1F"/>
                                                        <code code="7E11000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Unilateral salpingoophorectomy NEC">
                                                            <translation code="116028008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C13B2-ADAC-11E2-997F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C3AC2-ADAC-11E2-997F-B639E5B05B1F"/>
                                                        <code code="7E11100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Salpingoophorectomy remaining solitary fallop tube and ovary">
                                                            <translation code="116028008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C3AC2-ADAC-11E2-997F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C3AC2-ADAC-11E2-9980-B639E5B05B1F"/>
                                                        <code code="7E11200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Unilateral salpingectomy NEC">
                                                            <translation code="120053002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C3AC2-ADAC-11E2-9980-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C3AC2-ADAC-11E2-9981-B639E5B05B1F"/>
                                                        <code code="7E11300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Salpingectomy of remaining solitary fallopian tube NEC">
                                                            <translation code="120053002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C3AC2-ADAC-11E2-9981-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C3AC2-ADAC-11E2-9982-B639E5B05B1F"/>
                                                        <code code="7E11400" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Unilateral oophorectomy NEC">
                                                            <translation code="33159007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C3AC2-ADAC-11E2-9982-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C3AC2-ADAC-11E2-9983-B639E5B05B1F"/>
                                                        <code code="7E11500" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Oophorectomy of remaining solitary ovary NEC">
                                                            <translation code="302376006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C3AC2-ADAC-11E2-9983-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C3AC2-ADAC-11E2-9984-B639E5B05B1F"/>
                                                        <code code="7E11600" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Right salpingoophorectomy">
                                                            <translation code="176914002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C3AC2-ADAC-11E2-9984-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C61D2-ADAC-11E2-9984-B639E5B05B1F"/>
                                                        <code code="7E11700" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Left salpingoophorectomy">
                                                            <translation code="176915001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C61D2-ADAC-11E2-9984-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C61D2-ADAC-11E2-9985-B639E5B05B1F"/>
                                                        <code code="7E11800" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Right salpingectomy">
                                                            <translation code="176916000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C61D2-ADAC-11E2-9985-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C61D2-ADAC-11E2-9986-B639E5B05B1F"/>
                                                        <code code="7E11900" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Left salpingectomy">
                                                            <translation code="176917009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C61D2-ADAC-11E2-9986-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C61D2-ADAC-11E2-9987-B639E5B05B1F"/>
                                                        <code code="7E11y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified unilateral excision of adnexa of uterus">
                                                            <translation code="176757001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C61D2-ADAC-11E2-9987-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C61D2-ADAC-11E2-9988-B639E5B05B1F"/>
                                                        <code code="7E11z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Unilateral excision of adnexa of uterus NOS">
                                                            <translation code="176907004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C61D2-ADAC-11E2-9988-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C61D2-ADAC-11E2-9989-B639E5B05B1F"/>
                                                        <code code="7E12.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other excision of adnexa of uterus">
                                                            <translation code="176757001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C61D2-ADAC-11E2-9989-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C88E2-ADAC-11E2-9989-B639E5B05B1F"/>
                                                        <code code="7E12000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Salpingoophorectomy NEC">
                                                            <translation code="116028008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C88E2-ADAC-11E2-9989-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C88E2-ADAC-11E2-998A-B639E5B05B1F"/>
                                                        <code code="7E12100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Salpingectomy NEC">
                                                            <translation code="120053002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C88E2-ADAC-11E2-998A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C88E2-ADAC-11E2-998B-B639E5B05B1F"/>
                                                        <code code="7E12200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Oophorectomy NEC">
                                                            <translation code="83152002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C88E2-ADAC-11E2-998B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C88E2-ADAC-11E2-998C-B639E5B05B1F"/>
                                                        <code code="7E12300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Right oophorectomy NEC">
                                                            <translation code="302376006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C88E2-ADAC-11E2-998C-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C88E2-ADAC-11E2-998D-B639E5B05B1F"/>
                                                        <code code="7E12400" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Left oophorectomy NEC">
                                                            <translation code="302377002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C88E2-ADAC-11E2-998D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11C88E2-ADAC-11E2-998E-B639E5B05B1F"/>
                                                        <code code="7E12y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified other excision of adnexa of uterus">
                                                            <translation code="176757001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11C88E2-ADAC-11E2-998E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CAFF2-ADAC-11E2-998E-B639E5B05B1F"/>
                                                        <code code="7E12z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other excision of adnexa of uterus NOS">
                                                            <translation code="176757001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CAFF2-ADAC-11E2-998E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CAFF2-ADAC-11E2-998F-B639E5B05B1F"/>
                                                        <code code="7E13.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Partial excision of fallopian tube">
                                                            <translation code="62692004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CAFF2-ADAC-11E2-998F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CAFF2-ADAC-11E2-9990-B639E5B05B1F"/>
                                                        <code code="7E13000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Excision of lesion of fallopian tube">
                                                            <translation code="44793005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CAFF2-ADAC-11E2-9990-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CAFF2-ADAC-11E2-9991-B639E5B05B1F"/>
                                                        <code code="7E13100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Excision of ectopic ovarian pregnancy">
                                                            <translation code="176928008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CAFF2-ADAC-11E2-9991-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CAFF2-ADAC-11E2-9992-B639E5B05B1F"/>
                                                        <code code="7E13300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Excision of ruptured ectopic tubal pregnancy">
                                                            <translation code="176929000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CAFF2-ADAC-11E2-9992-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CAFF2-ADAC-11E2-9993-B639E5B05B1F"/>
                                                        <code code="7E13y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified partial excision of fallopian tube">
                                                            <translation code="62692004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CAFF2-ADAC-11E2-9993-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CD702-ADAC-11E2-9993-B639E5B05B1F"/>
                                                        <code code="7E13z11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Partial salpingectomy NEC">
                                                            <translation code="62692004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CD702-ADAC-11E2-9993-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CD702-ADAC-11E2-9994-B639E5B05B1F"/>
                                                        <code code="7E13z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Partial excision of fallopian tube NOS">
                                                            <translation code="62692004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CD702-ADAC-11E2-9994-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CD702-ADAC-11E2-9995-B639E5B05B1F"/>
                                                        <code code="7E14.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Placement of prosthesis in fallopian tube">
                                                            <translation code="38043007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CD702-ADAC-11E2-9995-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CD702-ADAC-11E2-9996-B639E5B05B1F"/>
                                                        <code code="7E14000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Insertion of tubal prosthesis into fallopian tube">
                                                            <translation code="38043007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CD702-ADAC-11E2-9996-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CD702-ADAC-11E2-9997-B639E5B05B1F"/>
                                                        <code code="7E14100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Revision of tubal prosthesis in fallopian tube">
                                                            <translation code="176933007" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CD702-ADAC-11E2-9997-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CD702-ADAC-11E2-9998-B639E5B05B1F"/>
                                                        <code code="7E14200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Removal of tubal prosthesis from fallopian tube">
                                                            <translation code="5460001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CD702-ADAC-11E2-9998-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CFE12-ADAC-11E2-9998-B639E5B05B1F"/>
                                                        <code code="7E14y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified placement of prosthesis in fallopian tube">
                                                            <translation code="271414005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CFE12-ADAC-11E2-9998-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CFE12-ADAC-11E2-9999-B639E5B05B1F"/>
                                                        <code code="7E14z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Placement of prosthesis in fallopian tube NOS">
                                                            <translation code="271414005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CFE12-ADAC-11E2-9999-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CFE12-ADAC-11E2-999A-B639E5B05B1F"/>
                                                        <code code="7E15.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open bilateral occlusion of fallopian tubes">
                                                            <translation code="176936004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CFE12-ADAC-11E2-999A-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CFE12-ADAC-11E2-999B-B639E5B05B1F"/>
                                                        <code code="7E15.11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open bilateral female sterilisation">
                                                            <translation code="176936004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CFE12-ADAC-11E2-999B-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CFE12-ADAC-11E2-999C-B639E5B05B1F"/>
                                                        <code code="7E15000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open bilateral ligation of fallopian tubes">
                                                            <translation code="176937008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CFE12-ADAC-11E2-999C-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CFE12-ADAC-11E2-999D-B639E5B05B1F"/>
                                                        <code code="7E15011" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Pomeroy open bilateral ligation of fallopian tubes">
                                                            <translation code="176937008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CFE12-ADAC-11E2-999D-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11CFE12-ADAC-11E2-999E-B639E5B05B1F"/>
                                                        <code code="7E15100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open bilateral clipping of fallopian tubes">
                                                            <translation code="265071006" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11CFE12-ADAC-11E2-999E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D2522-ADAC-11E2-999E-B639E5B05B1F"/>
                                                        <code code="7E15111" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open bilateral ringing of fallopian tubes">
                                                            <translation code="274975009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D2522-ADAC-11E2-999E-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D2522-ADAC-11E2-999F-B639E5B05B1F"/>
                                                        <code code="7E15y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified open bilateral occlusion of fallopian tubes">
                                                            <translation code="176936004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D2522-ADAC-11E2-999F-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D2522-ADAC-11E2-99A0-B639E5B05B1F"/>
                                                        <code code="7E15z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open bilateral occlusion of fallopian tubes NOS">
                                                            <translation code="176936004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D2522-ADAC-11E2-99A0-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D2522-ADAC-11E2-99A1-B639E5B05B1F"/>
                                                        <code code="7E16.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other open occlusion of fallopian tube">
                                                            <translation code="300896003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D2522-ADAC-11E2-99A1-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D2522-ADAC-11E2-99A2-B639E5B05B1F"/>
                                                        <code code="7E16.11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other open female sterilisation">
                                                            <translation code="292002002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D2522-ADAC-11E2-99A2-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D2522-ADAC-11E2-99A3-B639E5B05B1F"/>
                                                        <code code="7E16.12" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Unilateral occlusion of fallopian tube">
                                                            <translation code="274977001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D2522-ADAC-11E2-99A3-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D4C3C-ADAC-11E2-99A3-B639E5B05B1F"/>
                                                        <code code="7E16000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open ligation of remaining solitary fallopian tube">
                                                            <translation code="176942000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D4C3C-ADAC-11E2-99A3-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D4C3C-ADAC-11E2-99A4-B639E5B05B1F"/>
                                                        <code code="7E16100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open ligation of fallopian tube NEC">
                                                            <translation code="300896003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D4C3C-ADAC-11E2-99A4-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D4C3C-ADAC-11E2-99A5-B639E5B05B1F"/>
                                                        <code code="7E16200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open clipping of remaining solitary fallopian tube">
                                                            <translation code="265073009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D4C3C-ADAC-11E2-99A5-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D4C3C-ADAC-11E2-99A6-B639E5B05B1F"/>
                                                        <code code="7E16211" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open clipping of residual solitary fallopian tube">
                                                            <translation code="265073009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D4C3C-ADAC-11E2-99A6-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D4C3C-ADAC-11E2-99A7-B639E5B05B1F"/>
                                                        <code code="7E16212" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open ringing of remaining solitary fallopian tube">
                                                            <translation code="307301008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D4C3C-ADAC-11E2-99A7-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D4C3C-ADAC-11E2-99A8-B639E5B05B1F"/>
                                                        <code code="7E16300" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open clipping of fallopian tube NEC">
                                                            <translation code="300896003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D4C3C-ADAC-11E2-99A8-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D734C-ADAC-11E2-99A8-B639E5B05B1F"/>
                                                        <code code="7E16311" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open ringing of fallopian tube NEC">
                                                            <translation code="300896003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D734C-ADAC-11E2-99A8-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D734C-ADAC-11E2-99A9-B639E5B05B1F"/>
                                                        <code code="7E16400" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open clipping of right fallopian tube">
                                                            <translation code="265075002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D734C-ADAC-11E2-99A9-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D734C-ADAC-11E2-99AA-B639E5B05B1F"/>
                                                        <code code="7E16411" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open ringing of right fallopian tube">
                                                            <translation code="274979003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D734C-ADAC-11E2-99AA-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D734C-ADAC-11E2-99AB-B639E5B05B1F"/>
                                                        <code code="7E16500" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open clipping of left fallopian tube">
                                                            <translation code="265076001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D734C-ADAC-11E2-99AB-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D734C-ADAC-11E2-99AC-B639E5B05B1F"/>
                                                        <code code="7E16511" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open ringing of left fallopian tube">
                                                            <translation code="274980000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D734C-ADAC-11E2-99AC-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D734C-ADAC-11E2-99AD-B639E5B05B1F"/>
                                                        <code code="7E16600" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open ligation of right fallopian tube">
                                                            <translation code="176948001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D734C-ADAC-11E2-99AD-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D9A5C-ADAC-11E2-99AD-B639E5B05B1F"/>
                                                        <code code="7E16700" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open ligation of left fallopian tube">
                                                            <translation code="176949009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D9A5C-ADAC-11E2-99AD-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D9A5C-ADAC-11E2-99AE-B639E5B05B1F"/>
                                                        <code code="7E16y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified other open occlusion of fallopian tube">
                                                            <translation code="300896003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D9A5C-ADAC-11E2-99AE-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D9A5C-ADAC-11E2-99AF-B639E5B05B1F"/>
                                                        <code code="7E16z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other open occlusion of fallopian tube NOS">
                                                            <translation code="300896003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D9A5C-ADAC-11E2-99AF-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D9A5C-ADAC-11E2-99B0-B639E5B05B1F"/>
                                                        <code code="7E17.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open reversal of female sterilisation">
                                                            <translation code="176952001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D9A5C-ADAC-11E2-99B0-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D9A5C-ADAC-11E2-99B1-B639E5B05B1F"/>
                                                        <code code="7E17.12" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open reversal of female sterilisation">
                                                            <translation code="176952001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D9A5C-ADAC-11E2-99B1-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11D9A5C-ADAC-11E2-99B2-B639E5B05B1F"/>
                                                        <code code="7E17.11" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open reversal of tubal ligation">
                                                            <translation code="176952001" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11D9A5C-ADAC-11E2-99B2-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11DC16C-ADAC-11E2-99B2-B639E5B05B1F"/>
                                                        <code code="7E17000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Reanastomosis of fallopian tube NEC">
                                                            <translation code="391993002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11DC16C-ADAC-11E2-99B2-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11DC16C-ADAC-11E2-99B3-B639E5B05B1F"/>
                                                        <code code="7E17100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open removal of clip from fallopian tube NEC">
                                                            <translation code="236927008" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11DC16C-ADAC-11E2-99B3-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11DC16C-ADAC-11E2-99B4-B639E5B05B1F"/>
                                                        <code code="7E17111" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open removal of ring from fallopian tube NEC">
                                                            <translation code="236928003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11DC16C-ADAC-11E2-99B4-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11DC16C-ADAC-11E2-99B5-B639E5B05B1F"/>
                                                        <code code="7E17y00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other specified open reversal of female sterilisation">
                                                            <translation code="128312004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11DC16C-ADAC-11E2-99B5-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11DC16C-ADAC-11E2-99B6-B639E5B05B1F"/>
                                                        <code code="7E17z00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Open reversal of female sterilisation NOS">
                                                            <translation code="128312004" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11DC16C-ADAC-11E2-99B6-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11DC16C-ADAC-11E2-99B7-B639E5B05B1F"/>
                                                        <code code="7E18.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Other repair of fallopian tube">
                                                            <translation code="392250009" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11DC16C-ADAC-11E2-99B7-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11DE87C-ADAC-11E2-99B7-B639E5B05B1F"/>
                                                        <code code="7E18000" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Reconstruction of fallopian tube">
                                                            <translation code="120062000" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11DE87C-ADAC-11E2-99B7-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11DE87C-ADAC-11E2-99B8-B639E5B05B1F"/>
                                                        <code code="7E18100" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Replantation of fallopian tube">
                                                            <translation code="399158005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11DE87C-ADAC-11E2-99B8-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                                <component contextConductionInd="true" typeCode="COMP">
                                                    <ObservationStatement classCode="OBS" moodCode="EVN">
                                                        <id root="C11DE87C-ADAC-11E2-99B9-B639E5B05B1F"/>
                                                        <code code="7E18200" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="Anastomosis of fallopian tube NEC">
                                                            <translation code="391993002" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                        </code>
                                                        <statusCode code="COMPLETE"/>
                                                        <effectiveTime>
                                                            <center nullFlavor="NI"/>
                                                        </effectiveTime>
                                                        <availabilityTime value="20000331"/>
                                                        <pertinentInformation typeCode="PERT">
                                                            <sequenceNumber value="+1"/>
                                                            <pertinentAnnotation classCode="OBS" moodCode="EVN">
                                                                <text>C11DE87C-ADAC-11E2-99B9-B639E5B05B1F</text>
                                                            </pertinentAnnotation>
                                                        </pertinentInformation>
                                                    </ObservationStatement>
                                                </component>
                                            </CompoundStatement>
                                        </component>
                                    </CompoundStatement>
                                </component>
                            </ehrComposition>
                        </component>
                       
                        <component typeCode="COMP">
                            <ehrComposition classCode="COMPOSITION" moodCode="EVN">
                                <id root="72CF99F6-251C-40DA-B2AD-92CB28827977"/>
                                <code code="196391000000103" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Non-consultation medication data">
                                    <originalText>Medication Issue</originalText>
                                </code>
                                <statusCode code="COMPLETE"/>
                                <effectiveTime>
                                    <center value="20160901"/>
                                </effectiveTime>
                                <availabilityTime value="20160901"/>
                                <author contextControlCode="OP" typeCode="AUT">
                                    <time value="20170518091207"/>
                                    <agentRef classCode="AGNT">
                                        <id root="E7E7B550-09EF-BE85-C20F-34598014166C"/>
                                    </agentRef>
                                </author>
                                <Participant2 contextControlCode="OP" typeCode="RESP">
                                    <agentRef classCode="AGNT">
                                        <id root="B06AD8D8-D6FB-8F07-39C7-6BF81CA317C4"/>
                                    </agentRef>
                                </Participant2>
                                <component typeCode="COMP">
                                    <MedicationStatement classCode="SBADM" moodCode="ORD">
                                        <id root="ABF2B06E-E7DA-45E6-8FD7-B589BA11F8DC"/>
                                        <statusCode code="COMPLETE"/>
                                        <effectiveTime>
                                            <center nullFlavor="NI"/>
                                        </effectiveTime>
                                        <availabilityTime value="20160901"/>
                                        <consumable typeCode="CSM">
                                            <manufacturedProduct classCode="MANU">
                                                <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                                                    <code code="LOCA1691" codeSystem="2.16.840.1.113883.2.1.6.9" displayName="Loperamide 2mg capsules">
                                                        <translation code="317378005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                    </code>
                                                    <quantity unit="1" value="30">
                                                        <translation value="30">
                                                            <originalText>capsule</originalText>
                                                        </translation>
                                                    </quantity>
                                                </manufacturedMaterial>
                                            </manufacturedProduct>
                                        </consumable>
                                        <component typeCode="COMP">
                                            <ehrSupplyPrescribe classCode="SPLY" moodCode="ORD">
                                                <id root="ADA08729-435C-4F4A-B177-DA4DE0253BDC"/>
                                                <code code="9bG0.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="NHS prescription"/>
                                                <statusCode code="COMPLETE"/>
                                                <availabilityTime value="20160901"/>
                                                <quantity unit="1" value="30">
                                                    <translation value="30">
                                                        <originalText>capsule</originalText>
                                                    </translation>
                                                </quantity>
                                                <inFulfillmentOf typeCode="FLFS">
                                                    <priorMedicationRef classCode="SBADM" moodCode="ORD">
                                                        <id root="EC938F8C-D27A-4E82-A1EA-55FA77CAA01E"/>
                                                    </priorMedicationRef>
                                                </inFulfillmentOf>
                                            </ehrSupplyPrescribe>
                                        </component>
                                        <pertinentInformation typeCode="PERT">
                                            <pertinentMedicationDosage classCode="SBADM" moodCode="RMD">
                                                <text>Two To Be Taken Immediately Then One To Be Taken After Each Loose Motion</text>
                                            </pertinentMedicationDosage>
                                        </pertinentInformation>
                                    </MedicationStatement>
                                </component>
                            </ehrComposition>
                        </component>
                        <component typeCode="COMP">
                            <ehrComposition classCode="COMPOSITION" moodCode="EVN">
                                <id root="0CE0A6CD-5EFF-4E94-AC72-FC9870109148"/>
                                <code code="196391000000103" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Non-consultation medication data">
                                    <originalText>Medication Issue</originalText>
                                </code>
                                <statusCode code="COMPLETE"/>
                                <effectiveTime>
                                    <center value="20160901"/>
                                </effectiveTime>
                                <availabilityTime value="20160901"/>
                                <author contextControlCode="OP" typeCode="AUT">
                                    <time value="20170518091207"/>
                                    <agentRef classCode="AGNT">
                                        <id root="E7E7B550-09EF-BE85-C20F-34598014166C"/>
                                    </agentRef>
                                </author>
                                <Participant2 contextControlCode="OP" typeCode="RESP">
                                    <agentRef classCode="AGNT">
                                        <id root="B06AD8D8-D6FB-8F07-39C7-6BF81CA317C4"/>
                                    </agentRef>
                                </Participant2>
                                <component typeCode="COMP">
                                    <MedicationStatement classCode="SBADM" moodCode="ORD">
                                        <id root="7399043D-FBD9-4492-9430-944B578FAD4B"/>
                                        <statusCode code="COMPLETE"/>
                                        <effectiveTime>
                                            <center nullFlavor="NI"/>
                                        </effectiveTime>
                                        <availabilityTime value="20160901"/>
                                        <consumable typeCode="CSM">
                                            <manufacturedProduct classCode="MANU">
                                                <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                                                    <code code="LOCA1691" codeSystem="2.16.840.1.113883.2.1.6.9" displayName="Loperamide 2mg capsules">
                                                        <translation code="317378005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                    </code>
                                                    <quantity unit="1" value="30">
                                                        <translation value="30">
                                                            <originalText>capsule</originalText>
                                                        </translation>
                                                    </quantity>
                                                </manufacturedMaterial>
                                            </manufacturedProduct>
                                        </consumable>
                                        <component typeCode="COMP">
                                            <ehrSupplyPrescribe classCode="SPLY" moodCode="ORD">
                                                <id root="05EBD55F-67C0-452F-A207-101E677E36DD"/>
                                                <code code="9bG0.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="NHS prescription"/>
                                                <statusCode code="COMPLETE"/>
                                                <availabilityTime value="20160901"/>
                                                <quantity unit="1" value="30">
                                                    <translation value="30">
                                                        <originalText>capsule</originalText>
                                                    </translation>
                                                </quantity>
                                                <inFulfillmentOf typeCode="FLFS">
                                                    <priorMedicationRef classCode="SBADM" moodCode="ORD">
                                                        <id root="EC938F8C-D27A-4E82-A1EA-55FA77CAA01E"/>
                                                    </priorMedicationRef>
                                                </inFulfillmentOf>
                                            </ehrSupplyPrescribe>
                                        </component>
                                        <pertinentInformation typeCode="PERT">
                                            <pertinentMedicationDosage classCode="SBADM" moodCode="RMD">
                                                <text>Two To Be Taken Immediately Then One To Be Taken After Each Loose Motion</text>
                                            </pertinentMedicationDosage>
                                        </pertinentInformation>
                                    </MedicationStatement>
                                </component>
                            </ehrComposition>
                        </component>
                        <component typeCode="COMP">
                            <ehrComposition classCode="COMPOSITION" moodCode="EVN">
                                <id root="390EFF0F-8AD7-4AB3-9E70-C5A018977BE3"/>
                                <code code="196391000000103" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Non-consultation medication data">
                                    <originalText>Medication Issue</originalText>
                                </code>
                                <statusCode code="COMPLETE"/>
                                <effectiveTime>
                                    <center value="20160901"/>
                                </effectiveTime>
                                <availabilityTime value="20160901"/>
                                <author contextControlCode="OP" typeCode="AUT">
                                    <time value="20170518091207"/>
                                    <agentRef classCode="AGNT">
                                        <id root="E7E7B550-09EF-BE85-C20F-34598014166C"/>
                                    </agentRef>
                                </author>
                                <Participant2 contextControlCode="OP" typeCode="RESP">
                                    <agentRef classCode="AGNT">
                                        <id root="B06AD8D8-D6FB-8F07-39C7-6BF81CA317C4"/>
                                    </agentRef>
                                </Participant2>
                                <component typeCode="COMP">
                                    <MedicationStatement classCode="SBADM" moodCode="ORD">
                                        <id root="9567E17C-B5BC-4246-AC45-CAFCD1CC1ABF"/>
                                        <statusCode code="COMPLETE"/>
                                        <effectiveTime>
                                            <center nullFlavor="NI"/>
                                        </effectiveTime>
                                        <availabilityTime value="20160901"/>
                                        <consumable typeCode="CSM">
                                            <manufacturedProduct classCode="MANU">
                                                <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                                                    <code code="LOCA1691" codeSystem="2.16.840.1.113883.2.1.6.9" displayName="Loperamide 2mg capsules">
                                                        <translation code="317378005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                    </code>
                                                    <quantity unit="1" value="30">
                                                        <translation value="30">
                                                            <originalText>capsule</originalText>
                                                        </translation>
                                                    </quantity>
                                                </manufacturedMaterial>
                                            </manufacturedProduct>
                                        </consumable>
                                        <component typeCode="COMP">
                                            <ehrSupplyPrescribe classCode="SPLY" moodCode="ORD">
                                                <id root="9C39616F-E049-4473-B3C5-6E978EBB7CFE"/>
                                                <code code="9bG0.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="NHS prescription"/>
                                                <statusCode code="COMPLETE"/>
                                                <availabilityTime value="20160901"/>
                                                <quantity unit="1" value="30">
                                                    <translation value="30">
                                                        <originalText>capsule</originalText>
                                                    </translation>
                                                </quantity>
                                                <inFulfillmentOf typeCode="FLFS">
                                                    <priorMedicationRef classCode="SBADM" moodCode="ORD">
                                                        <id root="EC938F8C-D27A-4E82-A1EA-55FA77CAA01E"/>
                                                    </priorMedicationRef>
                                                </inFulfillmentOf>
                                            </ehrSupplyPrescribe>
                                        </component>
                                        <pertinentInformation typeCode="PERT">
                                            <pertinentMedicationDosage classCode="SBADM" moodCode="RMD">
                                                <text>Two To Be Taken Immediately Then One To Be Taken After Each Loose Motion</text>
                                            </pertinentMedicationDosage>
                                        </pertinentInformation>
                                    </MedicationStatement>
                                </component>
                            </ehrComposition>
                        </component>
                        <component typeCode="COMP">
                            <ehrComposition classCode="COMPOSITION" moodCode="EVN">
                                <id root="EE422823-372B-4F3C-A21D-EB1789D0C706"/>
                                <code code="196391000000103" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Non-consultation medication data">
                                    <originalText>Medication Issue</originalText>
                                </code>
                                <statusCode code="COMPLETE"/>
                                <effectiveTime>
                                    <center value="20160901"/>
                                </effectiveTime>
                                <availabilityTime value="20160901"/>
                                <author contextControlCode="OP" typeCode="AUT">
                                    <time value="20170518091207"/>
                                    <agentRef classCode="AGNT">
                                        <id root="E7E7B550-09EF-BE85-C20F-34598014166C"/>
                                    </agentRef>
                                </author>
                                <Participant2 contextControlCode="OP" typeCode="RESP">
                                    <agentRef classCode="AGNT">
                                        <id root="B06AD8D8-D6FB-8F07-39C7-6BF81CA317C4"/>
                                    </agentRef>
                                </Participant2>
                                <component typeCode="COMP">
                                    <MedicationStatement classCode="SBADM" moodCode="ORD">
                                        <id root="61424E65-0D2E-428A-B30C-6C09A81FF9FD"/>
                                        <statusCode code="COMPLETE"/>
                                        <effectiveTime>
                                            <center nullFlavor="NI"/>
                                        </effectiveTime>
                                        <availabilityTime value="20160901"/>
                                        <consumable typeCode="CSM">
                                            <manufacturedProduct classCode="MANU">
                                                <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                                                    <code code="LOCA1691" codeSystem="2.16.840.1.113883.2.1.6.9" displayName="Loperamide 2mg capsules">
                                                        <translation code="317378005" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                    </code>
                                                    <quantity unit="1" value="30">
                                                        <translation value="30">
                                                            <originalText>capsule</originalText>
                                                        </translation>
                                                    </quantity>
                                                </manufacturedMaterial>
                                            </manufacturedProduct>
                                        </consumable>
                                        <component typeCode="COMP">
                                            <ehrSupplyPrescribe classCode="SPLY" moodCode="ORD">
                                                <id root="8479C85A-287A-4432-BB2F-45C7875AC126"/>
                                                <code code="9bG0.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="NHS prescription"/>
                                                <statusCode code="COMPLETE"/>
                                                <availabilityTime value="20160901"/>
                                                <quantity unit="1" value="30">
                                                    <translation value="30">
                                                        <originalText>capsule</originalText>
                                                    </translation>
                                                </quantity>
                                                <inFulfillmentOf typeCode="FLFS">
                                                    <priorMedicationRef classCode="SBADM" moodCode="ORD">
                                                        <id root="EC938F8C-D27A-4E82-A1EA-55FA77CAA01E"/>
                                                    </priorMedicationRef>
                                                </inFulfillmentOf>
                                            </ehrSupplyPrescribe>
                                        </component>
                                        <pertinentInformation typeCode="PERT">
                                            <pertinentMedicationDosage classCode="SBADM" moodCode="RMD">
                                                <text>Two To Be Taken Immediately Then One To Be Taken After Each Loose Motion</text>
                                            </pertinentMedicationDosage>
                                        </pertinentInformation>
                                    </MedicationStatement>
                                </component>
                            </ehrComposition>
                        </component>
                        <component typeCode="COMP">
                            <ehrComposition classCode="COMPOSITION" moodCode="EVN">
                                <id root="8CE3E013-E6A4-4AF8-B10C-78FEE148E3E3"/>
                                <code code="196391000000103" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Non-consultation medication data">
                                    <originalText>Medication Issue</originalText>
                                </code>
                                <statusCode code="COMPLETE"/>
                                <effectiveTime>
                                    <center value="20160901"/>
                                </effectiveTime>
                                <availabilityTime value="20160901"/>
                                <author contextControlCode="OP" typeCode="AUT">
                                    <time value="20170518091207"/>
                                    <agentRef classCode="AGNT">
                                        <id root="E7E7B550-09EF-BE85-C20F-34598014166C"/>
                                    </agentRef>
                                </author>
                                <Participant2 contextControlCode="OP" typeCode="RESP">
                                    <agentRef classCode="AGNT">
                                        <id root="B06AD8D8-D6FB-8F07-39C7-6BF81CA317C4"/>
                                    </agentRef>
                                </Participant2>
                                <component typeCode="COMP">
                                    <MedicationStatement classCode="SBADM" moodCode="ORD">
                                        <id root="A8A9FDDE-9276-4B40-9EFB-D0C60D719E37"/>
                                        <statusCode code="COMPLETE"/>
                                        <effectiveTime>
                                            <center nullFlavor="NI"/>
                                        </effectiveTime>
                                        <availabilityTime value="20160901"/>
                                        <consumable typeCode="CSM">
                                            <manufacturedProduct classCode="MANU">
                                                <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                                                    <code code="ASDI223" codeSystem="2.16.840.1.113883.2.1.6.9" displayName="Aspirin 300mg dispersible tablets">
                                                        <translation code="329526003" codeSystem="2.16.840.1.113883.2.1.3.2.4.15"/>
                                                    </code>
                                                    <quantity unit="1" value="32">
                                                        <translation value="32">
                                                            <originalText>tablet</originalText>
                                                        </translation>
                                                    </quantity>
                                                </manufacturedMaterial>
                                            </manufacturedProduct>
                                        </consumable>
                                        <component typeCode="COMP">
                                            <ehrSupplyPrescribe classCode="SPLY" moodCode="ORD">
                                                <id root="74E9B6A0-79D2-4B8B-A7D4-FC6DF7B89A2D"/>
                                                <code code="9bG0.00" codeSystem="2.16.840.1.113883.2.1.6.2" displayName="NHS prescription"/>
                                                <statusCode code="COMPLETE"/>
                                                <availabilityTime value="20160901"/>
                                                <quantity unit="1" value="32">
                                                    <translation value="32">
                                                        <originalText>tablet</originalText>
                                                    </translation>
                                                </quantity>
                                                <inFulfillmentOf typeCode="FLFS">
                                                    <priorMedicationRef classCode="SBADM" moodCode="ORD">
                                                        <id root="E5FABF4C-AF97-4218-BB1A-8088B5C65BF2"/>
                                                    </priorMedicationRef>
                                                </inFulfillmentOf>
                                            </ehrSupplyPrescribe>
                                        </component>
                                        <pertinentInformation typeCode="PERT">
                                            <pertinentMedicationDosage classCode="SBADM" moodCode="RMD">
                                                <text>One To Be Taken Every Four To Six Hours When Required</text>
                                            </pertinentMedicationDosage>
                                        </pertinentInformation>
                                    </MedicationStatement>
                                </component>
                            </ehrComposition>
                        </component>
                    </ehrFolder>
                </component>
                <inFulfillmentOf typeCode="FLFS">
                    <priorEhrRequest classCode="EXTRACT" moodCode="RQO">
                        <id root="EEAC4B80-002D-11EC-ADF8-D116B4D56A89"/>
                    </priorEhrRequest>
                </inFulfillmentOf>
                <limitation inversionInd="true" typeCode="LIMIT">
                    <limitingEhrExtractSpecification classCode="OBS" moodCode="DEF">
                        <id root="1B10EE20-1742-404A-8BB3-5165ED3BC5AC"/>
                        <code code="715751000000105" codeSystem="2.16.840.1.113883.2.1.3.2.4.15" displayName="Entire record available to originator"/>
                    </limitingEhrExtractSpecification>
                </limitation>
            </EhrExtract>
        </subject>
    </ControlActEvent>
</RCMR_IN030000UK06>"}]
}